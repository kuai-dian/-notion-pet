{"version":3,"file":"icon.js","sources":["../../src/iconfont/icon.tsx"],"sourcesContent":["import {\n  computed, defineComponent, h, onMounted,\n} from 'vue';\n\nimport props from './props/props';\nimport useSizeProps from '../utils/use-size-props';\nimport ConfigContext from '../utils/config-context';\nimport { checkLinkAndLoad } from '../utils/check-url-and-load';\n\nimport '../style/css';\n\nconst { classPrefix } = ConfigContext;\n\nconst CDN_ICONFONT_URL = 'https://tdesign.gtimg.com/icon/0.0.3/fonts/index.css';\n\nexport const IconFont = defineComponent({\n  name: 'IconFont',\n  props,\n  setup(props, { attrs }) {\n    const propsSize = computed(() => props.size);\n\n    const { className: sizeClassName, style: sizeStyle } = useSizeProps(propsSize);\n\n    const name = computed(() => props.name || '');\n\n    const finalUrl = computed(() => {\n      let url = [];\n      url = props.url instanceof Array ? props.url.concat() : [props.url];\n      if (props.loadDefaultIcons) url.push(CDN_ICONFONT_URL);\n      return url;\n    });\n\n    const classNames = computed(() => [\n      `${classPrefix}-icon`,\n      {\n        [name.value]: props.url,\n        [`${classPrefix}-icon-${name.value}`]: !props.url,\n      },\n      sizeClassName.value,\n    ]);\n\n    const finalStyle = computed(() => ({ ...sizeStyle.value, ...(attrs.style as Styles) }));\n\n    onMounted(() => {\n      Array.from(new Set(finalUrl.value as string[])).forEach((url: string) => {\n        checkLinkAndLoad(url, `${classPrefix}-iconfont-stylesheet--unique-class`);\n      });\n    });\n\n    const finalProps = computed(() => ({\n      class: classNames.value,\n      style: finalStyle.value,\n      onClick: (e:MouseEvent) => props.onClick?.({ e }),\n    }));\n\n    return () => h(props.tag || 'i', finalProps.value);\n  },\n});\n\nexport default IconFont;\n"],"names":["classPrefix","ConfigContext","CDN_ICONFONT_URL","IconFont","defineComponent","name","props","setup","props2","attrs","propsSize","computed","size","className","sizeClassName","style","sizeStyle","useSizeProps","finalUrl","url","Array","concat","loadDefaultIcons","push","classNames","value","finalStyle","from","Set","forEach","finalProps","class","onClick","e","h","tag"],"mappings":";;;;;;;;;;;;;;;AAWA,IAAM;AAAEA,EAAAA;AAAF,IAAkBC,8BAAxB;AAEA,IAAMC,mBAAmB,sDAAzB;IAEaC,WAAWC,oBAAgB;AACtCC,EAAAA,MAAM,UADgC;AAEtCC,SAAAA,+BAFsC;;AAGtCC,EAAAA,MAAMC,cAAkB;AAAA,QAAX;AAAEC,MAAAA;AAAF,KAAW;QAChBC,YAAYC,aAAS,MAAMH,OAAMI;QAEjC;AAAEC,MAAAA,WAAWC,aAAb;AAA4BC,MAAAA,OAAOC;AAAnC,QAAiDC,8BAAaP;QAE9DL,OAAOM,aAAS,MAAMH,OAAMH,IAAN,IAAc;QAEpCa,WAAWP,aAAS,MAAM;UAC1BQ,MAAM;YACJX,OAAMW,GAAN,YAAqBC,KAArB,GAA6BZ,OAAMW,GAAN,CAAUE,MAAV,EAA7B,GAAkD,CAACb,OAAMW,GAAP;UACpDX,OAAMc,sBAAsBC,KAAKrB;aAC9BiB;;QAGHK,aAAab,aAAS,MAAM,WAC7BX,WAD6B,YAEhC;OACGK,KAAKoB,QAAQjB,OAAMW,GADtB;iBAEMnB,8BAAoBK,KAAKoB,SAAU,CAACjB,OAAMW;AAFhD,KAFgC,EAMhCL,cAAcW,KANkB;QAS5BC,aAAaf,aAAS,sCAAYK,UAAUS,KAAtB,GAAiChB,MAAMM,KAAvC;kBAElB,MAAM;YACRY,KAAK,IAAIC,GAAJ,CAAQV,SAASO,KAAjB,GAAqCI,QAASV,GAAD,IAAiB;+CACtDA,eAAQnB;;;QAIvB8B,aAAanB,aAAS;AAC1BoB,MAAAA,OAAOP,WAAWC;AAClBV,MAAAA,OAAOW,WAAWD;AAClBO,MAAAA,SAAUC,CAAD;AAAA;;AAAA,kCAAkBzB,OAAMwB,OAAxB,oDAAkB,qBAAAxB,QAAgB;AAAEyB,UAAAA;AAAF,UAAlC;AAAA;KAHiB;WAMrB,MAAMC,MAAE1B,OAAM2B,GAAN,IAAa,KAAKL,WAAWL;;;AAxCR;;;;;"}