import { _ as _defineProperty } from '../_chunks/dep-f4ac5808.js';
import { defineComponent, computed } from 'vue';
import renderFn from '../utils/render-fn.js';
import useSizeProps from '../utils/use-size-props.js';
import '../style/css.js';
import '../utils/use-common-classname.js';
import '../utils/config-context.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 16 16",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "path",
    "attrs": {
      "fill": "currentColor",
      "d": "M4 14V2h4.5v4.01h4V7.5h1V5.7a1 1 0 00-.29-.7L9.58 1.3a1 1 0 00-.71-.3H4c-.48 0-1 .34-1 .92v12.16c0 .58.52.92 1 .92h3.5v-1H4zm7.82-8.99H9.5V2.65L11.82 5z",
      "fillOpacity": 0.9,
      "fillRule": "evenodd",
      "clipRule": "evenodd"
    }
  }, {
    "tag": "path",
    "attrs": {
      "fill": "currentColor",
      "d": "M9.07 9.07V15h.86v-2.57h2.57c.51 0 .93-.42.93-.93V10a.92.92 0 00-.93-.93H9.07zm3.43 2.5H9.93V9.93h2.57c.04 0 .07.03.07.07v1.5c0 .04-.03.07-.07.07z",
      "fillOpacity": 0.9
    }
  }]
};
var filePowerpoint = defineComponent({
  name: "FilePowerpointIcon",
  props: {
    size: {
      type: String
    },
    onClick: {
      type: Function
    }
  },

  setup(props, _ref) {
    var {
      attrs
    } = _ref;
    var propsSize = computed(() => props.size);
    var {
      className,
      style
    } = useSizeProps(propsSize);
    var finalCls = computed(() => ["t-icon", "t-icon-file-powerpoint", className.value]);
    var finalStyle = computed(() => _objectSpread(_objectSpread({}, style.value), attrs.style));
    var finalProps = computed(() => ({
      class: finalCls.value,
      style: finalStyle.value,
      onClick: e => {
        var _props$onClick;

        return (_props$onClick = props.onClick) === null || _props$onClick === void 0 ? void 0 : _props$onClick.call(props, {
          e
        });
      }
    }));
    return () => renderFn(element, finalProps.value);
  }

});

export { filePowerpoint as default };
//# sourceMappingURL=file-powerpoint.js.map
