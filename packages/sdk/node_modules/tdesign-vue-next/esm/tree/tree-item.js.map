{"version":3,"file":"tree-item.js","sources":["../../src/tree/tree-item.tsx"],"sourcesContent":["import { VNode, h, defineComponent } from 'vue';\nimport isFunction from 'lodash/isFunction';\nimport { CaretRightSmallIcon } from 'tdesign-icons-vue-next';\nimport mixins from '../utils/mixins';\nimport getConfigReceiverMixins, { TreeConfig } from '../config-provider/config-receiver';\nimport TCheckBox from '../checkbox';\nimport TLoading from '../loading';\n\nimport TreeNode from '../_common/js/tree/tree-node';\nimport { getTNode } from './util';\nimport { TypeEventState } from './interface';\nimport { TREE_NODE_NAME, CLASS_NAMES } from './constants';\nimport { ClassName } from '../common';\nimport ripple from '../utils/ripple';\n\nexport const TreeItemProps = {\n  node: {\n    type: TreeNode,\n  },\n  treeScope: {\n    type: Object,\n  },\n};\n\nexport default defineComponent({\n  ...mixins(getConfigReceiverMixins<TreeConfig>('tree')),\n  name: TREE_NODE_NAME,\n  directives: { ripple },\n  props: TreeItemProps,\n  emits: ['click', 'change'],\n  created() {\n    if (this.node) {\n      this.data = this.node.data;\n    }\n  },\n  methods: {\n    getStyles(): string {\n      const { level } = this.node;\n      const styles = `--level: ${level};`;\n      return styles;\n    },\n    getClassList(): ClassName {\n      const { node } = this;\n      const list = [];\n      list.push(CLASS_NAMES.treeNode);\n      list.push({\n        [CLASS_NAMES.treeNodeOpen]: node.expanded,\n        [CLASS_NAMES.actived]: node.isActivable() ? node.actived : false,\n        [CLASS_NAMES.disabled]: node.isDisabled(),\n      });\n      return list;\n    },\n    renderLine(): VNode {\n      const { node, treeScope } = this;\n      const { line, scopedSlots } = treeScope;\n      const iconVisible = !!treeScope.icon;\n\n      let lineNode = null;\n      if (line === true) {\n        if (scopedSlots?.line) {\n          lineNode = scopedSlots.line({\n            node: node?.getModel(),\n          });\n        } else if (node.parent && node.tree) {\n          const { vmIsLeaf, vmIsFirst, level } = node;\n\n          const lineClasses = [];\n\n          // 每个节点绘制抵达上一层级的折线\n          lineClasses.push(CLASS_NAMES.line);\n\n          // 叶子节点，折线宽度延长，因为没有 icon 呈现\n          // 任意节点，icon 不呈现时也是要延长折线宽度\n          if (vmIsLeaf || !iconVisible) {\n            lineClasses.push(CLASS_NAMES.lineIsLeaf);\n          }\n\n          // 分支首节点，到上一节点的折线高度要缩短，让位给 icon 呈现\n          // 如果 icon 隐藏了，则不必缩短折线高度\n          if (vmIsFirst && iconVisible) {\n            lineClasses.push(CLASS_NAMES.lineIsFirst);\n          }\n\n          // 如果节点的父节点，不是最后的节点\n          // 则需要绘制节点延长线\n          const shadowStyles: string[] = [];\n          const parents = node.getParents();\n          parents.pop();\n          parents.forEach((pnode: TreeNode, index: number) => {\n            if (!pnode.vmIsLast) {\n              shadowStyles.push(`calc(-${index + 1} * var(--space)) 0 var(--color)`);\n            }\n          });\n\n          const styles = {\n            '--level': level,\n            'box-shadow': shadowStyles.join(','),\n          };\n\n          lineNode = <span class={lineClasses} style={styles}></span>;\n        }\n      } else {\n        lineNode = getTNode(line, {\n          node,\n        });\n      }\n      return lineNode;\n    },\n    getFolderIcon() {\n      if (isFunction(this.global.folderIcon)) {\n        return this.global.folderIcon(h);\n      }\n      return <CaretRightSmallIcon />;\n    },\n    renderIcon() {\n      const { node, treeScope } = this;\n      const { icon, scopedSlots } = treeScope;\n      let isDefaultIcon = false;\n\n      let iconNode = null;\n      if (icon === true) {\n        if (scopedSlots?.icon) {\n          iconNode = scopedSlots.icon({\n            node: node?.getModel(),\n          });\n        } else if (!node.vmIsLeaf) {\n          isDefaultIcon = true;\n          iconNode = this.getFolderIcon();\n          if (node.loading && node.expanded) {\n            iconNode = <TLoading />;\n          }\n        } else {\n          iconNode = '';\n        }\n      } else {\n        iconNode = getTNode(icon, {\n          node,\n        });\n      }\n      iconNode = (\n        <span\n          class={[CLASS_NAMES.treeIcon, CLASS_NAMES.folderIcon, isDefaultIcon ? CLASS_NAMES.treeIconDefault : '']}\n          trigger=\"expand\"\n          ignore=\"active\"\n        >\n          {iconNode}\n        </span>\n      );\n\n      return iconNode;\n    },\n    renderLabel() {\n      const { node, treeScope } = this;\n      const { label, scopedSlots, disableCheck } = treeScope;\n      const checkProps = treeScope.checkProps || {};\n\n      let labelNode = null;\n      if (label === true) {\n        if (scopedSlots.label) {\n          labelNode = scopedSlots.label({\n            node: node.getModel(),\n          });\n        } else {\n          labelNode = node.label || '';\n        }\n      } else {\n        labelNode = getTNode(label, {\n          node,\n        });\n      }\n\n      const labelClasses = [\n        CLASS_NAMES.treeLabel,\n        CLASS_NAMES.treeLabelStrictly,\n        {\n          [CLASS_NAMES.actived]: node.isActivable() ? node.actived : false,\n        },\n      ];\n\n      if (node.vmCheckable) {\n        let checkboxDisabled = false;\n        if (typeof disableCheck === 'function') {\n          checkboxDisabled = disableCheck(node);\n        } else {\n          checkboxDisabled = !!disableCheck;\n        }\n        if (node.isDisabled()) {\n          checkboxDisabled = true;\n        }\n        const itemCheckProps = {\n          ...checkProps,\n          disabled: checkboxDisabled,\n        };\n\n        labelNode = (\n          <TCheckBox\n            v-ripple\n            class={labelClasses}\n            checked={node.checked}\n            indeterminate={node.indeterminate}\n            disabled={node.isDisabled()}\n            name={node.value}\n            onChange={() => this.handleChange()}\n            ignore=\"expand,active\"\n            {...itemCheckProps}\n          >\n            {labelNode}\n          </TCheckBox>\n        );\n      } else {\n        const inner = <span style=\"position: relative\">{labelNode}</span>;\n        labelNode = node.isActivable() ? ( // 使用key是为了避免元素复用，从而顺利移除ripple指令\n          <span key=\"1\" v-ripple class={labelClasses}>\n            {inner}\n          </span>\n        ) : (\n          <span key=\"2\" class={labelClasses}>\n            {inner}\n          </span>\n        );\n      }\n\n      return labelNode;\n    },\n    renderOperations(): VNode {\n      const { node, treeScope } = this;\n      const { operations, scopedSlots } = treeScope;\n\n      let opNode = null;\n      if (scopedSlots?.operations) {\n        opNode = scopedSlots.operations({\n          node: node?.getModel(),\n        });\n      } else {\n        opNode = getTNode(operations, {\n          node,\n        });\n      }\n      if (opNode) {\n        opNode = (\n          <span class={CLASS_NAMES.treeOperations} ignore=\"active,expand\">\n            {opNode}\n          </span>\n        );\n      }\n      return opNode;\n    },\n    renderItem(): Array<VNode> {\n      const itemNodes: Array<VNode> = [];\n\n      const iconNode = this.renderIcon();\n\n      // 渲染连线排在渲染图标之后，是为了确认图标是否存在\n      const lineNode = this.renderLine();\n      if (lineNode) {\n        itemNodes.push(lineNode);\n      }\n\n      if (iconNode) {\n        itemNodes.push(iconNode);\n      }\n\n      const labelNode = this.renderLabel();\n      if (labelNode) {\n        itemNodes.push(labelNode);\n      }\n\n      // const spaceNode = (<span class={CLASS_NAMES.treeSpace}></span>);\n      // itemNodes.push(spaceNode);\n\n      const opNode = this.renderOperations();\n      if (opNode) {\n        itemNodes.push(opNode);\n      }\n\n      return itemNodes;\n    },\n    handleClick(evt: MouseEvent) {\n      const { node } = this;\n      const state: TypeEventState = {\n        mouseEvent: evt,\n        event: evt,\n        node,\n        path: node.getPath(),\n      };\n      this.$emit('click', state);\n    },\n    handleChange() {\n      const { node } = this;\n      const event = new Event('change');\n      const state: TypeEventState = {\n        event,\n        node,\n      };\n      this.$emit('change', state);\n    },\n  },\n  render() {\n    const { node } = this;\n\n    const {\n      // tree,\n      level,\n      // value,\n    } = node;\n\n    // 即使该节点从树中被删除也不要返回 null，null 会变成一个 comment 节点\n    // 导致 transition-group 向上添加退场动画时出现错误\n    // if (!tree || !tree.nodeMap.get(value)) {\n    //   return null;\n    // }\n\n    const styles = this.getStyles();\n    const classList = this.getClassList();\n    return (\n      <div\n        class={classList}\n        data-value={node.value}\n        data-level={level}\n        style={styles}\n        onClick={(evt: MouseEvent) => this.handleClick(evt)}\n      >\n        {this.renderItem()}\n      </div>\n    );\n  },\n});\n"],"names":["TreeItemProps","node","type","TreeNode","treeScope","Object","defineComponent","mixins","getConfigReceiverMixins","name","TREE_NODE_NAME","directives","ripple","props","emits","created","data","methods","getStyles","level","styles","getClassList","list","push","CLASS_NAMES","treeNode","treeNodeOpen","expanded","actived","isActivable","disabled","isDisabled","renderLine","line","scopedSlots","iconVisible","icon","lineNode","getModel","parent","tree","vmIsLeaf","vmIsFirst","lineClasses","lineIsLeaf","lineIsFirst","shadowStyles","parents","getParents","pop","forEach","pnode","index","vmIsLast","join","getTNode","getFolderIcon","isFunction","global","folderIcon","h","renderIcon","isDefaultIcon","iconNode","loading","treeIcon","treeIconDefault","renderLabel","label","disableCheck","checkProps","labelNode","labelClasses","treeLabel","treeLabelStrictly","vmCheckable","checkboxDisabled","itemCheckProps","checked","indeterminate","value","handleChange","inner","renderOperations","operations","opNode","treeOperations","renderItem","itemNodes","handleClick","evt","state","mouseEvent","event","path","getPath","$emit","Event","render","classList"],"mappings":"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"}