{"version":3,"file":"steps.js","sources":["../../src/steps/steps.tsx"],"sourcesContent":["import { defineComponent, ComponentPublicInstance, VNode } from 'vue';\nimport { prefix } from '../config';\nimport props from './props';\nimport TStepItem from './step-item';\nimport { ClassName } from '../common';\nimport mixins from '../utils/mixins';\nimport getConfigReceiverMixins, { StepsConfig } from '../config-provider/config-receiver';\nimport { TdStepsProps, TdStepItemProps } from './type';\nimport { emitEvent } from '../utils/event';\nimport { renderTNodeJSX } from '../utils/render-tnode';\n\nconst name = `${prefix}-steps`;\n\nexport default defineComponent({\n  name: 'TSteps',\n  ...mixins(getConfigReceiverMixins<StepsConfig>('datePicker')),\n  components: {\n    TStepItem,\n  },\n  provide(): { steps: any } {\n    return {\n      steps: this,\n    };\n  },\n  props: { ...props },\n  data() {\n    return {\n      stepChildren: [],\n      indexMap: {},\n    };\n  },\n  computed: {\n    baseClass(): ClassName {\n      if (this.direction) {\n        console.warn('TDesign Steps Warn: `direction` is going to be deprecated. please use `layout` instead. ');\n      }\n      const layout = this.layout || this.direction || 'horizontal';\n      return [\n        name,\n        `${name}--${layout}`,\n        `${name}--${this.handleTheme()}-anchor`,\n        {\n          [`${name}--${this.sequence}`]: layout === 'vertical',\n        },\n      ];\n    },\n  },\n  watch: {\n    options: {\n      immediate: true,\n      handler() {\n        if (!this.options) return;\n        this.options.forEach((item, index) => {\n          if (item.value !== undefined) {\n            this.indexMap[item.value] = index;\n          }\n        });\n      },\n    },\n  },\n  methods: {\n    getOptions() {\n      let options: Array<TdStepItemProps>;\n      if (this.options && this.options.length) {\n        options = this.options;\n      } else {\n        const nodes = this.$slots.default && this.$slots.default(null);\n        options = this.getOptionListBySlots(nodes);\n      }\n      return options;\n    },\n    getOptionListBySlots(nodes: VNode[]) {\n      const arr: Array<TdStepItemProps> = [];\n      nodes?.forEach((node) => {\n        const option = node?.props;\n        option && arr.push(option as TdStepItemProps);\n      });\n      return arr;\n    },\n    handleTheme() {\n      let { theme } = this;\n      const options = this.getOptions();\n      options.forEach((item) => {\n        if (item?.icon !== undefined) {\n          // icon > theme\n          theme = 'default';\n        }\n      });\n      return theme;\n    },\n    handleStatus(item: TdStepItemProps, index: number) {\n      if (item.status && item.status !== 'default') return item.status;\n      if (this.current === 'FINISH') return 'finish';\n      // value 不存在时，使用 index 进行区分每一个步骤\n      if (item.value === undefined && index < this.current) return 'finish';\n      // value 存在，找匹配位置\n      if (item.value !== undefined) {\n        const matchIndex = this.indexMap[this.current];\n        if (matchIndex === undefined) {\n          console.warn('TDesign Steps Warn: The current `value` is not exist.');\n          return 'default';\n        }\n        if (index < matchIndex) return 'finish';\n      }\n      const key = item.value === undefined ? index : item.value;\n      if (key === this.current) return 'process';\n      return 'default';\n    },\n    addItem(item: InstanceType<typeof TStepItem>) {\n      const index = this.stepChildren.length;\n      // eslint-disable-next-line\n      item.index = index;\n      this.stepChildren.push(item);\n    },\n    removeItem(item: InstanceType<typeof TStepItem>) {\n      this.stepChildren = this.stepChildren.filter((t) => t !== item);\n    },\n    handleChange(cur: TdStepsProps['current'], prev: TdStepsProps['current'], e: MouseEvent) {\n      emitEvent<Parameters<TdStepsProps['onChange']>>(this, 'change', cur, prev, { e });\n    },\n    renderContent() {\n      let content = null;\n      const options = this.getOptions();\n      if (this.$slots.default) {\n        content = renderTNodeJSX(this, 'default');\n        content = content\n          .map((item: ComponentPublicInstance) => {\n            if (item.children && Array.isArray(item.children)) return item.children;\n            return item;\n          })\n          .flat()\n          .filter((item: ComponentPublicInstance) => {\n            return item.type.name === 'TStepItem';\n          });\n\n        content?.forEach((item: VNode, index: number) => {\n          item.props.status = this.handleStatus(item.props as TdStepItemProps, index);\n        });\n        return content;\n      }\n      content = options.map((item, index) => (\n        <t-step-item\n          {...{\n            ...item,\n            status: this.handleStatus(item, index),\n          }}\n          key={item.value || index}\n        ></t-step-item>\n      ));\n      return content;\n    },\n  },\n  render() {\n    const { baseClass, renderContent } = this;\n    return <div class={baseClass}>{renderContent()}</div>;\n  },\n});\n"],"names":["name","prefix","defineComponent","mixins","getConfigReceiverMixins","components","TStepItem","provide","steps","props","data","stepChildren","indexMap","computed","baseClass","direction","console","warn","layout","handleTheme","sequence","watch","options","immediate","handler","forEach","item","index","value","methods","getOptions","length","nodes","$slots","getOptionListBySlots","arr","node","option","push","theme","icon","handleStatus","status","current","matchIndex","key","addItem","removeItem","filter","t","handleChange","cur","prev","e","emitEvent","renderContent","content","renderTNodeJSX","map","children","Array","isArray","flat","type","render"],"mappings":"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"}