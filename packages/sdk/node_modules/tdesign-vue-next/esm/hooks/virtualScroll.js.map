{"version":3,"file":"virtualScroll.js","sources":["../../src/hooks/virtualScroll.ts"],"sourcesContent":["import { ref, toRefs, reactive, onMounted, computed, watch } from 'vue';\n\n// 虚拟滚动Hooks的完整实现，只所以封装成hooks，主要是为了方便跟其他组件搭配使用，比如说表格或者下拉框\nconst useVirtualScroll = ({\n  data,\n  container,\n  fixedHeight = false,\n  lineHeight = 30,\n  bufferSize = 20,\n}: {\n  data: any;\n  container: any;\n  fixedHeight: boolean;\n  lineHeight: number;\n  bufferSize: number;\n}) => {\n  const state = reactive({\n    visibleData: [],\n    cachedHeight: [],\n    cachedScrollY: [],\n  });\n  const updateId = ref(0);\n  let trs = new Map(); // 当前展示的行元素和数据\n\n  let visibleCount = 0; // 可见的节点数量\n  let beforeScrollTop = 0; // 上一次的滚动条位置\n  let index = 0; // 偏移行数\n  let offset = 0; // 少于一行行高的偏移量\n  let start = 0; // 第一条显示的行\n  let last = 0; // 最后一条显示的行\n  let revising = false; // 是否正在修正滚动条\n\n  const reset = () => {\n    data.value.forEach((item: any, i: number) => {\n      item.$index = i;\n      if (fixedHeight) {\n        state.cachedScrollY[i] = i * lineHeight;\n      }\n    });\n  };\n  reset();\n\n  // 计算虚拟滚动列表总高度，需要动态修正\n  const scrollHeight = computed(() => {\n    const { cachedHeight } = state;\n    const { length } = cachedHeight;\n    if (length) {\n      const maxScrollY = cachedHeight.reduce((sum, v) => sum + v || lineHeight, 0); // 当前总高度\n      if (cachedHeight.length === data.value.length) {\n        return maxScrollY;\n      }\n      const average = maxScrollY / cachedHeight.length; // 平均高度\n      return maxScrollY + (data.value.length - cachedHeight.length) * average; // 预估总高度\n    }\n    return data.value.length * lineHeight;\n  });\n  const translateY = computed(() => {\n    const { visibleData } = state;\n    const firstRow = visibleData[0];\n    if (firstRow) {\n      // 修复只有一个元素时存在偏移的问题\n      return visibleData.length === 1 ? 0 : state.cachedScrollY[firstRow.$index];\n    }\n    return 0;\n  });\n\n  // 更新可视区域的节点数据\n  const updateVisibleData = () => {\n    last = Math.min(start + visibleCount + bufferSize * 2, data.value.length);\n    state.visibleData = data.value.slice(start, last);\n  };\n  // 计算每行对应的scrollTop值\n  const calculateScrollY = () => {\n    const anchorDom = trs.get(index); // 获取锚点元素\n    if (!anchorDom) {\n      return; // 快速调整高度时，新的元素可能来不及加载，暂时跳过更新\n    }\n    const anchorDomHeight = anchorDom.getBoundingClientRect().height; // 获取锚点元素的高\n\n    state.cachedScrollY[index] = container.value.scrollTop - offset; // 锚点元素scrollY= 容器滚动高度 - 锚点元素的offset\n    state.cachedHeight[index] = anchorDomHeight;\n\n    for (let i = index + 1; i <= state.visibleData[state.visibleData.length - 1].$index; i++) {\n      // 计算锚点后面的元素scrollY\n      const tr = trs.get(i);\n      const { height } = tr.getBoundingClientRect();\n      state.cachedHeight[i] = height;\n      const scrollY = state.cachedScrollY[i - 1] + state.cachedHeight[i - 1]; // 当前元素的y 是前一个元素的y+前一个元素高度\n      state.cachedScrollY[i] = scrollY;\n    }\n\n    for (let i = index - 1; i >= state.visibleData[0].$index; i--) {\n      const tr = trs.get(i);\n      const { height } = tr.getBoundingClientRect();\n      state.cachedHeight[i] = height;\n      const scrollY = state.cachedScrollY[i + 1] - state.cachedHeight[i]; // 当前元素的y是下一个元素y - 当前元素高度\n      state.cachedScrollY[i] = scrollY;\n    }\n    if (state.cachedScrollY[0] > 0) {\n      // 修正滚动过快时，滚动到顶部时，滚动条多余的问题\n      revising = true;\n      const distance = state.cachedScrollY[0]; // 第一个元素scrollY即为多出的量\n      const length = Math.min(last, data.value.length);\n      for (let i = 0; i < length; i++) {\n        state.cachedScrollY[i] -= distance;\n      }\n\n      const scrollTop = state.cachedScrollY[index - 1] ? state.cachedScrollY[index - 1] + offset : offset;\n      container.value.scrollTop = scrollTop;\n      beforeScrollTop = scrollTop;\n      revising = false;\n    }\n    // 修正拖动过快时，滚动到顶端时，滚动条不足的偏差\n    if (state.cachedScrollY[start] < 0) {\n      revising = true;\n      const s = state.cachedHeight.slice(0, Math.max(0, index)).reduce((sum, v) => sum + v, 0) + offset;\n      container.value.scrollTop = s;\n      beforeScrollTop = s;\n      if (s === 0) {\n        index = 0;\n        offset = 0;\n      }\n      revising = false;\n    }\n    if (last === data.value.length) {\n      // 滚动到底部时，修正底部有空余的问题\n      revising = true;\n      for (let i = last - 1; i >= start; i--) {\n        if (i === last - 1) {\n          state.cachedScrollY[i] = scrollHeight.value - state.cachedHeight[i];\n        } else {\n          state.cachedScrollY[i] = state.cachedScrollY[i + 1] - state.cachedHeight[i];\n        }\n      }\n      revising = false;\n    }\n  };\n\n  // 滚动时动态计算和渲染\n  const handleScroll = () => {\n    // if (revising) {\n    //   return false; // 修正滚动条时，暂停滚动逻辑\n    // }\n    const { scrollTop } = container.value;\n    let distance = scrollTop - beforeScrollTop; // 滚动差值\n    beforeScrollTop = scrollTop;\n    distance += offset;\n    let lastIndex = index;\n    if (distance >= 0) {\n      // 向下滚动\n      while (lastIndex < data.value.length && distance > (state.cachedHeight[lastIndex] || lineHeight)) {\n        if (!state.cachedHeight[lastIndex]) {\n          state.cachedHeight[lastIndex] = lineHeight;\n        }\n        distance -= state.cachedHeight[lastIndex];\n        lastIndex++;\n      }\n      if (lastIndex >= data.value.length) {\n        index = data.value.length - 1;\n        offset = 0;\n      } else {\n        index = lastIndex;\n        offset = distance;\n      }\n      const { clientHeight, scrollHeight } = container.value;\n      if (scrollTop + clientHeight === scrollHeight) {\n        // 滚动条到底了\n        index = data.value.length - visibleCount + 1;\n        calculateScrollY();\n      }\n      if (start <= index - bufferSize) {\n        // 计算第一个挂载元素\n        start = Math.min(data.value.length - visibleCount, index - bufferSize);\n        if (start < 0) {\n          start = 0;\n        }\n      }\n    } else {\n      // 向上滚动\n      while (distance < 0) {\n        lastIndex--;\n        if (!state.cachedHeight[lastIndex]) {\n          state.cachedHeight[lastIndex] = lineHeight;\n        }\n        distance += state.cachedHeight[lastIndex];\n      }\n      if (lastIndex < 0) {\n        index = 0;\n        offset = 0;\n      } else {\n        index = lastIndex;\n        offset = distance;\n      }\n      calculateScrollY();\n      if (start > index - bufferSize) {\n        // 计算第一个挂载元素\n        start = Math.max(0, index - bufferSize);\n      }\n    }\n    updateVisibleData();\n  };\n  !fixedHeight && watch(updateId, calculateScrollY, { flush: 'post' });\n  const handleRowMounted = () => {\n    updateId.value++;\n  };\n  watch(data, () => {\n    reset();\n    state.visibleData = [];\n    state.cachedScrollY = [];\n    state.cachedHeight = [];\n    beforeScrollTop = 0;\n    index = 0;\n    offset = 0;\n    start = 0;\n    revising = false;\n    trs = new Map();\n    updateVisibleData();\n    container.value && (container.value.scrollTop = 0);\n  });\n  let mounted = false;\n  const refreshContainer = () => {\n    if (mounted) {\n      visibleCount = Math.ceil(container.value.offsetHeight / lineHeight);\n      updateVisibleData();\n    }\n  };\n  onMounted(() => {\n    const ob = new window.IntersectionObserver((entries) => {\n      const entry = entries[0];\n      if (entry.isIntersecting || entry.intersectionRatio) {\n        mounted = true;\n        refreshContainer();\n        ob.unobserve(container.value);\n      }\n    });\n    container.value && ob.observe(container.value);\n  });\n  return {\n    trs,\n    scrollHeight,\n    ...toRefs(state),\n    translateY,\n    handleScroll,\n    handleRowMounted,\n    refreshContainer,\n    fixedHeight,\n    calculateScrollY,\n  };\n};\nexport default useVirtualScroll;\n"],"names":["useVirtualScroll","data","container","fixedHeight","lineHeight","bufferSize","state","reactive","visibleData","cachedHeight","cachedScrollY","updateId","ref","trs","Map","visibleCount","beforeScrollTop","index","offset","start","last","revising","reset","value","forEach","item","i","$index","scrollHeight","computed","length","maxScrollY","reduce","sum","v","average","translateY","firstRow","updateVisibleData","Math","min","slice","calculateScrollY","anchorDom","get","anchorDomHeight","getBoundingClientRect","height","scrollTop","tr","scrollY","distance","s","max","handleScroll","lastIndex","clientHeight","scrollHeight2","watch","flush","handleRowMounted","mounted","refreshContainer","ceil","offsetHeight","onMounted","ob","window","IntersectionObserver","entries","entry","isIntersecting","intersectionRatio","unobserve","observe","toRefs"],"mappings":"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"}