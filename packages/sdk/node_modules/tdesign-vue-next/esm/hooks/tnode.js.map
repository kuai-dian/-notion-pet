{"version":3,"file":"tnode.js","sources":["../../src/hooks/tnode.ts"],"sourcesContent":["import { h, getCurrentInstance, VNode } from 'vue';\nimport isEmpty from 'lodash/isEmpty';\nimport isFunction from 'lodash/isFunction';\nimport { getDefaultNode, getParams, OptionsType, JSXRenderContext } from '../utils/render-tnode';\n\n/**\n * 用于setup的TNodeJSX，在组合时逻辑时渲染 TNode，props 和 插槽同时处理，也能处理默认值为 true 则渲染默认节点的情况，与render-tnode的大概处理逻辑相同。\n * @param name 插槽和属性名称\n * @param options 值可能为默认渲染节点，也可能是默认渲染节点和参数的集合\n * @example useTNodeJSX('closeBtn')  优先级 props function 大于 插槽\n * @example useTNodeJSX('closeBtn', <close-icon />)。 当属性值为 true 时则渲染 <close-icon />\n * @example useTNodeJSX('closeBtn', { defaultNode: <close-icon />, params })。 params 为渲染节点时所需的参数\n */\n\nexport const useTNodeJSX = (name: string, options?: OptionsType) => {\n  // assemble params && defaultNode\n  const params = getParams(options);\n  const defaultNode = getDefaultNode(options);\n\n  const instance = getCurrentInstance();\n\n  // 处理 props 类型的Node\n  let propsNode;\n  if (Object.keys(instance).includes(name)) {\n    propsNode = instance[name];\n  }\n\n  // propsNode 为 false 不渲染\n  if (propsNode === false) return;\n\n  // 同名function和slot优先处理插槽\n  if (instance.slots[name]) {\n    return instance.slots[name](params);\n  }\n  if (isFunction(propsNode)) return propsNode(h, params);\n\n  // propsNode为true则渲染defaultNode\n  if (propsNode === true && defaultNode) {\n    return defaultNode;\n  }\n  // 处理字符串类型的 propsNode\n  return propsNode;\n};\n\n/**\n * 在setup中，通过JSX的方式 TNode，props 和 插槽同时处理。与 renderTNodeJSX 区别在于属性值为 undefined 时会渲染默认节点\n * @param name 插槽和属性名称\n * @example useTNodeDefault('closeBtn')\n * @example useTNodeDefault('closeBtn', <close-icon />) closeBtn 为空时，则兜底渲染 <close-icon />\n * @example useTNodeDefault('closeBtn', { defaultNode: <close-icon />, params }) 。params 为渲染节点时所需的参数\n */\nexport const useTNodeDefault = (name: string, options?: VNode | JSXRenderContext) => {\n  const defaultNode = getDefaultNode(options);\n  return useTNodeJSX(name, options) || defaultNode;\n};\n\n/**\n * 在setup中，用于处理相同名称的 TNode 渲染\n * @param name1 第一个名称，优先级高于 name2\n * @param name2 第二个名称\n * @param defaultNode 默认渲染内容：当 name1 和 name2 都为空时会启动默认内容渲染\n * @example useContent('default', 'content')\n * @example useContent('default', 'content', '我是默认内容')\n * @example useContent('default', 'content', { defaultNode: '我是默认内容', params })\n */\nexport const useContent = (name1: string, name2: string, options?: VNode | JSXRenderContext) => {\n  // assemble params && defaultNode\n  const params = getParams(options);\n  const defaultNode = getDefaultNode(options);\n\n  const toParams = params ? { params } : undefined;\n\n  const node1 = useTNodeJSX(name1, toParams);\n  const node2 = useTNodeJSX(name2, toParams);\n\n  const res = isEmpty(node1) ? node2 : node1;\n  return isEmpty(res) ? defaultNode : res;\n};\n"],"names":["useTNodeJSX","name","options","params","getParams","defaultNode","getDefaultNode","instance","getCurrentInstance","propsNode","Object","keys","includes","slots","isFunction","h","useTNodeDefault","useContent","name1","name2","toParams","node1","node2","res","isEmpty"],"mappings":";;;;;;;;;;;;;IAIaA,WAAW,GAAG,SAAdA,WAAc,CAACC,IAAD,EAAOC,OAAP,EAAmB;AAC5C,MAAMC,MAAM,GAAGC,SAAS,CAACF,OAAD,CAAxB;AACA,MAAMG,WAAW,GAAGC,cAAc,CAACJ,OAAD,CAAlC;AACA,MAAMK,QAAQ,GAAGC,kBAAkB,EAAnC;AACA,MAAIC,SAAJ;;AACA,MAAIC,MAAM,CAACC,IAAP,CAAYJ,QAAZ,EAAsBK,QAAtB,CAA+BX,IAA/B,CAAJ,EAA0C;AACxCQ,IAAAA,SAAS,GAAGF,QAAQ,CAACN,IAAD,CAApB;AACD;;AACD,MAAIQ,SAAS,KAAK,KAAlB,EACE;;AACF,MAAIF,QAAQ,CAACM,KAAT,CAAeZ,IAAf,CAAJ,EAA0B;AACxB,WAAOM,QAAQ,CAACM,KAAT,CAAeZ,IAAf,EAAqBE,MAArB,CAAP;AACD;;AACD,MAAIW,UAAU,CAACL,SAAD,CAAd,EACE,OAAOA,SAAS,CAACM,CAAD,EAAIZ,MAAJ,CAAhB;;AACF,MAAIM,SAAS,KAAK,IAAd,IAAsBJ,WAA1B,EAAuC;AACrC,WAAOA,WAAP;AACD;;AACD,SAAOI,SAAP;AACD;IACYO,eAAe,GAAG,SAAlBA,eAAkB,CAACf,IAAD,EAAOC,OAAP,EAAmB;AAChD,MAAMG,WAAW,GAAGC,cAAc,CAACJ,OAAD,CAAlC;AACA,SAAOF,WAAW,CAACC,IAAD,EAAOC,OAAP,CAAX,IAA8BG,WAArC;AACD;IACYY,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAQC,KAAR,EAAejB,OAAf,EAA2B;AACnD,MAAMC,MAAM,GAAGC,SAAS,CAACF,OAAD,CAAxB;AACA,MAAMG,WAAW,GAAGC,cAAc,CAACJ,OAAD,CAAlC;AACA,MAAMkB,QAAQ,GAAGjB,MAAM,GAAG;AAAEA,IAAAA,MAAM,EAANA;AAAF,GAAH,GAAgB,KAAK,CAA5C;AACA,MAAMkB,KAAK,GAAGrB,WAAW,CAACkB,KAAD,EAAQE,QAAR,CAAzB;AACA,MAAME,KAAK,GAAGtB,WAAW,CAACmB,KAAD,EAAQC,QAAR,CAAzB;AACA,MAAMG,GAAG,GAAGC,OAAO,CAACH,KAAD,CAAP,GAAiBC,KAAjB,GAAyBD,KAArC;AACA,SAAOG,OAAO,CAACD,GAAD,CAAP,GAAelB,WAAf,GAA6BkB,GAApC;AACD;;;;"}