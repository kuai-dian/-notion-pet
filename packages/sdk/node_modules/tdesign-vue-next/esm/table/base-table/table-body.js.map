{"version":3,"file":"table-body.js","sources":["../../../src/table/base-table/table-body.tsx"],"sourcesContent":["import { VNode, defineComponent, TransitionGroup, PropType, ref, provide } from 'vue';\nimport get from 'lodash/get';\nimport camelCase from 'lodash/camelCase';\nimport { prefix } from '../../config';\nimport TableRow from './table-row';\nimport baseTableProps from '../base-table-props';\nimport primaryTableProps from '../primary-table-props';\nimport { BaseTableCol } from '../type';\nimport { emitEvent } from '../../utils/event';\nimport { renderTNodeJSX } from '../../utils/render-tnode';\n\nconst props = {\n  data: baseTableProps.data,\n  columns: baseTableProps.columns,\n  rowClassName: baseTableProps.rowClassName,\n  rowKey: baseTableProps.rowKey,\n  rowspanAndColspan: baseTableProps.rowspanAndColspan,\n  firstFullRow: baseTableProps.firstFullRow,\n  lastFullRow: baseTableProps.lastFullRow,\n  onCellClick: baseTableProps.onCellClick,\n  rowHeight: {\n    type: Number as PropType<number>,\n    default: 0,\n  },\n  bufferSize: {\n    type: Number as PropType<number>,\n    default: 0,\n  },\n  scrollType: {\n    type: String,\n    default: '',\n  },\n  handleRowMounted: {\n    type: Function as PropType<() => void>,\n    default: () => {},\n  },\n  trs: {\n    type: Map,\n    default: () => new Map(),\n  },\n  onRowHover: baseTableProps.onRowHover,\n  onRowMousedown: baseTableProps.onRowMousedown,\n  onRowMouseenter: baseTableProps.onRowMouseenter,\n  onRowMouseleave: baseTableProps.onRowMouseleave,\n  onRowMouseup: baseTableProps.onRowMouseup,\n  onRowClick: baseTableProps.onRowClick,\n  onRowDbClick: baseTableProps.onRowDbClick,\n  selectedRowKeys: primaryTableProps.selectedRowKeys,\n  provider: {\n    type: Object,\n    default() {\n      return {};\n    },\n  },\n  current: {\n    type: Number,\n    default: 1,\n  },\n};\n\nexport default defineComponent({\n  name: `${prefix}-table-body`,\n  components: { TransitionGroup },\n  props,\n  emits: ['row-dragstart', 'row-dragover'],\n  setup(props) {\n    provide('rowHeightRef', ref(props.rowHeight));\n  },\n  computed: {\n    selectColumn(): any {\n      return this.columns.find(({ type }: any) => ['multiple', 'single'].includes(type)) || {};\n    },\n  },\n  methods: {\n    getRowspanAndColspanProps() {\n      const props: Array<any> = [];\n      const { data, columns, rowspanAndColspan } = this;\n      const cacheFirstColumnLeftedRowspan: Array<number> = [];\n      data.forEach((rowData, rowIndex) => {\n        if (props[rowIndex] === undefined) {\n          props[rowIndex] = {};\n        }\n        columns.forEach((col, colIndex) => {\n          const { colKey } = col;\n          let { rowspan, colspan } =\n            rowspanAndColspan({\n              col,\n              colIndex,\n              row: rowData,\n              rowIndex,\n            }) || {};\n          rowspan = rowspan || 1;\n          colspan = colspan || 1;\n          if (colIndex === 0 && rowspan > 1) {\n            // 第一列跨行的话，先提前设置一下第 rowspan + rowindex - 1 行的剩余跨行数\n            cacheFirstColumnLeftedRowspan[rowspan + rowIndex - 1] = 1;\n          }\n          // 剩余要跨的行\n          let leftedRowspan = 0;\n          if (rowIndex === 0 || rowspan > 1) {\n            leftedRowspan = rowspan - 1;\n          } else {\n            // 上一行如果跨行的话，计算一下除去渲染当前行是否还在跨行范围内，以及是否还有剩余\n            const preRowIndex = rowIndex - 1;\n            leftedRowspan = props[preRowIndex]?.[colKey]?.leftedRowspan || 0;\n            if (leftedRowspan > 0) {\n              leftedRowspan -= 1;\n              // 当前单元格跨行置为-1，在渲染时跳过\n              rowspan = -1;\n            }\n          }\n          // 剩余要跨的列\n          let leftedColspan = 0;\n          if (colIndex === 0 || colspan > 1) {\n            leftedColspan = colspan - 1;\n            // 第一列有跨行，行数不减1，防止后后面的单元格判断失误\n            if (colIndex === 0 && (leftedRowspan > 0 || cacheFirstColumnLeftedRowspan[rowIndex] > 0)) {\n              leftedColspan = 1;\n            }\n          } else {\n            // 一种特殊情况，如果当前行的上一行有跨列，应该继承一下他的跨列数\n            if (rowIndex > 0) {\n              const preLeftedColspan = props[rowIndex - 1]?.[colKey]?.leftedColspan;\n              const preLeftedColRowspan = props[rowIndex - 1]?.[colKey]?.leftedRowspan;\n              if (preLeftedColspan > 0 && preLeftedColRowspan > 0) {\n                leftedColspan = preLeftedColspan;\n                // 当前单元格跨行置为-1，在渲染时跳过\n                colspan = -1;\n              }\n            }\n            // 前一列如果跨列的话，计算一下除去渲染当前列是否还在跨列范围内，以及是否还有剩余\n            const preColKey = (columns[colIndex - 1] as BaseTableCol).colKey;\n            if (leftedColspan === 0) {\n              leftedColspan = props[rowIndex]?.[preColKey]?.leftedColspan || 0;\n              if (leftedColspan > 0) {\n                leftedColspan -= 1;\n                // 当前单元格跨行置为-1，在渲染时跳过\n                colspan = -1;\n              }\n            }\n          }\n          if (rowspan > 1 && colspan === -1) {\n            colspan = 1;\n          }\n          if (colspan > 1 && rowspan === -1) {\n            rowspan = 1;\n          }\n          props[rowIndex][colKey] = {\n            leftedColspan,\n            leftedRowspan,\n            rowspan,\n            colspan,\n          };\n        });\n      });\n      return props;\n    },\n\n    renderFullRow(type: 'first-full-row' | 'last-full-row') {\n      const fullRowNode = renderTNodeJSX(this, camelCase(type));\n      if (fullRowNode) {\n        return (\n          <tr>\n            <td colspan={this.columns.length} class={`${prefix}-table__row--full ${prefix}-table__row-${type}`}>\n              {fullRowNode}\n            </td>\n          </tr>\n        );\n      }\n      return null;\n    },\n    renderBody(): Array<VNode> {\n      const {\n        data,\n        rowClassName,\n        rowKey,\n        $slots: slots,\n        $props,\n        rowspanAndColspan,\n        selectedRowKeys,\n        selectColumn,\n      } = this;\n      let body: Array<VNode> = [];\n      let allRowspanAndColspanProps: any;\n      if (typeof rowspanAndColspan === 'function') {\n        allRowspanAndColspanProps = this.getRowspanAndColspanProps();\n      }\n      const {\n        columns,\n        current,\n        scrollType,\n        rowHeight,\n        bufferSize,\n        trs,\n        provider,\n        onRowHover,\n        onRowMouseup,\n        onRowMouseleave,\n        onRowMouseenter,\n        onRowMousedown,\n        onRowDbClick,\n        onRowClick,\n        onCellClick,\n      } = $props;\n\n      data.forEach((row: any, index: number) => {\n        const defaultRowClass =\n          typeof rowClassName === 'function' ? rowClassName({ row, rowIndex: index }) : rowClassName;\n        let rowClass: Array<string> = [];\n        if (defaultRowClass) {\n          rowClass = rowClass.concat(defaultRowClass);\n        }\n        const rowspanAndColspanProps = allRowspanAndColspanProps ? allRowspanAndColspanProps[index] : undefined;\n        let rowVnode: VNode;\n        const key = rowKey ? get(row, rowKey) : index + this.current;\n        const disabled =\n          typeof selectColumn.disabled === 'function'\n            ? selectColumn.disabled({ row, rowIndex: index })\n            : selectColumn.disabled;\n        if (disabled) {\n          rowClass.push(`${prefix}-table__row--disabled`);\n        }\n        if (selectedRowKeys?.indexOf(key) > -1) {\n          rowClass.push(`${prefix}-table__row--selected`);\n        }\n        if (row.__t_table_inner_data__?.level) {\n          rowClass.push(`${prefix}-table__row--level-${row.__t_table_inner_data__?.level || 0}`);\n        }\n\n        const props = {\n          columns,\n          current,\n          scrollType,\n          rowHeight,\n          bufferSize,\n          trs,\n          provider,\n          onRowHover,\n          onRowMouseup,\n          onRowMouseleave,\n          onRowMouseenter,\n          onRowMousedown,\n          onRowDbClick,\n          onRowClick,\n          onCellClick,\n          key,\n          rowClass: rowClass.join(' '),\n          rowData: row,\n          index,\n          rowspanAndColspanProps,\n          ...{\n            onRowDragstart: () => {\n              emitEvent(this, 'row-dragstart', {\n                index,\n                data: row,\n              });\n            },\n            onRowDragover: ({ e }: { e: MouseEvent }) => {\n              e.preventDefault();\n              emitEvent(this, 'row-dragover', {\n                index,\n                data: row,\n                targetElm: rowVnode.el,\n              });\n            },\n          },\n        };\n        rowVnode = (\n          <TableRow rowKey={this.rowKey} {...props} onRowMounted={this.handleRowMounted} row={row}>\n            {slots}\n          </TableRow>\n        );\n        // 按行渲染\n        body.push(rowVnode);\n        // 渲染展开行\n        const expandedRow = this.provider.renderExpandedRow?.({ row, index });\n        expandedRow && (body = body.concat(expandedRow));\n      });\n      const firstRow = this.renderFullRow('first-full-row');\n      if (firstRow) {\n        body = [firstRow].concat(body);\n      }\n      const lastRow = this.renderFullRow('last-full-row');\n      if (lastRow) {\n        body = body.concat(lastRow);\n      }\n      return body;\n    },\n  },\n  render() {\n    if (this.provider.sortOnRowDraggable) {\n      const className = `${prefix}-table__body ${this.provider.dragging ? `${prefix}-table__body--dragging` : ''}`;\n      return (\n        <transition-group class={className} tag=\"tbody\">\n          {this.renderBody()}\n        </transition-group>\n      );\n    }\n    return <tbody class={`${prefix}-table__body`}>{this.renderBody()}</tbody>;\n  },\n});\n"],"names":["props","data","baseTableProps","columns","rowClassName","rowKey","rowspanAndColspan","firstFullRow","lastFullRow","onCellClick","rowHeight","type","Number","bufferSize","scrollType","String","handleRowMounted","Function","trs","Map","onRowHover","onRowMousedown","onRowMouseenter","onRowMouseleave","onRowMouseup","onRowClick","onRowDbClick","selectedRowKeys","primaryTableProps","provider","Object","current","defineComponent","name","prefix","components","TransitionGroup","emits","setup","props2","provide","ref","computed","selectColumn","find","includes","methods","getRowspanAndColspanProps","cacheFirstColumnLeftedRowspan","forEach","rowData","rowIndex","col","colIndex","colKey","row","rowspan","colspan","leftedRowspan","preRowIndex","leftedColspan","preLeftedColspan","preLeftedColRowspan","preColKey","renderFullRow","fullRowNode","renderTNodeJSX","camelCase","length","renderBody","slots","$slots","$props","body","allRowspanAndColspanProps","index","defaultRowClass","rowClass","concat","rowspanAndColspanProps","rowVnode","key","get","disabled","push","indexOf","__t_table_inner_data__","level","join","onRowDragstart","emitEvent","onRowDragover","e","preventDefault","targetElm","el","expandedRow","renderExpandedRow","firstRow","lastRow","render","sortOnRowDraggable","className","dragging"],"mappings":"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"}