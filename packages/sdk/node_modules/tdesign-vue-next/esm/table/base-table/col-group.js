/**
 * tdesign v0.8.0
 * (c) 2022 tdesign
 * @license MIT
 */

import _toConsumableArray from '@babel/runtime/helpers/toConsumableArray';
import { defineComponent, createVNode } from 'vue';
import baseTableProps from '../base-table-props.js';
import { prefix } from '../../config.js';

var TableColGroup = defineComponent({
  name: "".concat(prefix, "-table-col-group"),
  props: {
    columns: baseTableProps.columns
  },
  methods: {
    renderColgroup: function renderColgroup() {
      var columns = this.columns;
      var colgroup = [];

      var flatArray = function flatArray(arr) {
        var res = [];
        arr.forEach(function (item) {
          var _item$children;

          if ((item === null || item === void 0 ? void 0 : (_item$children = item.children) === null || _item$children === void 0 ? void 0 : _item$children.length) > 0) {
            var val = flatArray(item.children);
            res.push.apply(res, _toConsumableArray(val));
          } else {
            res.push(item);
          }
        });
        return res;
      };

      var flatCols = flatArray(this.columns);
      flatCols.forEach(function (column) {
        var width = column.width,
            minWidth = column.minWidth,
            colKey = column.colKey;
        var style = {};

        if (width) {
          style.width = "".concat(width, "px");
        }

        if (minWidth) {
          style.minWidth = "".concat(minWidth, "px");
        }

        colgroup.push(createVNode("col", {
          "key": colKey,
          "style": style
        }, null));
      });
      return colgroup;
    }
  },
  render: function render() {
    return createVNode("colgroup", null, [this.renderColgroup()]);
  }
});

export { TableColGroup as default };
//# sourceMappingURL=col-group.js.map
