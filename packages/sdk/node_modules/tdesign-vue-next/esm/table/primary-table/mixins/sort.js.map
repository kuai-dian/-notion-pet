{"version":3,"file":"sort.js","sources":["../../../../src/table/primary-table/mixins/sort.tsx"],"sourcesContent":["import { defineComponent } from 'vue';\nimport isFunction from 'lodash/isFunction';\nimport { PrimaryTableProps } from '@src/table';\nimport SorterButton from '../sorter-button';\nimport { prefix } from '../../../config';\nimport { SortInfo, PrimaryTableCol, TdPrimaryTableProps, SortType, DataType } from '../../type';\nimport primaryTableProps from '../../primary-table-props';\nimport baseTableProps from '../../base-table-props';\nimport { emitEvent } from '../../../utils/event';\nimport { getTitle } from '../../util/common';\n\ntype Columns = TdPrimaryTableProps['columns'];\ntype SorterChangeContext = Parameters<TdPrimaryTableProps['onSortChange']>;\ntype ChangeContext = Parameters<TdPrimaryTableProps['onChange']>;\ntype TableData = TdPrimaryTableProps['data'];\n\nexport default defineComponent({\n  name: `${prefix}-primary-table-sort`,\n  components: {\n    SorterButton,\n  },\n  props: {\n    data: baseTableProps.data,\n    columns: primaryTableProps.columns,\n    sort: primaryTableProps.sort,\n    multipleSort: primaryTableProps.multipleSort,\n  },\n  emits: ['data-change', 'sort-change', 'change'],\n  data() {\n    return {\n      // 用于记录哪些字段是自定义排序函数\n      sorterFuncMap: {},\n    };\n  },\n  computed: {\n    sortArray(): Array<SortInfo> {\n      const { sort } = this;\n      if (!sort) return [];\n      return Array.isArray(sort) ? sort : [sort];\n    },\n    sortMap(): Record<string, SortInfo & { index: number }> {\n      const sortMap = {};\n      this.sortArray.forEach((info, index) => {\n        const { sortBy } = info;\n        sortMap[sortBy] = {\n          index,\n          ...info,\n        };\n      });\n      return sortMap;\n    },\n    localDataSort(): boolean {\n      return !!Object.keys(this.sorterFuncMap).length;\n    },\n  },\n  methods: {\n    // 本地排序功能中，多字段排序需注意优先级\n    handleDataSort(): TableData {\n      const { data, sort } = this;\n      if (!sort || !this.localDataSort) return;\n      const formatedSort = sort instanceof Array ? sort : [sort];\n      // data为受控的，data.slice()浅拷贝，防止sort导致原数据变异\n      const newData: TableData = data.slice().sort((a: TableData[0], b: TableData[0]) => {\n        let sortResult = 0;\n        for (let i = 0, len = formatedSort.length; i < len; i++) {\n          const item = formatedSort[i];\n          const sortFunc = this.sorterFuncMap[item.sortBy];\n          // 上一个排序字段值相同时才会进行下一个字段的大小对比\n          if (sortResult === 0 && sortFunc) {\n            sortResult = item.descending ? sortFunc(b, a) : sortFunc(a, b);\n            if (sortResult !== 0) {\n              sortResult = sortResult > 0 ? 1 : -1;\n            }\n          } else {\n            break;\n          }\n        }\n        return sortResult;\n      });\n      // Data 变化返回的是数据引用，为避免死循环，特此检测排序数据前后是否相同，如果相同则不再触发事件\n      if (JSON.stringify(newData) === JSON.stringify(this.data)) return;\n      emitEvent<Parameters<PrimaryTableProps['onDataChange']>>(this, 'data-change', newData);\n      return newData;\n    },\n    needSort(column: PrimaryTableCol): boolean {\n      const { sorter, sortType } = column;\n      return sorter && (!sortType || (Array.isArray(sortType) && sortType.length > 0) || typeof sortType === 'string');\n    },\n    getNextSortOrder(currentSortOrder: SortType, sortType: SortType) {\n      const sorterTypes: Array<SortType> = !sortType || sortType === 'all' ? ['desc', 'asc'] : [sortType];\n      const idx: number = (sorterTypes.indexOf(currentSortOrder) + 1) % (sorterTypes.length + 1);\n      return sorterTypes[idx];\n    },\n    handleSortHeaderClick(col: PrimaryTableCol) {\n      // 本地数据 data 排序，需同时抛出 data-change\n      const newData = this.handleDataSort();\n      let sortInfo: SortInfo | Array<SortInfo>;\n      if (this.multipleSort) {\n        sortInfo = this.getMultipleNextSort(col);\n      } else {\n        sortInfo = this.getSingleNextSort(col);\n      }\n      emitEvent<SorterChangeContext>(this, 'sort-change', sortInfo, {\n        currentDataSource: newData || this.data,\n        col,\n      });\n      emitEvent<ChangeContext>(\n        this,\n        'change',\n        { sorter: sortInfo },\n        { trigger: 'sorter', currentData: newData || this.data },\n      );\n    },\n    getSortColumn(colKey: string) {\n      return this.columns.find((column) => column.colKey === colKey);\n    },\n    getSortOrder(descending: boolean) {\n      if (descending === undefined) return;\n      return descending ? 'desc' : 'asc';\n    },\n    // 排序行为：降序 -> 升序 -> 取消排序。只有 sortType 包含的排序方式才能进行排序。\n    getNextDescending(current: SortInfo, col: Columns[0]): boolean {\n      const { descending } = current || {};\n      const { sortType = 'all' } = col;\n      if (descending === true && ['asc', 'all'].includes(sortType)) return false;\n      if (descending === undefined && ['desc', 'all'].includes(sortType)) return true;\n    },\n    // 点击新排序字段，则默认按照降序排序；点击原字段，则排序字段不变仅切换排序方式\n    getSingleNextSort(col: Columns[0]): SortInfo {\n      const { colKey } = col;\n      const current = this.sortMap[colKey];\n      const next = this.getNextDescending(current, col);\n      if (next === undefined) return;\n      return { sortBy: colKey, descending: next };\n    },\n    getMultipleNextSort(col: PrimaryTableCol<DataType>): Array<SortInfo> {\n      if (!(this.sort instanceof Array)) return;\n      const { colKey } = col;\n      const result = [...this.sort];\n      for (let i = 0, len = this.sort.length; i < len; i++) {\n        if (this.sort[i].sortBy === colKey) {\n          const next = this.getSingleNextSort(col);\n          next ? (result[i] = next) : result.splice(i, 1);\n          return result;\n        }\n      }\n      result.push({ sortBy: colKey, descending: true });\n      return result;\n    },\n    getSorterColumns(columns: Columns): Columns {\n      const r = columns.map((item, index: number) => {\n        const column: PrimaryTableCol = { ...item };\n        if (isFunction(column.sorter)) {\n          this.sorterFuncMap[column.colKey] = column.sorter;\n        }\n        const needSort = this.needSort(column);\n        if (needSort) {\n          const { sortType = 'all', colKey } = column;\n          const nextSort = this.getSingleNextSort(column);\n          const sorterButtonsProps = {\n            onClick: () => this.handleSortHeaderClick(column),\n            sortType,\n            sortOrder: this.getSortOrder(this.sortMap[colKey]?.descending),\n            nextSortOrder: this.getSortOrder(nextSort?.descending),\n            // class: `${prefix}-table-sort-icon`,\n          };\n          const title = getTitle(this, column, index);\n          column.title = () => (\n            <div class={`${prefix}-table__cell--sortable`}>\n              <div class={`${prefix}-table__cell--title`}>\n                <div>{title}</div>\n                {<SorterButton {...sorterButtonsProps} />}\n              </div>\n            </div>\n          );\n        }\n        const { children } = item;\n        if (children && children.length) {\n          column.children = this.getSorterColumns(children);\n        }\n        return column;\n      });\n      this.handleDataSort();\n      return r;\n    },\n  },\n});\n"],"names":["defineComponent","name","prefix","components","SorterButton","props","data","baseTableProps","columns","primaryTableProps","sort","multipleSort","emits","sorterFuncMap","computed","sortArray","Array","isArray","sortMap","forEach","info","index","sortBy","localDataSort","Object","keys","length","methods","handleDataSort","formatedSort","newData","slice","a","b","sortResult","i","len","item","sortFunc","descending","JSON","stringify","emitEvent","needSort","column","sorter","sortType","getNextSortOrder","currentSortOrder","sorterTypes","idx","indexOf","handleSortHeaderClick","col","sortInfo","getMultipleNextSort","getSingleNextSort","currentDataSource","trigger","currentData","getSortColumn","colKey","find","getSortOrder","getNextDescending","current","includes","next","result","splice","push","getSorterColumns","r","map","isFunction","nextSort","sorterButtonsProps","onClick","sortOrder","nextSortOrder","title","getTitle","children"],"mappings":"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"}