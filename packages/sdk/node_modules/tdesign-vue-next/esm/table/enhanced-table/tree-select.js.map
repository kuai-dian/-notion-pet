{"version":3,"file":"tree-select.js","sources":["../../../src/table/enhanced-table/tree-select.tsx"],"sourcesContent":["import { defineComponent, PropType } from 'vue';\nimport get from 'lodash/get';\nimport baseTableProps from '../base-table-props';\nimport enhancedTableProps from '../enhanced-table-props';\nimport { TdPrimaryTableProps, TableRowData, TableTreeConfig } from '../type';\nimport { emitEvent } from '../../utils/event';\nimport { PrimaryTableCol } from '..';\nimport primaryTableProps from '../primary-table-props';\nimport TableTreeStore, { KeysType } from './tree-store';\n\nexport const childreMap = new Map();\n\nexport interface GetChildrenDataReturnValue {\n  allChildren: Array<any>;\n  allChildrenKeys: Array<string | number>;\n}\nexport function getChildrenData(\n  treeDataMap: InstanceType<typeof TableTreeStore>['treeDataMap'],\n  data: TableRowData,\n  childrenKey: string,\n  rowKey: string,\n  r?: GetChildrenDataReturnValue,\n): GetChildrenDataReturnValue {\n  if (childreMap.get(data)) return childreMap.get(data);\n  const result = r || { allChildren: [], allChildrenKeys: [] };\n  const children = get(data, childrenKey);\n  if (!children || !children.length) return result;\n  const selectableChildren = children.filter((item: TableRowData) => !treeDataMap.get(get(item, rowKey))?.disabled);\n  result.allChildren = result.allChildren.concat(selectableChildren);\n  const childrenKeys = selectableChildren.map((item: TableRowData) => get(item, rowKey));\n  result.allChildrenKeys = result.allChildrenKeys.concat(childrenKeys);\n  for (let i = 0, len = children.length; i < len; i++) {\n    const tItem = children[i];\n    const c = get(tItem, childrenKey);\n    if (c?.length) {\n      const nextLevelData = getChildrenData(treeDataMap, tItem, childrenKey, rowKey, result);\n      result.allChildren = result.allChildren.concat(nextLevelData.allChildren);\n      result.allChildrenKeys = result.allChildrenKeys.concat(nextLevelData.allChildrenKeys);\n    }\n  }\n  return result;\n}\n\nexport interface RemoveParams {\n  // 当前选中的数据\n  selectedRowKeys: Array<string | number>;\n  // 需要移除的数据\n  removeKeys: Array<string | number>;\n}\n\nexport interface RemainData {\n  data: Array<any>;\n  keys: Array<string | number>;\n}\n\nexport function removeChildrenKeys(p: RemoveParams, r?: RemainData): RemainData {\n  const { selectedRowKeys, removeKeys } = p;\n  const result = r || { data: [], keys: [] };\n  for (let i = 0, len = selectedRowKeys.length; i < len; i++) {\n    const key = selectedRowKeys[i];\n    if (!removeKeys.includes(key)) {\n      result.keys.push(key);\n    }\n  }\n  return result;\n}\n\nexport interface GetKeyDataParams {\n  treeDataMap: InstanceType<typeof TableTreeStore>['treeDataMap'];\n  data: Array<any>;\n  column: PrimaryTableCol;\n  keys: KeysType;\n}\n\nexport interface GetRowDataParams {\n  treeDataMap: InstanceType<typeof TableTreeStore>['treeDataMap'];\n  selectedRowKeys: Array<string | number>;\n}\n\nexport function getRowDataByKeys(p: GetRowDataParams) {\n  const { treeDataMap, selectedRowKeys } = p;\n  const result = [];\n  for (let i = 0, len = selectedRowKeys.length; i < len; i++) {\n    const key = selectedRowKeys[i];\n    result.push(treeDataMap.get(key));\n  }\n  return result;\n}\n\ntype SelectChangeParams = Parameters<TdPrimaryTableProps['onSelectChange']>;\n\nexport default defineComponent({\n  props: {\n    data: baseTableProps.data,\n    rowKey: baseTableProps.rowKey,\n    columns: primaryTableProps.columns,\n    tree: enhancedTableProps.tree,\n  },\n  emits: ['update:selectedRowKeys'],\n  data() {\n    return {\n      dataSource: this.data,\n      store: new TableTreeStore() as InstanceType<typeof TableTreeStore>,\n    };\n  },\n  computed: {\n    childrenKey(): string {\n      return (this.tree as TableTreeConfig)?.childrenKey || 'children';\n    },\n    rowDataKeys(): KeysType {\n      return {\n        rowKey: this.rowKey,\n        childrenKey: this.childrenKey,\n      };\n    },\n  },\n\n  methods: {\n    onInnerSelectChange(rowKeys: SelectChangeParams[0], extraData: SelectChangeParams[1]) {\n      if (extraData.currentRowKey === 'CHECK_ALL_BOX') {\n        this.handleSelectAll(extraData);\n      } else {\n        this.handleSelect(rowKeys, extraData);\n      }\n    },\n\n    handleSelectAll(extraData: SelectChangeParams[1]) {\n      const newRowKeys: Array<string | number> = [];\n      const newRowData: TableRowData[] = [];\n      if (extraData.type === 'check') {\n        const arr = [...this.store.treeDataMap.values()];\n        for (let i = 0, len = arr.length; i < len; i++) {\n          const item = arr[i];\n          if (!item.disabled) {\n            newRowData.push(item.row);\n            newRowKeys.push(get(item.row, this.rowKey));\n          }\n        }\n      }\n      const newExtraData = {\n        ...extraData,\n        selectedRowData: newRowData || [],\n      };\n      emitEvent<SelectChangeParams>(this, 'select-change', newRowKeys, newExtraData);\n      this.$emit('update:selectedRowKeys', newRowKeys, newExtraData);\n    },\n\n    handleSelect(rowKeys: SelectChangeParams[0], extraData: SelectChangeParams[1]) {\n      let newRowKeys = [...rowKeys];\n      if ((this.tree as TableTreeConfig)?.checkStrictly === false) {\n        if (extraData?.type === 'check') {\n          const result = getChildrenData(\n            this.store.treeDataMap,\n            extraData.currentRowData,\n            this.childrenKey,\n            this.rowKey,\n          );\n          const { allChildrenKeys } = result;\n          childreMap.set(extraData.currentRowData, result);\n          newRowKeys = [...new Set(newRowKeys.concat(allChildrenKeys))];\n        } else if (extraData?.type === 'uncheck') {\n          const children = getChildrenData(\n            this.store.treeDataMap,\n            extraData.currentRowData,\n            this.childrenKey,\n            this.rowKey,\n          );\n          const result = removeChildrenKeys({\n            selectedRowKeys: rowKeys,\n            removeKeys: children.allChildrenKeys,\n          });\n          newRowKeys = result.keys;\n        }\n      }\n      const newRowData = getRowDataByKeys({ treeDataMap: this.store.treeDataMap, selectedRowKeys: newRowKeys });\n      const newExtraData = {\n        ...extraData,\n        selectedRowData: newRowData,\n      };\n      emitEvent<SelectChangeParams>(this, 'select-change', newRowKeys, newExtraData);\n      this.$emit('update:selectedRowKeys', newRowKeys, newExtraData);\n    },\n  },\n});\n"],"names":["childreMap","Map","getChildrenData","treeDataMap","data","childrenKey","rowKey","r","get","result","allChildren","allChildrenKeys","children","length","selectableChildren","filter","item","disabled","concat","childrenKeys","map","i","len","tItem","c","nextLevelData","removeChildrenKeys","p","selectedRowKeys","removeKeys","keys","key","includes","push","getRowDataByKeys","defineComponent","props","baseTableProps","columns","primaryTableProps","tree","enhancedTableProps","emits","dataSource","store","TableTreeStore","computed","rowDataKeys","methods","onInnerSelectChange","rowKeys","extraData","currentRowKey","handleSelectAll","handleSelect","newRowKeys","newRowData","type","arr","values","row","newExtraData","selectedRowData","emitEvent","$emit","checkStrictly","currentRowData","set","Set"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;IAOaA,UAAU,kBAAmB,IAAIC,GAAJ;AACnC,SAASC,eAAT,CAAyBC,WAAzB,EAAsCC,IAAtC,EAA4CC,WAA5C,EAAyDC,MAAzD,EAAiEC,CAAjE,EAAoE;AACzE,MAAIP,UAAU,CAACQ,GAAX,CAAeJ,IAAf,CAAJ,EACE,OAAOJ,UAAU,CAACQ,GAAX,CAAeJ,IAAf,CAAP;AACF,MAAMK,MAAM,GAAGF,CAAC,IAAI;AAAEG,IAAAA,WAAW,EAAE,EAAf;AAAmBC,IAAAA,eAAe,EAAE;AAApC,GAApB;AACA,MAAMC,QAAQ,GAAGJ,GAAG,CAACJ,IAAD,EAAOC,WAAP,CAApB;AACA,MAAI,CAACO,QAAD,IAAa,CAACA,QAAQ,CAACC,MAA3B,EACE,OAAOJ,MAAP;AACF,MAAMK,kBAAkB,GAAGF,QAAQ,CAACG,MAAT,CAAgB,UAACC,IAAD;AAAA;;AAAA,WAAU,sBAACb,WAAW,CAACK,GAAZ,CAAgBA,GAAG,CAACQ,IAAD,EAAOV,MAAP,CAAnB,CAAD,6CAAC,iBAAoCW,QAArC,CAAV;AAAA,GAAhB,CAA3B;AACAR,EAAAA,MAAM,CAACC,WAAP,GAAqBD,MAAM,CAACC,WAAP,CAAmBQ,MAAnB,CAA0BJ,kBAA1B,CAArB;AACA,MAAMK,YAAY,GAAGL,kBAAkB,CAACM,GAAnB,CAAuB,UAACJ,IAAD;AAAA,WAAUR,GAAG,CAACQ,IAAD,EAAOV,MAAP,CAAb;AAAA,GAAvB,CAArB;AACAG,EAAAA,MAAM,CAACE,eAAP,GAAyBF,MAAM,CAACE,eAAP,CAAuBO,MAAvB,CAA8BC,YAA9B,CAAzB;;AACA,OAAK,IAAIE,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAGV,QAAQ,CAACC,MAA/B,EAAuCQ,CAAC,GAAGC,GAA3C,EAAgDD,CAAC,EAAjD,EAAqD;AACnD,QAAME,KAAK,GAAGX,QAAQ,CAACS,CAAD,CAAtB;AACA,QAAMG,CAAC,GAAGhB,GAAG,CAACe,KAAD,EAAQlB,WAAR,CAAb;;AACA,QAAImB,CAAJ,aAAIA,CAAJ,eAAIA,CAAC,CAAEX,MAAP,EAAe;AACb,UAAMY,aAAa,GAAGvB,eAAe,CAACC,WAAD,EAAcoB,KAAd,EAAqBlB,WAArB,EAAkCC,MAAlC,EAA0CG,MAA1C,CAArC;AACAA,MAAAA,MAAM,CAACC,WAAP,GAAqBD,MAAM,CAACC,WAAP,CAAmBQ,MAAnB,CAA0BO,aAAa,CAACf,WAAxC,CAArB;AACAD,MAAAA,MAAM,CAACE,eAAP,GAAyBF,MAAM,CAACE,eAAP,CAAuBO,MAAvB,CAA8BO,aAAa,CAACd,eAA5C,CAAzB;AACD;AACF;;AACD,SAAOF,MAAP;AACD;AACM,SAASiB,kBAAT,CAA4BC,CAA5B,EAA+BpB,CAA/B,EAAkC;AACvC,MAAQqB,eAAR,GAAwCD,CAAxC,CAAQC,eAAR;AAAA,MAAyBC,UAAzB,GAAwCF,CAAxC,CAAyBE,UAAzB;AACA,MAAMpB,MAAM,GAAGF,CAAC,IAAI;AAAEH,IAAAA,IAAI,EAAE,EAAR;AAAY0B,IAAAA,IAAI,EAAE;AAAlB,GAApB;;AACA,OAAK,IAAIT,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAGM,eAAe,CAACf,MAAtC,EAA8CQ,CAAC,GAAGC,GAAlD,EAAuDD,CAAC,EAAxD,EAA4D;AAC1D,QAAMU,GAAG,GAAGH,eAAe,CAACP,CAAD,CAA3B;;AACA,QAAI,CAACQ,UAAU,CAACG,QAAX,CAAoBD,GAApB,CAAL,EAA+B;AAC7BtB,MAAAA,MAAM,CAACqB,IAAP,CAAYG,IAAZ,CAAiBF,GAAjB;AACD;AACF;;AACD,SAAOtB,MAAP;AACD;AACM,SAASyB,gBAAT,CAA0BP,CAA1B,EAA6B;AAClC,MAAQxB,WAAR,GAAyCwB,CAAzC,CAAQxB,WAAR;AAAA,MAAqByB,eAArB,GAAyCD,CAAzC,CAAqBC,eAArB;AACA,MAAMnB,MAAM,GAAG,EAAf;;AACA,OAAK,IAAIY,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAGM,eAAe,CAACf,MAAtC,EAA8CQ,CAAC,GAAGC,GAAlD,EAAuDD,CAAC,EAAxD,EAA4D;AAC1D,QAAMU,GAAG,GAAGH,eAAe,CAACP,CAAD,CAA3B;AACAZ,IAAAA,MAAM,CAACwB,IAAP,CAAY9B,WAAW,CAACK,GAAZ,CAAgBuB,GAAhB,CAAZ;AACD;;AACD,SAAOtB,MAAP;AACD;AACD,iBAAe0B,eAAe,CAAC;AAC7BC,EAAAA,KAAK,EAAE;AACLhC,IAAAA,IAAI,EAAEiC,cAAc,CAACjC,IADhB;AAELE,IAAAA,MAAM,EAAE+B,cAAc,CAAC/B,MAFlB;AAGLgC,IAAAA,OAAO,EAAEC,iBAAiB,CAACD,OAHtB;AAILE,IAAAA,IAAI,EAAEC,kBAAkB,CAACD;AAJpB,GADsB;AAO7BE,EAAAA,KAAK,EAAE,CAAC,wBAAD,CAPsB;AAQ7BtC,EAAAA,IAR6B,kBAQtB;AACL,WAAO;AACLuC,MAAAA,UAAU,EAAE,KAAKvC,IADZ;AAELwC,MAAAA,KAAK,EAAE,IAAIC,cAAJ;AAFF,KAAP;AAID,GAb4B;AAc7BC,EAAAA,QAAQ,EAAE;AACRzC,IAAAA,WADQ,yBACM;AAAA;;AACZ,aAAO,oBAAKmC,IAAL,0DAAWnC,WAAX,KAA0B,UAAjC;AACD,KAHO;AAIR0C,IAAAA,WAJQ,yBAIM;AACZ,aAAO;AACLzC,QAAAA,MAAM,EAAE,KAAKA,MADR;AAELD,QAAAA,WAAW,EAAE,KAAKA;AAFb,OAAP;AAID;AATO,GAdmB;AAyB7B2C,EAAAA,OAAO,EAAE;AACPC,IAAAA,mBADO,+BACaC,OADb,EACsBC,SADtB,EACiC;AACtC,UAAIA,SAAS,CAACC,aAAV,KAA4B,eAAhC,EAAiD;AAC/C,aAAKC,eAAL,CAAqBF,SAArB;AACD,OAFD,MAEO;AACL,aAAKG,YAAL,CAAkBJ,OAAlB,EAA2BC,SAA3B;AACD;AACF,KAPM;AAQPE,IAAAA,eARO,2BAQSF,SART,EAQoB;AACzB,UAAMI,UAAU,GAAG,EAAnB;AACA,UAAMC,UAAU,GAAG,EAAnB;;AACA,UAAIL,SAAS,CAACM,IAAV,KAAmB,OAAvB,EAAgC;AAC9B,YAAMC,GAAG,sBAAO,KAAKd,KAAL,CAAWzC,WAAX,CAAuBwD,MAAvB,EAAP,CAAT;;AACA,aAAK,IAAItC,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAGoC,GAAG,CAAC7C,MAA1B,EAAkCQ,CAAC,GAAGC,GAAtC,EAA2CD,CAAC,EAA5C,EAAgD;AAC9C,cAAML,IAAI,GAAG0C,GAAG,CAACrC,CAAD,CAAhB;;AACA,cAAI,CAACL,IAAI,CAACC,QAAV,EAAoB;AAClBuC,YAAAA,UAAU,CAACvB,IAAX,CAAgBjB,IAAI,CAAC4C,GAArB;AACAL,YAAAA,UAAU,CAACtB,IAAX,CAAgBzB,GAAG,CAACQ,IAAI,CAAC4C,GAAN,EAAW,KAAKtD,MAAhB,CAAnB;AACD;AACF;AACF;;AACD,UAAMuD,YAAY,mCACbV,SADa;AAEhBW,QAAAA,eAAe,EAAEN,UAAU,IAAI;AAFf,QAAlB;;AAIAO,MAAAA,SAAS,CAAC,IAAD,EAAO,eAAP,EAAwBR,UAAxB,EAAoCM,YAApC,CAAT;AACA,WAAKG,KAAL,CAAW,wBAAX,EAAqCT,UAArC,EAAiDM,YAAjD;AACD,KA3BM;AA4BPP,IAAAA,YA5BO,wBA4BMJ,OA5BN,EA4BeC,SA5Bf,EA4B0B;AAAA;;AAC/B,UAAII,UAAU,sBAAOL,OAAP,CAAd;;AACA,UAAI,qBAAKV,IAAL,4DAAWyB,aAAX,MAA6B,KAAjC,EAAwC;AACtC,YAAI,CAAAd,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAEM,IAAX,MAAoB,OAAxB,EAAiC;AAC/B,cAAMhD,MAAM,GAAGP,eAAe,CAAC,KAAK0C,KAAL,CAAWzC,WAAZ,EAAyBgD,SAAS,CAACe,cAAnC,EAAmD,KAAK7D,WAAxD,EAAqE,KAAKC,MAA1E,CAA9B;AACA,cAAQK,eAAR,GAA4BF,MAA5B,CAAQE,eAAR;AACAX,UAAAA,UAAU,CAACmE,GAAX,CAAehB,SAAS,CAACe,cAAzB,EAAyCzD,MAAzC;AACA8C,UAAAA,UAAU,sBAAO,IAAIa,GAAJ,CAAQb,UAAU,CAACrC,MAAX,CAAkBP,eAAlB,CAAR,CAAP,CAAV;AACD,SALD,MAKO,IAAI,CAAAwC,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAEM,IAAX,MAAoB,SAAxB,EAAmC;AACxC,cAAM7C,QAAQ,GAAGV,eAAe,CAAC,KAAK0C,KAAL,CAAWzC,WAAZ,EAAyBgD,SAAS,CAACe,cAAnC,EAAmD,KAAK7D,WAAxD,EAAqE,KAAKC,MAA1E,CAAhC;;AACA,cAAMG,OAAM,GAAGiB,kBAAkB,CAAC;AAChCE,YAAAA,eAAe,EAAEsB,OADe;AAEhCrB,YAAAA,UAAU,EAAEjB,QAAQ,CAACD;AAFW,WAAD,CAAjC;;AAIA4C,UAAAA,UAAU,GAAG9C,OAAM,CAACqB,IAApB;AACD;AACF;;AACD,UAAM0B,UAAU,GAAGtB,gBAAgB,CAAC;AAAE/B,QAAAA,WAAW,EAAE,KAAKyC,KAAL,CAAWzC,WAA1B;AAAuCyB,QAAAA,eAAe,EAAE2B;AAAxD,OAAD,CAAnC;;AACA,UAAMM,YAAY,mCACbV,SADa;AAEhBW,QAAAA,eAAe,EAAEN;AAFD,QAAlB;;AAIAO,MAAAA,SAAS,CAAC,IAAD,EAAO,eAAP,EAAwBR,UAAxB,EAAoCM,YAApC,CAAT;AACA,WAAKG,KAAL,CAAW,wBAAX,EAAqCT,UAArC,EAAiDM,YAAjD;AACD;AApDM;AAzBoB,CAAD,CAA9B;;;;"}