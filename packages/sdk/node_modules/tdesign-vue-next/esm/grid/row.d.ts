declare const _default: import("vue").DefineComponent<{
    align: {
        type: import("vue").PropType<"top" | "bottom" | "middle">;
        default: "top" | "bottom" | "middle";
        validator(val: "top" | "bottom" | "middle"): boolean;
    };
    gutter: {
        type: import("vue").PropType<number | import("./type").GutterObject | (number | import("./type").GutterObject)[]>;
        default: number;
    };
    justify: {
        type: import("vue").PropType<"center" | "end" | "start" | "space-around" | "space-between">;
        default: "center" | "end" | "start" | "space-around" | "space-between";
        validator(val: "center" | "end" | "start" | "space-around" | "space-between"): boolean;
    };
    tag: {
        type: StringConstructor;
        default: string;
    };
}, {
    rowStyle: import("vue").ComputedRef<{}>;
    size: import("vue").Ref<string>;
    rowClasses: import("vue").ComputedRef<(string | {
        [x: string]: "center" | "end" | "start" | "top" | "bottom" | "middle" | "space-around" | "space-between";
    })[]>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    align: {
        type: import("vue").PropType<"top" | "bottom" | "middle">;
        default: "top" | "bottom" | "middle";
        validator(val: "top" | "bottom" | "middle"): boolean;
    };
    gutter: {
        type: import("vue").PropType<number | import("./type").GutterObject | (number | import("./type").GutterObject)[]>;
        default: number;
    };
    justify: {
        type: import("vue").PropType<"center" | "end" | "start" | "space-around" | "space-between">;
        default: "center" | "end" | "start" | "space-around" | "space-between";
        validator(val: "center" | "end" | "start" | "space-around" | "space-between"): boolean;
    };
    tag: {
        type: StringConstructor;
        default: string;
    };
}>>, {
    tag: string;
    justify: "center" | "end" | "start" | "space-around" | "space-between";
    align: "top" | "bottom" | "middle";
    gutter: number | import("./type").GutterObject | (number | import("./type").GutterObject)[];
}>;
export default _default;
