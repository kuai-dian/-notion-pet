import { ButtonProps } from '../button';
import { PopconfirmConfig, DialogConfig, DrawerConfig } from '../config-provider';
import { ClassName, TNode } from '../common';
export declare type MixnsFooterButton = string | ButtonProps | TNode;
export interface MixinsConfirmBtn {
    theme?: MixinsThemeType;
    className?: ClassName;
    confirmBtn: MixnsFooterButton;
    globalConfirm: PopconfirmConfig['confirm'] | DrawerConfig['confirm'] | DialogConfig['confirm'];
    globalConfirmBtnTheme?: PopconfirmConfig['confirmBtnTheme'] | DialogConfig['confirmBtnTheme'];
}
export interface MixinsCancelBtn {
    className?: ClassName;
    cancelBtn: MixnsFooterButton;
    globalCancel: PopconfirmConfig['cancel'] | DrawerConfig['cancel'] | DialogConfig['cancel'];
}
export declare type MixinsThemeType = keyof (PopconfirmConfig['confirmBtnTheme'] & DialogConfig['confirmBtnTheme']);
declare const _default: import("vue").DefineComponent<{}, {}, {}, {}, {
    getConfirmBtn(options: MixinsConfirmBtn): any;
    getCancelBtn(options: MixinsCancelBtn): any;
    getButtonByProps(button: string | ButtonProps, defaultButton: ButtonProps, className?: ClassName): JSX.Element;
    confirmBtnAction(e: MouseEvent): void;
    cancelBtnAction(e: MouseEvent): void;
    getDefaultConfrimBtnProps(options: MixinsConfirmBtn): ButtonProps;
    getDefaultCancelBtnProps(options: MixinsCancelBtn): ButtonProps;
}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, import("vue").EmitsOptions, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{}>>, {}>;
export default _default;
