import { Styles } from '../common';
declare const _default: import("vue").DefineComponent<{
    attach: {
        type: import("vue").PropType<import("../common").AttachNode>;
        default: string;
    };
    content: {
        type: import("vue").PropType<string | import("../common").TNode<any>>;
    };
    default: {
        type: import("vue").PropType<string | import("../common").TNode<any>>;
    };
    delay: {
        type: NumberConstructor;
        default: number;
    };
    fullscreen: BooleanConstructor;
    indicator: {
        type: import("vue").PropType<boolean | import("../common").TNode<any>>;
        default: boolean;
    };
    inheritColor: BooleanConstructor;
    loading: {
        type: BooleanConstructor;
        default: boolean;
    };
    preventScrollThrough: {
        type: BooleanConstructor;
        default: boolean;
    };
    showOverlay: {
        type: BooleanConstructor;
        default: boolean;
    };
    size: {
        type: StringConstructor;
        default: string;
    };
    text: {
        type: import("vue").PropType<string | import("../common").TNode<any>>;
    };
    zIndex: {
        type: NumberConstructor;
    };
}, {
    delayShowLoading: import("vue").Ref<boolean>;
    styles: import("vue").ComputedRef<Styles>;
    showText: import("vue").ComputedRef<boolean>;
    hasContent: import("vue").ComputedRef<boolean>;
    classes: import("vue").ComputedRef<{
        baseClasses: any[];
        attachClasses: any[];
        withContentClasses: any[];
        fullScreenClasses: string[];
        normalClasses: any[];
    }>;
    lockFullscreen: import("vue").ComputedRef<boolean>;
    showWrapLoading: import("vue").ComputedRef<boolean>;
    showNormalLoading: import("vue").ComputedRef<boolean>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    attach: {
        type: import("vue").PropType<import("../common").AttachNode>;
        default: string;
    };
    content: {
        type: import("vue").PropType<string | import("../common").TNode<any>>;
    };
    default: {
        type: import("vue").PropType<string | import("../common").TNode<any>>;
    };
    delay: {
        type: NumberConstructor;
        default: number;
    };
    fullscreen: BooleanConstructor;
    indicator: {
        type: import("vue").PropType<boolean | import("../common").TNode<any>>;
        default: boolean;
    };
    inheritColor: BooleanConstructor;
    loading: {
        type: BooleanConstructor;
        default: boolean;
    };
    preventScrollThrough: {
        type: BooleanConstructor;
        default: boolean;
    };
    showOverlay: {
        type: BooleanConstructor;
        default: boolean;
    };
    size: {
        type: StringConstructor;
        default: string;
    };
    text: {
        type: import("vue").PropType<string | import("../common").TNode<any>>;
    };
    zIndex: {
        type: NumberConstructor;
    };
}>>, {
    loading: boolean;
    size: string;
    attach: import("../common").AttachNode;
    indicator: boolean | import("../common").TNode<any>;
    delay: number;
    fullscreen: boolean;
    inheritColor: boolean;
    preventScrollThrough: boolean;
    showOverlay: boolean;
}>;
export default _default;
