import { CalendarController } from '../calendar';
import { ButtonProps } from '../button';
import { TNode } from '../common';
export interface GlobalConfigProvider {
    calendar?: CalendarConfig;
    cascader?: CascaderConfig;
    datePicker?: DatePickerConfig;
    dialog?: DialogConfig;
    drawer?: DrawerConfig;
    form?: FormConfig;
    input?: InputConfig;
    pagination?: PaginationConfig;
    popconfirm?: PopconfirmConfig;
    select?: SelectConfig;
    steps?: StepsConfig;
    table?: TableConfig;
    tag?: TagConfig;
    timePicker?: TimePickerConfig;
    transfer?: TransferConfig;
    tree?: TreeConfig;
    treeSelect?: TreeSelectConfig;
    upload?: UploadConfig;
}
export interface InputConfig {
    placeholder?: string;
}
export interface PaginationConfig {
    itemsPerPage?: string;
    jumpTo?: string;
    page?: string;
    total?: string;
}
export interface CalendarConfig {
    cellMonth?: string;
    controllerConfig?: CalendarController;
    fillWithZero?: boolean;
    firstDayOfWeek?: number;
    hideWeekend?: string;
    monthRadio?: string;
    monthSelection?: string;
    showWeekend?: string;
    thisMonth?: string;
    today?: string;
    week?: string;
    yearRadio?: string;
    yearSelection?: string;
}
export interface CascaderConfig {
    empty?: string;
    loadingText?: string;
    placeholder?: string;
}
export interface TransferConfig {
    empty?: string;
    placeholder?: string;
    title?: string;
}
export interface TimePickerConfig {
    anteMeridiem?: string;
    confirm?: string;
    now?: string;
    placeholder?: string;
    postMeridiem?: string;
}
export interface DatePickerConfig {
    confirm?: string;
    dayAriaLabel?: string;
    direction?: string;
    firstDayOfWeek?: number;
    format?: string;
    months?: string[];
    nextDecade?: string;
    nextMonth?: string;
    nextYear?: string;
    now?: string;
    placeholder?: {
        date?: string;
        month?: string;
        year?: string;
    };
    preDecade?: string;
    preMonth?: string;
    presets?: ConfigPresetDate;
    preYear?: string;
    rangeSeparator?: string;
    selectDate?: string;
    selectTime?: string;
    weekAbbreviation?: string;
    weekdays?: string[];
    yearAriaLabel?: string;
}
export interface DialogConfig {
    cancel?: string | ButtonProps;
    confirm?: string | ButtonProps;
    confirmBtnTheme?: {
        default: string;
        info: string;
        warning: string;
        danger: string;
        success: string;
    };
}
export interface DrawerConfig {
    cancel?: string | ButtonProps;
    confirm?: string | ButtonProps;
}
export interface PopconfirmConfig {
    cancel?: string | ButtonProps;
    confirm?: string | ButtonProps;
    confirmBtnTheme?: {
        default: string;
        warning: string;
        danger: string;
    };
}
export interface TableConfig {
    empty?: string;
    expandIcon?: TNode;
    sortIcon?: TNode;
}
export interface SelectConfig {
    clearIcon?: TNode;
    empty?: string;
    loadingText?: string;
    placeholder?: string;
}
export interface TreeConfig {
    empty?: string;
    folderIcon?: TNode;
}
export interface TreeSelectConfig {
    empty?: string;
    loadingText?: string;
}
export interface UploadConfig {
    cancelUploadText?: string;
    sizeLimitMessage?: string;
}
export interface FormConfig {
    requiredMark?: boolean;
}
export interface TagConfig {
    closeIcon?: TNode;
}
export interface StepsConfig {
    errorIcon?: TNode;
}
export interface ConfigPresetDate {
    [name: string]: DateConfigValue | (() => DateConfigValue);
}
export declare type DateConfigValue = string | Date | Array<DateConfigValue>;
