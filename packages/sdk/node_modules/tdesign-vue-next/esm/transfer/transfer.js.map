{"version":3,"file":"transfer.js","sources":["../../src/transfer/transfer.tsx"],"sourcesContent":["import { defineComponent, VNode } from 'vue';\nimport pick from 'lodash/pick';\nimport { prefix } from '../config';\nimport TransferList from './components/transfer-list';\nimport TransferOperations from './components/transfer-operations';\nimport {\n  TransferListType,\n  TransferItemOption,\n  CheckedOptions,\n  TransferValue,\n  EmptyType,\n  TransferListOptionBase,\n  TargetParams,\n  SearchEvent,\n  SearchOption,\n  TdTransferProps,\n} from './interface';\n\nimport {\n  getTransferListOption,\n  emitEvent,\n  getDataValues,\n  getTransferData,\n  filterTransferData,\n  TRANSFER_NAME,\n} from './utils';\nimport { PageInfo, TdPaginationProps } from '../pagination/type';\nimport mixins from '../utils/mixins';\nimport getConfigReceiverMixins from '../config-provider/config-receiver';\nimport props from './props';\nimport { TNode } from '../common';\n\nconst SOURCE = 'source';\nconst TARGET = 'target';\n\ntype DataType = {\n  SOURCE: TransferListType;\n  TARGET: TransferListType;\n};\n\nexport default defineComponent({\n  ...mixins(getConfigReceiverMixins('transfer')),\n  name: TRANSFER_NAME,\n  components: {\n    TransferList,\n    TransferOperations,\n  },\n  props: {\n    ...props,\n  },\n  emits: [\n    'checkChange',\n    'change',\n    'scroll',\n    'search',\n    'page-change',\n    'update:checked',\n    'checked-change',\n    'update:value',\n  ],\n  data(): DataType {\n    return {\n      SOURCE,\n      TARGET,\n    };\n  },\n  computed: {\n    isTreeMode(): boolean {\n      const treeSlot = this.$slots.tree;\n      return typeof treeSlot === 'function';\n    },\n    leftButtonDisabled(): boolean {\n      return this.direction === 'right';\n    },\n    rightButtonDisabled(): boolean {\n      return this.direction === 'left';\n    },\n    // props 传入的 data 格式化后的数据\n    transferData(): Array<TransferItemOption> {\n      return getTransferData(this.data, this.keys, this.isTreeMode);\n    },\n    sourceList(): Array<TransferItemOption> {\n      return filterTransferData(this.transferData, this.value, false, this.isTreeMode);\n    },\n    targetList(): Array<TransferItemOption> {\n      return filterTransferData(this.transferData, this.value, true, this.isTreeMode);\n    },\n    // 被选中的value\n    checkedValue(): TransferListOptionBase<TransferValue[]> {\n      return {\n        [SOURCE]: getDataValues(this.sourceList, this.checked, { isTreeMode: this.isTreeMode }),\n        [TARGET]: getDataValues(this.targetList, this.checked, { isTreeMode: this.isTreeMode }),\n      };\n    },\n    hasFooter(): boolean {\n      return !!this.$slots.footer || !!this.footer;\n    },\n    showPagination(): boolean {\n      // 翻页在自定义列表无效\n      return !!this.pagination && !this.$slots.content;\n    },\n    showSearch(): boolean {\n      // 翻页在自定义列表无效\n      return !!this.search;\n    },\n    footerOption(): TransferListOptionBase<string | Function> {\n      const footer = this.footer || '';\n      return getTransferListOption<string | Function>(footer);\n    },\n    emptyOption(): TransferListOptionBase<EmptyType> {\n      return getTransferListOption<EmptyType>(this.empty);\n    },\n    searchOption(): TransferListOptionBase<SearchOption> {\n      return getTransferListOption<SearchOption>(this.search);\n    },\n    checkAllOption(): TransferListOptionBase<boolean> {\n      return getTransferListOption<boolean>(this.showCheckAll);\n    },\n    disabledOption(): TransferListOptionBase<boolean> {\n      return getTransferListOption<boolean>(this.disabled);\n    },\n    titleOption(): TransferListOptionBase<string | TNode> {\n      return getTransferListOption<string | TNode>(this.title);\n    },\n    paginationOption(): TransferListOptionBase<TdPaginationProps> {\n      return getTransferListOption<TdPaginationProps>(this.pagination);\n    },\n  },\n  methods: {\n    transferTo(toDirection: TransferListType) {\n      const oldTargetValue: Array<TransferValue> = JSON.parse(JSON.stringify(this.value));\n      let newTargetValue: Array<TransferValue>;\n      const checkedValue = toDirection === TARGET ? this.checkedValue[SOURCE] : this.checkedValue[TARGET];\n      // target->source\n      if (toDirection === SOURCE) {\n        newTargetValue = oldTargetValue.filter((v) => !checkedValue.includes(v));\n      } else if (this.targetSort === 'original') {\n        // 按照原始顺序\n        newTargetValue = getDataValues(this.transferData, oldTargetValue.concat(checkedValue), {\n          isTreeMode: this.isTreeMode,\n        });\n      } else if (this.targetSort === 'unshift') {\n        newTargetValue = checkedValue.concat(oldTargetValue);\n      } else {\n        newTargetValue = oldTargetValue.concat(checkedValue);\n      }\n\n      // 清空checked。与toDirection相反\n      this.handleCheckedChange([], toDirection === SOURCE ? TARGET : SOURCE);\n\n      const params: TargetParams = {\n        type: toDirection,\n        movedValue: checkedValue,\n      };\n      emitEvent<Parameters<TdTransferProps['onChange']>>(this, 'change', newTargetValue, params);\n    },\n    // 点击移到右边按钮触发的函数\n    transferToRight() {\n      this.transferTo(TARGET);\n    },\n    // 点击移到左边按钮触发的函数\n    transferToLeft() {\n      this.transferTo(SOURCE);\n    },\n    handleCheckedChange(val: Array<TransferValue>, listType: TransferListType) {\n      const sourceChecked = listType === SOURCE ? val : this.checkedValue[SOURCE];\n      const targetChecked = listType === TARGET ? val : this.checkedValue[TARGET];\n      const checked = [...sourceChecked, ...targetChecked];\n      const event: CheckedOptions = {\n        checked,\n        sourceChecked,\n        targetChecked,\n        type: listType,\n      };\n      // 支持v-model:checked\n      this.$emit('update:checked', checked);\n      emitEvent<Parameters<TdTransferProps['onCheckedChange']>>(this, 'checked-change', event);\n    },\n    filterMethod(\n      transferList: Array<TransferItemOption>,\n      targetValueList: Array<TransferValue>,\n      needMatch: boolean,\n    ): Array<TransferItemOption> {\n      return transferList.filter((item) => {\n        const isMatch = targetValueList.indexOf(item.value) > -1;\n        return needMatch ? isMatch : !isMatch;\n      });\n    },\n    handleScroll(e: Event, listType: TransferListType) {\n      const target = e.target as HTMLElement;\n      const bottomDistance = target.scrollHeight - target.scrollTop - target.clientHeight;\n      const event: { e: Event; bottomDistance: number; type: TransferListType } = {\n        e,\n        bottomDistance,\n        type: listType,\n      };\n      emitEvent<Parameters<TdTransferProps['onScroll']>>(this, 'scroll', event);\n    },\n    handleSearch(e: SearchEvent) {\n      emitEvent<Parameters<TdTransferProps['onSearch']>>(this, 'search', e);\n    },\n    handlePageChange(pageInfo: PageInfo, listType: TransferListType) {\n      emitEvent<Parameters<TdTransferProps['onPageChange']>>(this, 'page-change', pageInfo, { type: listType });\n    },\n    renderTransferList(listType: TransferListType) {\n      const scopedSlots = pick(this.$slots, [\n        'title',\n        'empty',\n        'footer',\n        'operation',\n        'transferItem',\n        'default',\n        'tree',\n      ]);\n      return (\n        <transfer-list\n          checkboxProps={this.checkboxProps}\n          transferItem={this.transferItem}\n          list-type={listType}\n          title={this.titleOption[listType]}\n          data-source={listType === SOURCE ? this.sourceList : this.targetList}\n          checked-value={this.checkedValue[listType]}\n          disabled={this.disabledOption[listType]}\n          search={this.searchOption[listType]}\n          pagination={this.paginationOption[listType]}\n          check-all={this.checkAllOption[listType]}\n          footer={this.footerOption[listType]}\n          empty={this.emptyOption[listType]}\n          onCheckedChange={($event: any) => this.handleCheckedChange($event, listType)}\n          onScroll={($event: any) => this.handleScroll($event, listType)}\n          onSearch={this.handleSearch}\n          onPageChange={($event: any) => this.handlePageChange($event, listType)}\n          t={this.t}\n          global={this.global}\n          isTreeMode={this.isTreeMode}\n        >\n          {scopedSlots}\n        </transfer-list>\n      );\n    },\n  },\n  render(): VNode {\n    return (\n      <div\n        class={[\n          `${prefix}-transfer`,\n          this.showSearch ? `${prefix}-transfer__search` : '',\n          this.hasFooter ? `${prefix}-transfer__footer` : '',\n          this.showPagination ? `${prefix}-transfer__pagination` : '',\n          this.isTreeMode ? `${prefix}-transfer--with-tree` : '',\n        ]}\n      >\n        {this.renderTransferList(SOURCE)}\n        <transfer-operations\n          left-disabled={\n            this.disabledOption[TARGET] || this.leftButtonDisabled || this.checkedValue[TARGET].length === 0\n          }\n          right-disabled={\n            this.disabledOption[SOURCE] || this.rightButtonDisabled || this.checkedValue[SOURCE].length === 0\n          }\n          operation={this.operation}\n          onMoveToRight={this.transferToRight}\n          onMoveToLeft={this.transferToLeft}\n          v-slots={{ operation: this.$slots.operation }}\n        />\n        {this.renderTransferList(TARGET)}\n      </div>\n    );\n  },\n});\n"],"names":["SOURCE","TARGET","defineComponent","mixins","getConfigReceiverMixins","name","TRANSFER_NAME","components","TransferList","TransferOperations","props","emits","data","computed","isTreeMode","treeSlot","$slots","tree","leftButtonDisabled","direction","rightButtonDisabled","transferData","getTransferData","keys","sourceList","filterTransferData","value","targetList","checkedValue","getDataValues","checked","hasFooter","footer","showPagination","pagination","content","showSearch","search","footerOption","getTransferListOption","emptyOption","empty","searchOption","checkAllOption","showCheckAll","disabledOption","disabled","titleOption","title","paginationOption","methods","transferTo","toDirection","oldTargetValue","JSON","parse","stringify","newTargetValue","filter","v","includes","targetSort","concat","handleCheckedChange","params","type","movedValue","emitEvent","transferToRight","transferToLeft","val","listType","sourceChecked","targetChecked","event","$emit","filterMethod","transferList","targetValueList","needMatch","item","isMatch","indexOf","handleScroll","e","target","bottomDistance","scrollHeight","scrollTop","clientHeight","handleSearch","handlePageChange","pageInfo","renderTransferList","scopedSlots","pick","checkboxProps","transferItem","$event","t","global","render","prefix","length","operation"],"mappings":"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"}