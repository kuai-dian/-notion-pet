{"version":3,"file":"transfer-list.js","sources":["../../../src/transfer/components/transfer-list.tsx"],"sourcesContent":["import { defineComponent, VNode, PropType } from 'vue';\nimport { prefix } from '../../config';\nimport {\n  EmptyType,\n  SearchEvent,\n  SearchOption,\n  TransferValue,\n  TdTransferProps,\n  TransferListType,\n  TransferItemOption,\n} from '../interface';\nimport { PageInfo, TdPaginationProps, Pagination } from '../../pagination';\nimport { Checkbox as TCheckbox, CheckboxGroup as TCheckboxGroup, CheckboxProps } from '../../checkbox';\nimport { findTopNode, getLeefCount, getDataValues } from '../utils';\nimport ripple from '../../utils/ripple';\nimport Search from './transfer-search';\nimport { renderTNodeJSXDefault } from '../../utils/render-tnode';\n\nexport default defineComponent({\n  name: 'TTransferList',\n  components: {\n    Search,\n    TCheckbox,\n    TCheckboxGroup,\n    Pagination,\n  },\n  directives: {\n    ripple,\n  },\n  props: {\n    checkboxProps: {\n      type: Object as PropType<CheckboxProps>,\n      default: () => ({}),\n    },\n    dataSource: {\n      type: Array as PropType<Array<TransferItemOption>>,\n      default(): Array<TransferItemOption> {\n        return [];\n      },\n    },\n    listType: {\n      type: String as PropType<TransferListType>,\n      default: 'target',\n    },\n    title: {\n      type: [String, Function],\n    },\n    checkedValue: {\n      type: Array as PropType<Array<TransferValue>>,\n      default(): Array<TransferValue> {\n        return [];\n      },\n    },\n    disabled: {\n      type: Boolean,\n      default: false,\n    },\n    search: {\n      type: [Boolean, Object] as PropType<SearchOption>,\n      default: false,\n    },\n    transferItem: Function as PropType<TdTransferProps['transferItem']>,\n    empty: {\n      type: [Function, String] as PropType<EmptyType>,\n    },\n    pagination: [Boolean, Object],\n    footer: [Function, String],\n    checkAll: Boolean,\n    t: Function,\n    global: Object,\n    isTreeMode: {\n      type: Boolean as PropType<boolean>,\n      default: false,\n    },\n  },\n  emits: ['pageChange', 'checkedChange', 'scroll', 'search'],\n  data() {\n    return {\n      filterValue: '', // 搜索框输入内容,\n      // 用于兼容处理 Pagination 的非受控属性（非受控属性仅有 change 事件变化，无 props 变化，因此只需监听事件）\n      defaultCurrent: 1,\n      // 用于兼容处理 Pagination 的非受控属性\n      defaultPageSize: 0,\n    };\n  },\n  computed: {\n    // this.defaultCurrent 属于分页组件抛出的事件参数，非受控的情况也会有该事件触发\n    // this.pagination.defaultCurrent 为表格组件传入的非受控属性\n    currentPage(): number {\n      return this.pagination.current || this.defaultCurrent || this.pagination.defaultCurrent;\n    },\n    pageSize(): number {\n      return this.pagination.pageSize || this.defaultPageSize || this.pagination.defaultPageSize;\n    },\n    pageTotal(): number {\n      return (this.filteredData && this.filteredData.length) || 0;\n    },\n    filteredData(): Array<TransferItemOption> {\n      return this.dataSource.filter((item: TransferItemOption) => {\n        const label = item && item.label.toString();\n        return label.toLowerCase().indexOf(this.filterValue.toLowerCase()) > -1;\n      });\n    },\n    curPageData(): Array<TransferItemOption> {\n      let pageData = this.filteredData;\n      if (!this.pagination) return pageData;\n      if (this.pageSize === 0) return pageData;\n      const startIndex = (this.currentPage - 1) * this.pageSize;\n      const endIndex = this.currentPage * this.pageSize;\n      pageData = pageData.slice(startIndex, endIndex);\n      return pageData;\n    },\n    paginationProps(): TdPaginationProps {\n      const defaultPaginationProps: TdPaginationProps = {\n        size: 'small',\n        theme: 'simple',\n        totalContent: false,\n        pageSizeOptions: [],\n      };\n      return typeof this.pagination === 'object'\n        ? {\n            ...defaultPaginationProps,\n            ...this.pagination,\n            current: this.currentPage,\n            total: this.pageTotal,\n            pageSize: this.pageSize,\n          }\n        : {};\n    },\n    hasFooter(): boolean {\n      return !!this.$slots.default;\n    },\n    indeterminate(): boolean {\n      return !this.isAllChecked && this.checkedValue.length > 0;\n    },\n    isAllChecked(): boolean {\n      return (\n        this.checkedValue.length > 0 &&\n        this.dataSource.every((item: TransferItemOption) => item.disabled || this.checkedValue.includes(item.value))\n      );\n    },\n    totalCount(): number {\n      return getLeefCount(this.dataSource);\n    },\n  },\n  methods: {\n    handlePaginationChange(pageInfo: PageInfo): void {\n      this.$emit('pageChange', pageInfo);\n      this.defaultCurrent = pageInfo.current;\n      this.defaultPageSize = pageInfo.pageSize;\n    },\n    handleCheckedChange(val: Array<TransferValue>): void {\n      this.$emit('checkedChange', val);\n    },\n    handleCheckedAllChange(checked: boolean): void {\n      if (checked) {\n        const allValue = getDataValues(this.dataSource, [], { isTreeMode: this.isTreeMode, include: false });\n        this.handleCheckedChange(allValue);\n      } else {\n        this.handleCheckedChange([]);\n      }\n    },\n    scroll(e: Event): void {\n      this.$emit('scroll', e);\n    },\n    handleSearch(e: any): void {\n      const event: SearchEvent = {\n        query: e.value,\n        type: this.listType as TransferListType,\n        e: e.e,\n        trigger: e.trigger,\n      };\n      this.filterValue = e.value;\n      this.$emit('search', event);\n    },\n    renderTitle() {\n      const defaultNode = this.title && typeof this.title === 'string' ? <template>{this.title}</template> : null;\n      const titleNode = renderTNodeJSXDefault(this, 'title', {\n        defaultNode,\n        params: {\n          type: this.listType,\n        },\n      });\n      return <span>{titleNode}</span>;\n    },\n    renderContent() {\n      const defaultNode = (\n        <TCheckboxGroup value={this.checkedValue} onChange={this.handleCheckedChange}>\n          {this.curPageData.map((item, index) => (\n            <TCheckbox\n              disabled={this.disabled || item.disabled}\n              value={item.value}\n              class={[\n                `${prefix}-transfer__list-item`,\n                this.checkedValue.includes(item.value) ? `${prefix}-is-checked` : '',\n              ]}\n              key={item.key}\n              v-ripple\n              {...{ props: this.checkboxProps }}\n            >\n              {renderTNodeJSXDefault(this, 'transferItem', {\n                defaultNode: <span>{item.label}</span>,\n                params: { data: item.data, index, type: this.listType },\n              })}\n            </TCheckbox>\n          ))}\n        </TCheckboxGroup>\n      );\n      return (\n        <div class={`${prefix}-transfer__list-content narrow-scrollbar`} onScroll={this.scroll}>\n          {/* {this.$slots.tree\n            ? this.$slots.tree({\n                data: this.curPageData,\n                value: this.checkedValue,\n                onChange: this.handleCheckedChange,\n              })\n            : defaultNode} */}\n          {renderTNodeJSXDefault(this, 'tree', {\n            defaultNode,\n            params: {\n              data: this.curPageData,\n              value: this.checkedValue,\n              onChange: this.handleCheckedChange,\n            },\n          })}\n        </div>\n      );\n    },\n    renderEmpty() {\n      const empty = this.empty || this.t(this.global.empty);\n      const defaultNode: VNode = typeof empty === 'string' ? <span>{empty}</span> : null;\n      return (\n        <div class={`${prefix}-transfer__empty`}>\n          {renderTNodeJSXDefault(this, 'empty', {\n            defaultNode,\n            params: {\n              type: this.listType,\n            },\n          })}\n        </div>\n      );\n    },\n    renderFooter() {\n      const defaultNode =\n        typeof this.footer === 'string' ? <div class={`${prefix}-transfer__footer`}>{this.footer}</div> : null;\n      return renderTNodeJSXDefault(this, 'footer', {\n        defaultNode,\n        params: {\n          type: this.listType,\n        },\n      });\n    },\n  },\n  render() {\n    return (\n      <div class={`${prefix}-transfer__list ${prefix}-transfer__list-${this.listType}`}>\n        <div class={`${prefix}-transfer__list-header`}>\n          <div>\n            {this.checkAll && (\n              <TCheckbox\n                disabled={this.disabled || !this.dataSource.length}\n                checked={this.isAllChecked}\n                indeterminate={this.indeterminate}\n                onChange={this.handleCheckedAllChange}\n              />\n            )}\n            <span>\n              {this.t(this.global.title, {\n                checked: this.checkedValue.length,\n                total: this.totalCount,\n              })}\n            </span>\n          </div>\n          {this.renderTitle()}\n        </div>\n        <div class={[`${prefix}-transfer__list-body`, this.search ? `${prefix}-transfer__list--with-search` : '']}>\n          {this.search && (\n            <search\n              searchValue={this.filterValue}\n              placeholder={this.t(this.global.placeholder)}\n              onChange={this.handleSearch}\n              disabled={this.disabled}\n              search={this.search}\n            />\n          )}\n          {this.curPageData.length > 0 ? this.renderContent() : this.renderEmpty()}\n        </div>\n        {this.pagination && this.pageSize > 0 && this.pageTotal > 0 && (\n          <div class={`${prefix}-transfer__list-pagination`}>\n            <t-pagination {...this.paginationProps} onChange={this.handlePaginationChange} />\n          </div>\n        )}\n        {this.renderFooter()}\n      </div>\n    );\n  },\n});\n"],"names":["defineComponent","name","components","Search","TCheckbox","TCheckboxGroup","Pagination","directives","ripple","props","checkboxProps","type","Object","dataSource","Array","listType","String","title","Function","checkedValue","disabled","Boolean","search","transferItem","empty","pagination","footer","checkAll","t","global","isTreeMode","emits","data","filterValue","defaultCurrent","defaultPageSize","computed","currentPage","current","pageSize","pageTotal","filteredData","length","filter","item","label","toString","toLowerCase","indexOf","curPageData","pageData","startIndex","endIndex","slice","paginationProps","defaultPaginationProps","size","theme","totalContent","pageSizeOptions","total","hasFooter","$slots","indeterminate","isAllChecked","every","includes","value","totalCount","getLeefCount","methods","handlePaginationChange","pageInfo","$emit","handleCheckedChange","val","handleCheckedAllChange","checked","allValue","getDataValues","include","scroll","e","handleSearch","event","query","trigger","renderTitle","defaultNode","titleNode","renderTNodeJSXDefault","params","renderContent","map","index","prefix","key","onChange","renderEmpty","renderFooter","render","placeholder"],"mappings":"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"}