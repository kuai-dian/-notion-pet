{"version":3,"file":"aside.js","sources":["../../src/layout/aside.tsx"],"sourcesContent":["import { defineComponent, onMounted, onUnmounted, inject } from 'vue';\nimport { prefix } from '../config';\nimport props from './aside-props';\nimport { renderTNodeJSX } from '../utils/render-tnode';\n\nimport { LayoutProvideType } from './layout';\n\nexport default defineComponent({\n  name: 'TAside',\n\n  props,\n\n  setup() {\n    const { hasSide } = inject<LayoutProvideType>('layout', Object.create(null));\n    if (!hasSide) return;\n\n    onMounted(() => {\n      hasSide.value = true;\n    });\n\n    onUnmounted(() => {\n      hasSide.value = false;\n    });\n  },\n\n  render() {\n    const styles = this.width ? { width: this.width } : {};\n    return (\n      <aside class={`${prefix}-layout__sider`} style={styles}>\n        {renderTNodeJSX(this, 'default')}\n      </aside>\n    );\n  },\n});\n"],"names":["defineComponent","name","props","setup","inject","Object","create","hasSide","onMounted","value","onUnmounted","render","styles","width","prefix","renderTNodeJSX"],"mappings":";;;;;;;;;;;;;;;AAIA,aAAeA,eAAe,CAAC;AAC7BC,EAAAA,IAAI,EAAE,QADuB;AAE7BC,EAAAA,KAAK,EAALA,KAF6B;AAG7BC,EAAAA,KAH6B,mBAGrB;AACN,kBAAoBC,MAAM,CAAC,QAAD,iBAA2BC,MAAM,CAACC,MAAP,CAAc,IAAd,CAA3B,CAA1B;AAAA,QAAQC,OAAR,WAAQA,OAAR;;AACA,QAAI,CAACA,OAAL,EACE;AACFC,IAAAA,SAAS,CAAC,YAAM;AACdD,MAAAA,OAAO,CAACE,KAAR,GAAgB,IAAhB;AACD,KAFQ,CAAT;AAGAC,IAAAA,WAAW,CAAC,YAAM;AAChBH,MAAAA,OAAO,CAACE,KAAR,GAAgB,KAAhB;AACD,KAFU,CAAX;AAGD,GAb4B;AAc7BE,EAAAA,MAd6B,oBAcpB;AACP,QAAMC,MAAM,GAAG,KAAKC,KAAL,GAAa;AAAEA,MAAAA,KAAK,EAAE,KAAKA;AAAd,KAAb,GAAqC,EAApD;AACA;AAAA,yBAAwBC,MAAxB;AAAA,eAAuDF;AAAvD,QAAgEG,cAAc,CAAC,IAAD,EAAO,SAAP,CAA9E;AACD;AAjB4B,CAAD,CAA9B;;;;"}