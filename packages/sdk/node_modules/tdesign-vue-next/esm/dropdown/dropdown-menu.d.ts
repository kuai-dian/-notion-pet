import { VNode } from 'vue';
import { DropdownOption } from './type';
declare const _default: import("vue").DefineComponent<{
    options: {
        type: ArrayConstructor;
        default: () => [];
    };
    maxHeight: {
        type: NumberConstructor;
        default: number;
    };
    maxColumnWidth: {
        type: NumberConstructor;
        default: number;
    };
    minColumnWidth: {
        type: NumberConstructor;
        default: number;
    };
}, unknown, {
    path: string;
}, {}, {
    isActive(item: DropdownOption, pathPrefix: string, excludeSelf?: boolean): boolean;
    handleHoverItem(path: string): void;
    handleItemClick(data: DropdownOption, context: {
        e: MouseEvent;
    }, idx: number): void;
    renderMenuColumn(children: Array<DropdownOption>, showSubmenu: boolean, pathPrefix: string): VNode;
}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "click"[], "click", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    options: {
        type: ArrayConstructor;
        default: () => [];
    };
    maxHeight: {
        type: NumberConstructor;
        default: number;
    };
    maxColumnWidth: {
        type: NumberConstructor;
        default: number;
    };
    minColumnWidth: {
        type: NumberConstructor;
        default: number;
    };
}>> & {
    onClick?: (...args: any[]) => any;
}, {
    maxHeight: number;
    options: unknown[];
    maxColumnWidth: number;
    minColumnWidth: number;
}>;
export default _default;
