/**
 * tdesign v0.8.0
 * (c) 2022 tdesign
 * @license MIT
 */

import _defineProperty from '@babel/runtime/helpers/defineProperty';
import { defineComponent, getCurrentInstance, withDirectives, createVNode, vShow } from 'vue';
import tabPanelProps from './tab-panel-props.js';
import { renderContent } from '../utils/render-tnode.js';
import 'lodash/isEmpty';
import 'lodash/isString';
import 'lodash/isFunction';
import 'lodash/isObject';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var _TabPanel = defineComponent({
  name: "TTabPanel",
  props: _objectSpread({}, tabPanelProps),
  computed: {
    active: function active() {
      var value = this.$parent.value;
      return this.value === value;
    }
  },
  render: function render() {
    var instance = getCurrentInstance();
    var _instance$ctx = instance.ctx,
        destroyOnHide = _instance$ctx.destroyOnHide,
        active = _instance$ctx.active;
    if (destroyOnHide && !active) return null;
    return withDirectives(createVNode("div", {
      "class": "t-tab-panel"
    }, [renderContent(this, "default", "panel")]), [[vShow, active]]);
  }
});

export { _TabPanel as default };
//# sourceMappingURL=tab-panel.js.map
