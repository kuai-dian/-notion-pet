import { PropType } from 'vue';
import { UploadFile } from './type';
import { ClassName } from '../common';
declare const _default: import("vue").DefineComponent<{
    showUploadProgress: {
        type: BooleanConstructor;
        default: boolean;
    };
    file: PropType<UploadFile>;
    loadingFile: PropType<UploadFile>;
    remove: PropType<(e: MouseEvent) => void>;
    placeholder: StringConstructor;
    display: {
        type: PropType<"file" | "file-input">;
        validator(val: string): boolean;
    };
}, unknown, unknown, {
    percent(): number;
    showPreview(): boolean;
    showTextPreview(): boolean;
    showInput(): boolean;
    showProgress(): boolean;
    showDelete(): boolean;
    inputName(): string;
    inputText(): string;
    inputTextClass(): ClassName;
    classes(): ClassName;
}, {
    renderProgress(): JSX.Element;
    renderResult(): "" | JSX.Element;
    renderFilePreviewAsText(): JSX.Element;
    renderFilePreviewAsInput(): JSX.Element;
}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    showUploadProgress: {
        type: BooleanConstructor;
        default: boolean;
    };
    file: PropType<UploadFile>;
    loadingFile: PropType<UploadFile>;
    remove: PropType<(e: MouseEvent) => void>;
    placeholder: StringConstructor;
    display: {
        type: PropType<"file" | "file-input">;
        validator(val: string): boolean;
    };
}>>, {
    showUploadProgress: boolean;
}>;
export default _default;
