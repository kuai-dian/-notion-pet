import { PropType } from 'vue';
import { UploadFile } from './type';
import { UploadRemoveOptions } from './interface';
declare const _default: import("vue").DefineComponent<{
    showUploadProgress: {
        type: BooleanConstructor;
        default: boolean;
    };
    files: {
        type: PropType<UploadFile[]>;
    };
    loadingFile: {
        type: PropType<UploadFile>;
    };
    trigger: {
        type: PropType<(e: MouseEvent) => void>;
    };
    remove: {
        type: PropType<(options: UploadRemoveOptions) => void>;
    };
    multiple: BooleanConstructor;
    max: NumberConstructor;
    disabled: BooleanConstructor;
}, unknown, unknown, {
    showTrigger(): boolean;
}, {
    onMaskClick(e: MouseEvent): void;
    onViewClick(e: MouseEvent, file?: UploadFile): void;
}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "img-preview"[], "img-preview", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    showUploadProgress: {
        type: BooleanConstructor;
        default: boolean;
    };
    files: {
        type: PropType<UploadFile[]>;
    };
    loadingFile: {
        type: PropType<UploadFile>;
    };
    trigger: {
        type: PropType<(e: MouseEvent) => void>;
    };
    remove: {
        type: PropType<(options: UploadRemoveOptions) => void>;
    };
    multiple: BooleanConstructor;
    max: NumberConstructor;
    disabled: BooleanConstructor;
}>> & {
    "onImg-preview"?: (...args: any[]) => any;
}, {
    disabled: boolean;
    multiple: boolean;
    showUploadProgress: boolean;
}>;
export default _default;
