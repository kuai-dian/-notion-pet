{"version":3,"file":"flow-list.js","sources":["../../src/upload/flow-list.tsx"],"sourcesContent":["import { defineComponent, VNode, PropType } from 'vue';\nimport {\n  TimeFilledIcon,\n  CheckCircleFilledIcon,\n  ErrorCircleFilledIcon,\n  DeleteIcon,\n  BrowseIcon,\n} from 'tdesign-icons-vue-next';\nimport { UploadFile } from './type';\nimport { prefix } from '../config';\n\nimport TButton from '../button';\nimport TLoading from '../loading';\nimport { returnFileSize, abridgeName, UPLOAD_NAME } from './util';\nimport { FlowRemoveContext } from './interface';\nimport props from './props';\n\nexport default defineComponent({\n  name: 'TUploadFlowList',\n\n  components: {\n    TButton,\n    TLoading,\n    TimeFilledIcon,\n    CheckCircleFilledIcon,\n    ErrorCircleFilledIcon,\n    DeleteIcon,\n    BrowseIcon,\n  },\n\n  props: {\n    showUploadProgress: props.showUploadProgress,\n    // 已上传完成的文件\n    files: Array as PropType<Array<UploadFile>>,\n    // 上传队列中的文件（可能存在已经上传过的文件）\n    toUploadFiles: Array as PropType<Array<UploadFile>>,\n    placeholder: String,\n    autoUpload: Boolean,\n    remove: Function as PropType<(ctx: FlowRemoveContext) => void>,\n    upload: Function as PropType<(files: Array<UploadFile>, e: MouseEvent) => void>,\n    cancel: Function as PropType<(e: MouseEvent) => void>,\n    display: {\n      type: String as PropType<'file-flow' | 'image-flow'>,\n      validator(val: string) {\n        return ['file-flow', 'image-flow'].includes(val);\n      },\n    },\n  },\n  emits: ['dragleave', 'change', 'dragenter', 'imgPreview'],\n\n  data() {\n    return {\n      dragActive: false,\n      target: null,\n    };\n  },\n  computed: {\n    showInitial(): boolean {\n      const isWatingEmpty = !this.waitingUploadFiles || !this.waitingUploadFiles.length;\n      return (!this.files || !this.files.length) && isWatingEmpty;\n    },\n    // 上传队列中的文件（不包含已经上传过的文件）\n    waitingUploadFiles(): Array<UploadFile> {\n      const list: Array<UploadFile> = [];\n      this.toUploadFiles.forEach((item: UploadFile) => {\n        const r = this.files.filter((t: UploadFile) => t.name === item.name);\n        if (!r.length) {\n          list.push(item);\n        }\n      });\n      return list;\n    },\n    listFiles(): Array<UploadFile> {\n      if (!this.files || !this.files.length) return this.toUploadFiles;\n      return this.files.concat(this.waitingUploadFiles);\n    },\n    failedList(): Array<UploadFile> {\n      return this.toUploadFiles.filter((file: UploadFile) => file.status === 'fail');\n    },\n    processList(): Array<UploadFile> {\n      return this.toUploadFiles.filter((file: UploadFile) => file.status === 'progress');\n    },\n    isUploading(): boolean {\n      return !!this.processList.length;\n    },\n    allowUpload(): boolean {\n      return Boolean(this.waitingUploadFiles && this.waitingUploadFiles.length) && !this.isUploading;\n    },\n    uploadText(): string {\n      if (this.isUploading) return '上传中...';\n      return this.failedList && this.failedList.length ? '重新上传' : '开始上传';\n    },\n  },\n  methods: {\n    renderStatus(file: UploadFile) {\n      let status = null;\n      switch (file.status) {\n        case 'success':\n          status = (\n            <div class={`${UPLOAD_NAME}__flow-status`}>\n              <CheckCircleFilledIcon />\n              <span>上传成功</span>\n            </div>\n          );\n          break;\n        case 'fail':\n          status = (\n            <div class={`${UPLOAD_NAME}__flow-status`}>\n              <ErrorCircleFilledIcon />\n              <span>上传失败</span>\n            </div>\n          );\n          break;\n        case 'progress':\n          this.showUploadProgress &&\n            (status = (\n              <div class={`${UPLOAD_NAME}__flow-status`}>\n                <TLoading />\n                <span>上传中 {Math.min(file.percent, 99)}%</span>\n              </div>\n            ));\n          break;\n        case 'waiting':\n          status = (\n            <div class={`${UPLOAD_NAME}__flow-status`}>\n              <TimeFilledIcon />\n              <span>待上传</span>\n            </div>\n          );\n          break;\n        default:\n          break;\n      }\n      return status;\n    },\n    handleDrop(event: DragEvent) {\n      event.preventDefault();\n      this.$emit('change', event.dataTransfer.files);\n      this.$emit('dragleave', event);\n      this.dragActive = false;\n    },\n\n    handleDragenter(event: DragEvent) {\n      this.target = event.target;\n      event.preventDefault();\n      this.$emit('dragenter', event);\n      this.dragActive = true;\n    },\n\n    handleDragleave(event: DragEvent) {\n      if (this.target !== event.target) return;\n      event.preventDefault();\n      this.$emit('dragleave', event);\n      this.dragActive = false;\n    },\n\n    handleDragover(event: DragEvent) {\n      event.preventDefault();\n    },\n\n    onViewClick(event: MouseEvent, file?: UploadFile) {\n      this.$emit('imgPreview', event, file);\n    },\n\n    renderDrager() {\n      return (\n        <div\n          class={`${UPLOAD_NAME}__flow-empty`}\n          onDrop={this.handleDrop}\n          onDragenter={this.handleDragenter}\n          onDragover={this.handleDragover}\n          onDragleave={this.handleDragleave}\n        >\n          {this.dragActive ? '释放鼠标' : '点击上方“选择文件”或将文件拖拽到此区域'}\n        </div>\n      );\n    },\n\n    renderFileList() {\n      return (\n        <table class={`${UPLOAD_NAME}__flow-table`}>\n          <tr>\n            <th>文件名</th>\n            <th>大小</th>\n            <th>状态</th>\n            <th>操作</th>\n          </tr>\n          {this.showInitial && (\n            <tr>\n              <td colspan={4}>{this.renderDrager()}</td>\n            </tr>\n          )}\n          {this.listFiles.map((file, index) => (\n            <tr>\n              <td>{abridgeName(file.name, 7, 10)}</td>\n              <td>{returnFileSize(file.size)}</td>\n              <td>{this.renderStatus(file)}</td>\n              <td>\n                <span\n                  class={`${UPLOAD_NAME}__flow-button`}\n                  onClick={(e: MouseEvent) => this.remove({ e, index, file })}\n                >\n                  删除\n                </span>\n              </td>\n            </tr>\n          ))}\n        </table>\n      );\n    },\n\n    renderImgList() {\n      return (\n        <div class={`${UPLOAD_NAME}__flow-card-area`}>\n          {this.showInitial && this.renderDrager()}\n          {!!this.listFiles.length && (\n            <ul class={`${UPLOAD_NAME}__card clearfix`}>\n              {this.listFiles.map((file, index) => (\n                <li class={`${UPLOAD_NAME}__card-item`}>\n                  <div\n                    class={[`${UPLOAD_NAME}__card-content`, { [`${prefix}-is-bordered`]: file.status !== 'waiting' }]}\n                  >\n                    {file.status === 'fail' && (\n                      <div class={`${UPLOAD_NAME}__card-status-wrap`}>\n                        <ErrorCircleFilledIcon />\n                        <p>上传失败</p>\n                      </div>\n                    )}\n                    {file.status === 'progress' && (\n                      <div class={`${UPLOAD_NAME}__card-status-wrap`}>\n                        <TLoading />\n                        <p>上传中 {Math.min(file.percent, 99)}</p>\n                      </div>\n                    )}\n                    {(['waiting', 'success'].includes(file.status) || (!file.status && file.url)) && (\n                      <img\n                        class={`${UPLOAD_NAME}__card-image`}\n                        src={file.url || '//tdesign.gtimg.com/tdesign-default-img.png'}\n                      />\n                    )}\n                    <div class={`${UPLOAD_NAME}__card-mask`}>\n                      {file.url && (\n                        <span class={`${UPLOAD_NAME}__card-mask-item`}>\n                          <BrowseIcon onClick={({ e }: { e: MouseEvent }) => this.onViewClick(e, file)} />\n                          <span class={`${UPLOAD_NAME}__card-mask-item-divider`}></span>\n                        </span>\n                      )}\n                      <span\n                        class={`${UPLOAD_NAME}__card-mask-item`}\n                        onClick={(e: MouseEvent) => this.remove({ e, index, file })}\n                      >\n                        <DeleteIcon />\n                      </span>\n                    </div>\n                  </div>\n                  <p class={`${UPLOAD_NAME}__card-name`}>{abridgeName(file.name)}</p>\n                </li>\n              ))}\n            </ul>\n          )}\n        </div>\n      );\n    },\n  },\n\n  render(): VNode {\n    return (\n      <div class={[`${UPLOAD_NAME}__flow`, `${UPLOAD_NAME}__flow-${this.display}`]}>\n        <div class={`${UPLOAD_NAME}__flow-op`}>\n          {this.$slots.default && this.$slots.default(null)}\n          <small class={`${prefix}-size-s ${UPLOAD_NAME}__flow-placeholder`}>{this.placeholder}</small>\n        </div>\n        {this.display === 'file-flow' && this.renderFileList()}\n        {this.display === 'image-flow' && this.renderImgList()}\n        <div class={`${UPLOAD_NAME}__flow-bottom`}>\n          <TButton theme=\"default\" onClick={this.cancel}>\n            取消\n          </TButton>\n          <TButton\n            disabled={!this.allowUpload}\n            theme=\"primary\"\n            onClick={(e: MouseEvent) => this.upload(this.waitingUploadFiles, e)}\n          >\n            {this.uploadText}\n          </TButton>\n        </div>\n      </div>\n    );\n  },\n});\n"],"names":["defineComponent","name","components","TButton","TLoading","TimeFilledIcon","CheckCircleFilledIcon","ErrorCircleFilledIcon","DeleteIcon","BrowseIcon","props","showUploadProgress","files","Array","toUploadFiles","placeholder","String","autoUpload","Boolean","remove","Function","upload","cancel","display","type","validator","val","includes","emits","data","dragActive","target","computed","showInitial","isWatingEmpty","waitingUploadFiles","length","list","forEach","item","r","filter","t","push","listFiles","concat","failedList","file","status","processList","isUploading","allowUpload","uploadText","methods","renderStatus","UPLOAD_NAME","Math","min","percent","handleDrop","event","preventDefault","$emit","dataTransfer","handleDragenter","handleDragleave","handleDragover","onViewClick","renderDrager","renderFileList","map","index","abridgeName","returnFileSize","size","e","renderImgList","prefix","url","render","$slots"],"mappings":"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"}