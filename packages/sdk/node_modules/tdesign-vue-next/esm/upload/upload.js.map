{"version":3,"file":"upload.js","sources":["../../src/upload/upload.tsx"],"sourcesContent":["import { VNode, defineComponent } from 'vue';\nimport findIndex from 'lodash/findIndex';\nimport isFunction from 'lodash/isFunction';\nimport { UploadIcon } from 'tdesign-icons-vue-next';\nimport mixins from '../utils/mixins';\nimport getConfigReceiverMixins, { UploadConfig } from '../config-provider/config-receiver';\nimport { prefix } from '../config';\nimport Dragger from './dragger';\nimport ImageCard from './image';\nimport FlowList from './flow-list';\nimport xhr from '../_common/js/upload/xhr';\nimport TButton from '../button';\nimport TDialog from '../dialog';\nimport SingleFile from './single-file';\nimport { renderContent } from '../utils/render-tnode';\nimport props from './props';\nimport { ClassName, SlotReturnValue } from '../common';\nimport { emitEvent } from '../utils/event';\nimport {\n  HTMLInputEvent,\n  SuccessContext,\n  InnerProgressContext,\n  UploadRemoveOptions,\n  FlowRemoveContext,\n} from './interface';\nimport {\n  TdUploadProps,\n  UploadChangeContext,\n  UploadFile,\n  UploadRemoveContext,\n  RequestMethodResponse,\n  SizeUnit,\n  SizeLimitObj,\n} from './type';\n\nconst name = `${prefix}-upload`;\n\n/**\n * [*] 表示方法采用这种方式\n * [x] 表示方法不采用这种方式\n *\n * [x] bit      位              b     0 or 1\n * [*] byte     字节            B     8 bits\n * [x] kilobit  千位            kb    1000 bites\n * [*] kilobyte 千字节(二进制)   KB    1024 bytes\n * [x] kilobyte 千字节(十进制)   KB    1000 bytes\n * [x] Megabite 百万位          Mb    1000 kilobits\n * [*] Megabyte 兆字节(二进制)   KB    1024 kilobytes\n * [*] Megabyte 兆字节(十进制)   KB    1000 kilobytes\n * [x] Gigabit  万亿位          Gb    1000 Megabite\n * [*] Gigabyte 吉字节(二进制)   GB    1024 Megabytes\n * [x] Gigabyte 吉字节(十进制)   GB    1000 Megabytes\n */\n\n// 各个单位和 KB 的关系\nconst SIZE_MAP = {\n  B: 1024,\n  KB: 1,\n  MB: 1048576, // 1024 * 1024\n  GB: 1073741824, // 1024 * 1024 * 1024\n};\n\n/**\n * 大小比较\n * @param size 文件大小\n * @param unit 计算机计量单位\n */\nfunction isOverSizeLimit(fileSize: number, sizeLimit: number, unit: SizeUnit) {\n  // 以 KB 为单位进行比较\n  const units = ['B', 'KB', 'MB', 'GB'];\n  const KB_INDEX = 1;\n  let index = units.indexOf(unit);\n  if (index === -1) {\n    console.warn(`TDesign Upload Warn: \\`sizeLimit.unit\\` can only be one of ${units.join()}`);\n    index = KB_INDEX;\n  }\n  const num = SIZE_MAP[unit];\n  const limit = index < KB_INDEX ? sizeLimit / num : sizeLimit * num;\n  return fileSize <= limit;\n}\n\nexport default defineComponent({\n  ...mixins(getConfigReceiverMixins<UploadConfig>('upload')),\n  name: 'TUpload',\n\n  components: {\n    TButton,\n    Dragger,\n    SingleFile,\n    ImageCard,\n    FlowList,\n    TDialog,\n  },\n\n  props: { ...props },\n\n  data() {\n    return {\n      dragActive: false,\n      // 加载中的文件\n      loadingFile: null as UploadFile,\n      // 等待上传的文件队列\n      toUploadFiles: [],\n      errorMsg: '',\n      showImageViewDialog: false,\n      showImageViewUrl: '',\n      xhrReq: null as XMLHttpRequest,\n    };\n  },\n\n  computed: {\n    // 默认文件上传风格：文件进行上传和上传成功后不显示 tips\n    showTips(): boolean {\n      if (this.theme === 'file') {\n        const hasNoFile = (!this.files || !this.files.length) && !this.loadingFile;\n        return this.tips && hasNoFile;\n      }\n      return Boolean(this.tips);\n    },\n    // 完全自定义上传\n    showCustomDisplay(): boolean {\n      return this.theme === 'custom';\n    },\n    // 单文件非拖拽类文件上传\n    showSingleDisplay(): boolean {\n      return !this.draggable && ['file', 'file-input'].includes(this.theme);\n    },\n    // 单文件非拖拽勒图片上传\n    showImgCard(): boolean {\n      return !this.draggable && this.theme === 'image';\n    },\n    // 拖拽类单文件或图片上传\n    singleDraggable(): boolean {\n      return !this.multiple && this.draggable && ['file', 'file-input', 'image'].includes(this.theme);\n    },\n    showUploadList(): boolean {\n      return this.multiple && ['file-flow', 'image-flow'].includes(this.theme);\n    },\n    showImgDialog(): boolean {\n      return ['image', 'image-flow', 'custom'].includes(this.theme);\n    },\n    showErrorMsg(): boolean {\n      return !this.showUploadList && !!this.errorMsg;\n    },\n    tipsClasses(): ClassName {\n      return [`${name}__tips ${prefix}-size-s`];\n    },\n    errorClasses(): ClassName {\n      return this.tipsClasses.concat(`${name}__tips-error`);\n    },\n  },\n\n  methods: {\n    emitChangeEvent(files: Array<UploadFile>, ctx: UploadChangeContext) {\n      emitEvent<Parameters<TdUploadProps['onChange']>>(this, 'change', files, ctx);\n    },\n    emitRemoveEvent(ctx: UploadRemoveContext) {\n      emitEvent<Parameters<TdUploadProps['onRemove']>>(this, 'remove', ctx);\n    },\n    // handle event of preview img dialog event\n    handlePreviewImg(event: MouseEvent, file?: UploadFile) {\n      if (!file || !file.url) throw new Error('Error file');\n      this.showImageViewUrl = file.url;\n      this.showImageViewDialog = true;\n      const previewCtx = { file, e: event };\n      emitEvent<Parameters<TdUploadProps['onPreview']>>(this, 'preview', previewCtx);\n    },\n\n    handleChange(event: HTMLInputEvent): void {\n      const { files } = event.target;\n      if (this.disabled) return;\n      this.uploadFiles(files);\n      (this.$refs.input as HTMLInputElement).value = '';\n    },\n\n    handleDragChange(files: FileList): void {\n      if (this.disabled) return;\n      this.uploadFiles(files);\n    },\n\n    handleSingleRemove(e: MouseEvent) {\n      const changeCtx = { trigger: 'remove' };\n      if (this.loadingFile) this.loadingFile = null;\n      this.errorMsg = '';\n      this.emitChangeEvent([], changeCtx);\n      this.emitRemoveEvent({ e });\n    },\n\n    handleFileInputRemove(e: MouseEvent) {\n      // prevent trigger upload\n      e?.stopPropagation();\n      this.handleSingleRemove(e);\n    },\n\n    handleMultipleRemove(options: UploadRemoveOptions) {\n      const changeCtx = { trigger: 'remove', ...options };\n      const files = this.files.concat();\n      files.splice(options.index, 1);\n      this.emitChangeEvent(files, changeCtx);\n      this.emitRemoveEvent(options);\n    },\n\n    handleListRemove(context: FlowRemoveContext) {\n      const { file } = context;\n      const index = findIndex(this.toUploadFiles, (o: any) => o.name === file.name);\n      if (index >= 0) {\n        this.toUploadFiles.splice(index, 1);\n      } else {\n        const index = findIndex(this.files, (o: any) => o.name === file.name);\n        this.handleMultipleRemove({ e: context.e, index });\n      }\n    },\n\n    uploadFiles(files: FileList) {\n      let tmpFiles = [...files];\n      if (this.max) {\n        tmpFiles = tmpFiles.slice(0, this.max - this.files.length);\n        if (tmpFiles.length !== files.length) {\n          console.warn(`TDesign Upload Warn: you can only upload ${this.max} files`);\n        }\n      }\n      tmpFiles.forEach((fileRaw: File) => {\n        let file: UploadFile | File = fileRaw;\n        if (typeof this.format === 'function') {\n          file = this.format(fileRaw);\n        }\n        const uploadFile: UploadFile = {\n          raw: fileRaw,\n          lastModified: fileRaw.lastModified,\n          name: fileRaw.name,\n          size: fileRaw.size,\n          type: fileRaw.type,\n          percent: 0,\n          status: 'waiting',\n          ...file,\n        };\n        // uploadFile.url = this.getLocalFileURL(fileRaw);\n        const reader = new FileReader();\n        reader.readAsDataURL(fileRaw);\n        reader.onload = (event: ProgressEvent<FileReader>) => {\n          uploadFile.url = event.target.result as string;\n        };\n        this.handleBeforeUpload(file).then((canUpload) => {\n          if (!canUpload) return;\n          const newFiles = this.toUploadFiles.concat();\n          newFiles.push(uploadFile);\n          this.toUploadFiles = [...new Set(newFiles)];\n          this.loadingFile = uploadFile;\n          if (this.autoUpload) {\n            this.upload(uploadFile);\n          }\n        });\n      });\n    },\n\n    async upload(file: UploadFile): Promise<void> {\n      if (!this.action && !this.requestMethod) {\n        console.error('TDesign Upload Error: one of action and requestMethod must be exist.');\n        return;\n      }\n      this.errorMsg = '';\n      file.status = 'progress';\n      this.loadingFile = file;\n      // requestMethod 为父组件定义的自定义上传方法\n      if (this.requestMethod) {\n        this.handleRequestMethod(file);\n      } else {\n        // 模拟进度条\n        if (this.useMockProgress) {\n          this.handleMockProgress(file);\n        }\n        const request = xhr;\n        this.xhrReq = request({\n          action: this.action,\n          data: this.data,\n          file,\n          name: this.name,\n          headers: this.headers,\n          withCredentials: this.withCredentials,\n          onError: this.onError,\n          onProgress: this.handleProgress,\n          onSuccess: this.handleSuccess,\n        });\n      }\n    },\n\n    /** 模拟进度条 Mock Progress */\n    handleMockProgress(file: UploadFile) {\n      const timer = setInterval(() => {\n        if (file.status === 'success' || file.percent >= 99) {\n          clearInterval(timer);\n          return;\n        }\n        file.percent += 1;\n        this.handleProgress({\n          file,\n          percent: file.percent,\n          type: 'mock',\n        });\n      }, 10);\n    },\n\n    handleRequestMethod(file: UploadFile) {\n      if (!isFunction(this.requestMethod)) {\n        console.warn('TDesign Upload Warn: `requestMethod` must be a function.');\n        return;\n      }\n      this.requestMethod(file).then((res: RequestMethodResponse) => {\n        if (!this.handleRequestMethodResponse(res)) return;\n        if (res.status === 'success') {\n          this.handleSuccess({ file, response: res.response });\n        } else if (res.status === 'fail') {\n          const r = res.response || {};\n          this.onError({ event: null, file, response: { ...r, error: res.error } });\n        }\n      });\n    },\n\n    handleRequestMethodResponse(res: RequestMethodResponse) {\n      if (!res) {\n        console.error('TDesign Upoad Error: `requestMethodResponse` is required.');\n        return false;\n      }\n      if (!res.status) {\n        console.error(\n          'TDesign Upoad Error: `requestMethodResponse.status` is missing, which value is `success` or `fail`',\n        );\n        return false;\n      }\n      if (!['success', 'fail'].includes(res.status)) {\n        console.error('TDesign Upoad Error: `requestMethodResponse.status` must be `success` or `fail`');\n        return false;\n      }\n      if (res.status === 'success' && (!res.response || !res.response.url)) {\n        console.warn(\n          'TDesign Upoad Warn: `requestMethodResponse.response.url` is required, when `status` is `success`',\n        );\n      }\n      return true;\n    },\n\n    multipleUpload(files: Array<UploadFile>) {\n      files.forEach((file) => {\n        this.upload(file);\n      });\n    },\n\n    onError(options: { event?: ProgressEvent; file: UploadFile; response?: any; resFormatted?: boolean }) {\n      const { event, file, response, resFormatted } = options;\n      file.status = 'fail';\n      this.loadingFile = file;\n      let res = response;\n      if (!resFormatted && typeof this.formatResponse === 'function') {\n        res = this.formatResponse(response, { file });\n      }\n      this.errorMsg = res?.error;\n      const context = { e: event, file };\n      emitEvent<Parameters<TdUploadProps['onFail']>>(this, 'fail', context);\n    },\n\n    handleProgress({ event, file, percent, type = 'real' }: InnerProgressContext) {\n      if (!file) throw new Error('Error file');\n      file.percent = Math.min(percent, 100);\n      this.loadingFile = file;\n      const progressCtx = {\n        percent,\n        e: event,\n        file,\n        type,\n      };\n      emitEvent<Parameters<TdUploadProps['onProgress']>>(this, 'progress', progressCtx);\n    },\n\n    handleSuccess({ event, file, response }: SuccessContext) {\n      if (!file) throw new Error('Error file');\n      file.status = 'success';\n      let res = response;\n      if (typeof this.formatResponse === 'function') {\n        res = this.formatResponse(response, { file });\n      }\n      // 如果返回值存在 error，则认为当前接口上传失败\n      if (res?.error) {\n        this.onError({\n          event,\n          file,\n          response: res,\n          resFormatted: true,\n        });\n        return;\n      }\n      file.url = res?.url || file.url;\n      // 从待上传文件队列中移除上传成功的文件\n      const index = findIndex(this.toUploadFiles, (o: any) => o.name === file.name);\n      this.toUploadFiles.splice(index, 1);\n      // 上传成功的文件发送到 files\n      const newFile: UploadFile = { ...file, response: res };\n      const files = this.multiple ? this.files.concat(newFile) : [newFile];\n      const context = { e: event, response: res, trigger: 'upload-success' };\n      this.emitChangeEvent(files, context);\n      const sContext = {\n        file,\n        fileList: files,\n        e: event,\n        response: res,\n      };\n      emitEvent<Parameters<TdUploadProps['onSuccess']>>(this, 'success', sContext);\n      this.loadingFile = null;\n    },\n\n    handlePreview({ file, event }: { file?: UploadFile; event: ProgressEvent }) {\n      return { file, event };\n    },\n\n    triggerUpload() {\n      if (this.disabled) return;\n      (this.$refs.input as HTMLInputElement).click();\n    },\n\n    handleDragenter(e: DragEvent) {\n      if (this.disabled) return;\n      this.dragActive = true;\n      emitEvent<Parameters<TdUploadProps['onDragenter']>>(this, 'dragenter', { e });\n    },\n\n    handleDragleave(e: DragEvent) {\n      if (this.disabled) return;\n      this.dragActive = false;\n      emitEvent<Parameters<TdUploadProps['onDragleave']>>(this, 'dragleave', { e });\n    },\n\n    handleBeforeUpload(file: File | UploadFile): Promise<boolean> {\n      if (typeof this.beforeUpload === 'function') {\n        const r = this.beforeUpload(file);\n        if (r instanceof Promise) return r;\n        // eslint-disable-next-line no-promise-executor-return\n        return new Promise((resolve) => resolve(r));\n      }\n      return new Promise((resolve) => {\n        if (this.sizeLimit) {\n          resolve(this.handleSizeLimit(file.size));\n        }\n        resolve(true);\n      });\n    },\n\n    handleSizeLimit(fileSize: number) {\n      const sizeLimit: SizeLimitObj =\n        typeof this.sizeLimit === 'number' ? { size: this.sizeLimit, unit: 'KB' } : this.sizeLimit;\n\n      const rSize = isOverSizeLimit(fileSize, sizeLimit.size, sizeLimit.unit);\n      if (!rSize) {\n        // 有参数 message 则使用，没有就使用全局 locale 配置\n        this.errorMsg = sizeLimit.message\n          ? this.t(sizeLimit.message, { sizeLimit: sizeLimit.size })\n          : `${this.t(this.global.sizeLimitMessage, { sizeLimit: sizeLimit.size })} ${sizeLimit.unit}`;\n      }\n      return rSize;\n    },\n\n    cancelUpload() {\n      if (this.loadingFile) {\n        // 如果存在自定义上传方法，则只需要抛出事件，而后由父组件处理取消上传\n        if (this.requestMethod) {\n          emitEvent<Parameters<TdUploadProps['onCancelUpload']>>(this, 'cancel-upload');\n        } else {\n          this.xhrReq && this.xhrReq.abort();\n        }\n        this.loadingFile = null;\n      }\n      (this.$refs.input as HTMLInputElement).value = '';\n    },\n\n    // close image view dialog\n    cancelPreviewImgDialog() {\n      this.showImageViewDialog = false;\n      // Dialog 动画结束后，再清理图片\n      let timer = setTimeout(() => {\n        this.showImageViewUrl = '';\n        clearTimeout(timer);\n        timer = null;\n      }, 500);\n    },\n\n    getDefaultTrigger() {\n      if (this.theme === 'file-input' || this.showUploadList) {\n        return <t-button variant=\"outline\">选择文件</t-button>;\n      }\n      const iconSlot = { icon: () => <UploadIcon slot=\"icon\" /> };\n      return (\n        <TButton variant=\"outline\" v-slots={iconSlot}>\n          {this.files?.length ? '重新上传' : '点击上传'}\n        </TButton>\n      );\n    },\n\n    renderInput() {\n      return (\n        <input\n          ref=\"input\"\n          type=\"file\"\n          disabled={this.disabled}\n          onChange={this.handleChange}\n          multiple={this.multiple}\n          accept={this.accept}\n          hidden\n        />\n      );\n    },\n    // 渲染单文件预览：设计稿有两种单文件预览方式，文本型和输入框型。输入框型的需要在右侧显示「删除」按钮\n    renderSingleDisplay(triggerElement: SlotReturnValue) {\n      return (\n        <single-file\n          file={this.files && this.files[0]}\n          loadingFile={this.loadingFile}\n          display={this.theme}\n          remove={this.handleSingleRemove}\n          showUploadProgress={this.showUploadProgress}\n          placeholder={this.placeholder}\n        >\n          <div class=\"t-upload__trigger\" onclick={this.triggerUpload}>\n            {triggerElement}\n            {!!(this.theme === 'file-input' && this.files?.length) && (\n              <TButton theme=\"primary\" variant=\"text\" onClick={this.handleFileInputRemove}>\n                删除\n              </TButton>\n            )}\n          </div>\n        </single-file>\n      );\n    },\n    renderDraggerTrigger() {\n      const params = {\n        dragActive: this.dragActive,\n        uploadingFile: this.multiple ? this.toUploadFiles : this.loadingFile,\n      };\n      let triggerElement = renderContent(this, 'default', 'trigger', { params });\n      if (!Array.isArray(triggerElement)) {\n        triggerElement = {};\n      }\n      return (\n        <dragger\n          showUploadProgress={this.showUploadProgress}\n          onChange={this.handleDragChange}\n          onDragenter={this.handleDragenter}\n          onDragleave={this.handleDragleave}\n          loadingFile={this.loadingFile}\n          file={this.files && this.files[0]}\n          display={this.theme}\n          cancel={this.cancelUpload}\n          trigger={this.triggerUpload}\n          remove={this.handleSingleRemove}\n          upload={this.upload}\n          autoUpload={this.autoUpload}\n        >\n          {triggerElement}\n        </dragger>\n      );\n    },\n    renderTrigger() {\n      const defaultNode = this.getDefaultTrigger();\n      return renderContent(this, 'default', 'trigger', defaultNode);\n    },\n    renderCustom(triggerElement: VNode) {\n      return this.draggable ? (\n        this.renderDraggerTrigger()\n      ) : (\n        <div class={`${name}__trigger`} onclick={this.triggerUpload}>\n          {triggerElement}\n        </div>\n      );\n    },\n  },\n\n  render(): VNode {\n    const triggerElement = this.renderTrigger();\n    return (\n      <div class={`${name}`}>\n        {this.renderInput()}\n        {this.showCustomDisplay && this.renderCustom(triggerElement)}\n        {this.showSingleDisplay && this.renderSingleDisplay(triggerElement)}\n        {this.singleDraggable && this.renderDraggerTrigger()}\n        {this.showImgCard && (\n          <ImageCard\n            files={this.files}\n            multiple={this.multiple}\n            remove={this.handleMultipleRemove}\n            trigger={this.triggerUpload}\n            loadingFile={this.loadingFile}\n            toUploadFiles={this.toUploadFiles}\n            max={this.max}\n            onImgPreview={this.handlePreviewImg}\n            disabled={this.disabled}\n          ></ImageCard>\n        )}\n        {this.showUploadList && (\n          <flow-list\n            files={this.files}\n            placeholder={this.placeholder}\n            autoUpload={this.autoUpload}\n            toUploadFiles={this.toUploadFiles}\n            remove={this.handleListRemove}\n            upload={this.multipleUpload}\n            cancel={this.cancelUpload}\n            display={this.theme}\n            onImgPreview={this.handlePreviewImg}\n            onChange={this.handleDragChange}\n            onDragenter={this.handleDragenter}\n            showUploadProgress={this.showUploadProgress}\n            onDragleave={this.handleDragleave}\n          >\n            <div class={`${name}__trigger`} onclick={this.triggerUpload}>\n              {triggerElement}\n            </div>\n          </flow-list>\n        )}\n        {this.showImgDialog && (\n          <TDialog\n            visible={this.showImageViewDialog}\n            showOverlay\n            width=\"auto\"\n            top=\"10%\"\n            class={`${name}__dialog`}\n            footer={false}\n            header={false}\n            onClose={this.cancelPreviewImgDialog}\n          >\n            <div class={`${prefix}__dialog-body-img-box`}>\n              <img src={this.showImageViewUrl} alt=\"\" />\n            </div>\n          </TDialog>\n        )}\n        {!this.errorMsg && this.showTips && <small class={this.tipsClasses}>{this.tips}</small>}\n        {this.showErrorMsg && <small class={this.errorClasses}>{this.errorMsg}</small>}\n      </div>\n    );\n  },\n});\n"],"names":["name","prefix","SIZE_MAP","B","KB","MB","GB","isOverSizeLimit","fileSize","sizeLimit","unit","units","KB_INDEX","index","indexOf","console","warn","join","num","limit","defineComponent","mixins","getConfigReceiverMixins","components","TButton","Dragger","SingleFile","ImageCard","FlowList","TDialog","props","data","dragActive","loadingFile","toUploadFiles","errorMsg","showImageViewDialog","showImageViewUrl","xhrReq","computed","showTips","theme","hasNoFile","files","length","tips","Boolean","showCustomDisplay","showSingleDisplay","draggable","includes","showImgCard","singleDraggable","multiple","showUploadList","showImgDialog","showErrorMsg","tipsClasses","errorClasses","concat","methods","emitChangeEvent","ctx","emitEvent","emitRemoveEvent","handlePreviewImg","event","file","url","Error","previewCtx","e","handleChange","target","disabled","uploadFiles","$refs","input","value","handleDragChange","handleSingleRemove","changeCtx","trigger","handleFileInputRemove","stopPropagation","handleMultipleRemove","options","splice","handleListRemove","context","findIndex","o","index2","tmpFiles","max","slice","forEach","fileRaw","format","uploadFile","raw","lastModified","size","type","percent","status","reader","FileReader","readAsDataURL","onload","result","handleBeforeUpload","then","canUpload","newFiles","push","Set","autoUpload","upload","action","requestMethod","error","handleRequestMethod","useMockProgress","handleMockProgress","request","xhr","headers","withCredentials","onError","onProgress","handleProgress","onSuccess","handleSuccess","timer","setInterval","clearInterval","isFunction","res","handleRequestMethodResponse","response","r","multipleUpload","resFormatted","formatResponse","Math","min","progressCtx","newFile","sContext","fileList","handlePreview","triggerUpload","click","handleDragenter","handleDragleave","beforeUpload","Promise","resolve","handleSizeLimit","rSize","message","t","global","sizeLimitMessage","cancelUpload","abort","cancelPreviewImgDialog","setTimeout","clearTimeout","getDefaultTrigger","iconSlot","icon","renderInput","accept","renderSingleDisplay","triggerElement","showUploadProgress","placeholder","renderDraggerTrigger","params","uploadingFile","renderContent","Array","isArray","renderTrigger","defaultNode","renderCustom","render"],"mappings":"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"}