{"version":3,"file":"event.js","sources":["../../src/utils/event.ts"],"sourcesContent":["import { ComponentPublicInstance } from 'vue';\nimport { getPropsApiByEvent } from './helper';\n\nexport type EmitEventName = { event: string; method: string } | string;\n\n/**\n * 组件对外传递事件\n * @param vm 组件实例\n * @param eventName 事件名(注意使用中划线)\n * @param args 事件参数\n * @example emitEvent<[SearchEvent]>(this, 'search', {query: ''});\n * @example emitEvent<[TransferValue[], TargetParams]>(this, 'change', newTargetValue, params);\n * @example emitEvent<[SearchEvent[], TargetParams]>(this, { event: 'search', method: 'onChange' }, {query: ''});\n */\nexport function emitEvent<T extends any[]>(vm: ComponentPublicInstance, eventName: string, ...args: T) {\n  let emitEventMethodName: string;\n  if (typeof eventName === 'string') {\n    emitEventMethodName = getPropsApiByEvent(eventName);\n  }\n\n  if (typeof vm.$props[emitEventMethodName] === 'function') {\n    vm.$props[emitEventMethodName](...args);\n  } else {\n    vm.$emit(eventName, ...args);\n  }\n}\n"],"names":["emitEvent","vm","eventName","emitEventMethodName","getPropsApiByEvent","args","$props","$emit"],"mappings":";;;;;;;;;;;;;;;;AACO,SAASA,SAAT,CAAmBC,EAAnB,EAAuBC,SAAvB,EAA2C;AAChD,MAAIC,mBAAJ;;AACA,MAAI,OAAOD,SAAP,KAAqB,QAAzB,EAAmC;AACjCC,IAAAA,mBAAmB,GAAGC,+BAAkB,CAACF,SAAD,CAAxC;AACD;;AAJ+C,oCAANG,IAAM;AAANA,IAAAA,IAAM;AAAA;;AAKhD,MAAI,OAAOJ,EAAE,CAACK,MAAH,CAAUH,mBAAV,CAAP,KAA0C,UAA9C,EAA0D;AAAA;;AACxD,kBAAAF,EAAE,CAACK,MAAH,EAAUH,mBAAV,oBAAkCE,IAAlC;AACD,GAFD,MAEO;AACLJ,IAAAA,EAAE,CAACM,KAAH,OAAAN,EAAE,GAAOC,SAAP,SAAqBG,IAArB,EAAF;AACD;AACF;;;;"}