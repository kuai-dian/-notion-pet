/**
 * tdesign v0.8.0
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _typeof = require('@babel/runtime/helpers/typeof');
var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var vue = require('vue');
var tdesignIconsVueNext = require('tdesign-icons-vue-next');
var isFunction = require('lodash/isFunction');
var config = require('../config.js');
var notification_props = require('./props.js');
var utils_event = require('../utils/event.js');
require('../utils/helper.js');
require('@babel/runtime/helpers/objectWithoutProperties');
require('@babel/runtime/helpers/slicedToArray');
require('lodash/camelCase');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _typeof__default = /*#__PURE__*/_interopDefaultLegacy(_typeof);
var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);
var isFunction__default = /*#__PURE__*/_interopDefaultLegacy(isFunction);

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty__default["default"](target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var name = "".concat(config.prefix, "-notification");
var _Notification = vue.defineComponent({
  name: "TNotification",
  components: {
    InfoCircleFilledIcon: tdesignIconsVueNext.InfoCircleFilledIcon,
    CheckCircleFilledIcon: tdesignIconsVueNext.CheckCircleFilledIcon,
    CloseIcon: tdesignIconsVueNext.CloseIcon
  },
  props: _objectSpread({}, notification_props["default"]),
  emits: ["duration-end", "click-close-btn"],
  mounted: function mounted() {
    var _this = this;

    if (this.duration > 0) {
      var timer = setTimeout(function () {
        clearTimeout(timer);
        utils_event.emitEvent(_this, "duration-end", _this);
      }, this.duration);
    }
  },
  methods: {
    close: function close(e) {
      utils_event.emitEvent(this, "click-close-btn", e, this);
    },
    renderIcon: function renderIcon() {
      var icon;
      if (this.icon === false) return null;

      if (isFunction__default["default"](this.icon)) {
        icon = this.icon(vue.h);
      } else if (this.$slots.icon) {
        icon = this.$slots.icon(null);
      } else if (this.theme) {
        var iconType = this.theme === "success" ? vue.createVNode(vue.resolveComponent("check-circle-filled-icon"), {
          "class": "t-is-".concat(this.theme)
        }, null) : vue.createVNode(vue.resolveComponent("info-circle-filled-icon"), {
          "class": "t-is-".concat(this.theme)
        }, null);
        icon = vue.createVNode("div", {
          "class": "t-notification__icon"
        }, [iconType]);
      }

      return icon;
    },
    renderClose: function renderClose() {
      var closeBtn = this.closeBtn;

      if (typeof closeBtn === "boolean") {
        return closeBtn && vue.createVNode(vue.resolveComponent("close-icon"), {
          "onClick": this.close,
          "class": "t-message-close"
        }, null);
      }

      var close = null;

      if (typeof closeBtn === "function") {
        close = closeBtn(vue.h);
      } else if (typeof closeBtn === "string") {
        close = closeBtn;
      } else if (typeof this.$slots.closeBtn === "function") {
        close = this.$slots.closeBtn(null);
      }

      if (close) {
        return vue.createVNode("div", {
          "class": "t-icon-close",
          "onClick": this.close
        }, [" ", close, " "]);
      }
    },
    renderContent: function renderContent() {
      var content;

      switch (_typeof__default["default"](this.content)) {
        case "function":
          {
            content = vue.createVNode("div", {
              "class": "".concat(name, "__content")
            }, [this.content(vue.h)]);
            break;
          }

        case "string":
          {
            content = this.content ? vue.createVNode("div", {
              "class": "".concat(name, "__content")
            }, [this.content]) : "";
            break;
          }
      }

      content = this.$slots["default"] ? vue.createVNode("div", {
        "class": "".concat(name, "__content")
      }, [this.$slots["default"](null)]) : content;
      return content;
    },
    renderFooter: function renderFooter() {
      var footer;

      if (typeof this.footer === "function") {
        footer = this.footer(vue.h);
      }

      footer = this.$slots.footer ? this.$slots.footer(null) : footer;
      return footer;
    }
  },
  render: function render() {
    var icon = this.renderIcon();
    var close = this.renderClose();
    var content = this.renderContent();
    var footer = this.renderFooter();
    return vue.createVNode("div", {
      "class": "".concat(name)
    }, [icon, vue.createVNode("div", {
      "class": "".concat(name, "__main")
    }, [vue.createVNode("div", {
      "class": "".concat(name, "__title__wrap")
    }, [vue.createVNode("span", {
      "class": "".concat(name, "__title")
    }, [this.title]), close]), content, footer])]);
  }
});

exports["default"] = _Notification;
//# sourceMappingURL=notification.js.map
