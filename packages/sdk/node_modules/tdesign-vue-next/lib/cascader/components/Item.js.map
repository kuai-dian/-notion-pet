{"version":3,"file":"Item.js","sources":["../../../src/cascader/components/Item.tsx"],"sourcesContent":["import { defineComponent, PropType } from 'vue';\nimport { ChevronRightIcon } from 'tdesign-icons-vue-next';\nimport { prefix } from '../../config';\n\n// utils\nimport CLASSNAMES from '../../utils/classnames';\nimport ripple from '../../utils/ripple';\n\n// common logic\nimport { getFullPathLabel } from '../utils/helper';\nimport { getCascaderItemClass, getCascaderItemIconClass, getLabelIsEllipsis } from '../utils/item';\n\n// component\nimport Checkbox, { CheckboxProps } from '../../checkbox/index';\nimport Tooltip from '../../tooltip/index';\nimport TLoading from '../../loading';\n\n// type\nimport { ClassName } from '../../common';\nimport { ContextType, CascaderContextType, CascaderItemPropsType, TreeNodeValue, TreeNode } from '../interface';\n\nconst name = `${prefix}-cascader-item`;\nconst ComponentClassName = `${prefix}-cascader__item`;\n\nexport default defineComponent({\n  name,\n\n  directives: { ripple },\n\n  props: {\n    node: {\n      type: Object as PropType<CascaderItemPropsType['node']>,\n      default() {\n        return {};\n      },\n    },\n    cascaderContext: {\n      type: Object as PropType<CascaderItemPropsType['cascaderContext']>,\n    },\n  },\n\n  emits: ['change', 'click', 'mouseenter'],\n\n  computed: {\n    itemClass(): ClassName {\n      return getCascaderItemClass(prefix, this.node, CLASSNAMES, this.cascaderContext);\n    },\n    iconClass(): ClassName {\n      return getCascaderItemIconClass(prefix, this.node, CLASSNAMES, this.cascaderContext);\n    },\n  },\n  render() {\n    const { node, itemClass, iconClass, cascaderContext } = this;\n\n    const handleClick = (e: Event) => {\n      e.stopPropagation();\n      const ctx: ContextType = {\n        e,\n        node,\n      };\n      this.$emit('click', ctx);\n    };\n\n    const handleChange: CheckboxProps['onChange'] = (e) => {\n      const ctx = {\n        e,\n        node,\n      };\n      this.$emit('change', ctx);\n    };\n\n    const handleMouseenter = (e: Event) => {\n      e.stopPropagation();\n      const ctx: ContextType = {\n        e,\n        node,\n      };\n      this.$emit('mouseenter', ctx);\n    };\n\n    function RenderLabelInner(node: TreeNode, cascaderContext: CascaderContextType) {\n      const { filterActive, inputVal } = cascaderContext;\n      const labelText = filterActive ? getFullPathLabel(node) : node.label;\n      if (filterActive) {\n        const texts = labelText.split(inputVal);\n        const doms = [];\n        for (let index = 0; index < texts.length; index++) {\n          doms.push(<span key={index}>{texts[index]}</span>);\n          if (index === texts.length - 1) break;\n          doms.push(\n            <span key={`${index}filter`} className={`${name}-label--filter`}>\n              {inputVal}\n            </span>,\n          );\n        }\n        return doms;\n      }\n      return labelText;\n    }\n\n    function RenderLabelContent(node: TreeNode, cascaderContext: CascaderContextType) {\n      const label = RenderLabelInner(node, cascaderContext);\n      const isEllipsis = getLabelIsEllipsis(node, cascaderContext.size);\n      if (isEllipsis) {\n        return (\n          <span class={`${ComponentClassName}-label`} role=\"label\">\n            {label}\n            <div class={`${ComponentClassName}-label--ellipsis`}>\n              <Tooltip content={node.label} placement=\"top-left\" />\n            </div>\n          </span>\n        );\n      }\n      return (\n        <span class={[`${ComponentClassName}-label`]} role=\"label\">\n          {label}\n        </span>\n      );\n    }\n\n    function RenderCheckBox(\n      node: TreeNode,\n      cascaderContext: CascaderContextType,\n      handleChange: CheckboxProps['onChange'],\n    ) {\n      const { checkProps, value, max, size } = cascaderContext;\n      const label = RenderLabelInner(node, cascaderContext);\n      return (\n        <Checkbox\n          checked={node.checked}\n          indeterminate={node.indeterminate}\n          disabled={node.isDisabled() || ((value as TreeNodeValue[]).length >= max && max !== 0)}\n          name={node.value}\n          size={size}\n          onChange={handleChange}\n          {...checkProps}\n        >\n          {label}\n        </Checkbox>\n      );\n    }\n\n    return (\n      <li v-ripple class={itemClass} onClick={handleClick} onMouseenter={handleMouseenter}>\n        {cascaderContext.multiple\n          ? RenderCheckBox(node, cascaderContext, handleChange)\n          : RenderLabelContent(node, cascaderContext)}\n        {node.children &&\n          (node.loading ? <TLoading class={iconClass} size=\"small\" /> : <ChevronRightIcon class={iconClass} />)}\n      </li>\n    );\n  },\n});\n"],"names":["name","prefix","ComponentClassName","defineComponent","directives","ripple","props","node","type","Object","cascaderContext","emits","computed","itemClass","getCascaderItemClass","CLASSNAMES","iconClass","getCascaderItemIconClass","render","handleClick","e","stopPropagation","ctx","$emit","handleChange","handleMouseenter","RenderLabelInner","node2","cascaderContext2","filterActive","inputVal","labelText","getFullPathLabel","label","texts","split","doms","index","length","push","RenderLabelContent","isEllipsis","getLabelIsEllipsis","size","RenderCheckBox","handleChange2","checkProps","value","max","checked","indeterminate","isDisabled","multiple","children","loading"],"mappings":"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"}