/**
 * tdesign v0.8.0
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var vue = require('vue');
var datePicker_basic_header = require('../basic/header.js');
var datePicker_basic_table = require('../basic/table.js');
var config = require('../../config.js');
var datePicker_props = require('../props.js');
var _common_js_datePicker_utils = require('../../_common/js/date-picker/utils.js');
require('@babel/runtime/helpers/defineProperty');
require('tdesign-icons-vue-next');
require('../../button/button.js');
require('@babel/runtime/helpers/toConsumableArray');
require('../../utils/classnames.js');
require('../../loading/index.js');
require('../../loading/loading.js');
require('@babel/runtime/helpers/slicedToArray');
require('../../loading/icon/gradient.js');
require('../../_common/js/loading/circle-adapter.js');
require('../../_common/js/utils/set-style.js');
require('../../_common/js/utils/helper.js');
require('@babel/runtime/helpers/objectWithoutProperties');
require('../../utils/dom.js');
require('../../_chunks/dep-eb6b0f94.js');
require('lodash/isString');
require('../../utils/easing.js');
require('../../utils/render-tnode.js');
require('lodash/isEmpty');
require('lodash/isFunction');
require('lodash/isObject');
require('../../utils/transfer-dom.js');
require('../../loading/props.js');
require('../../utils/withInstall.js');
require('../../loading/style');
require('../../loading/plugin.js');
require('../../button/props.js');
require('../../utils/ripple.js');
require('../../utils/set-style.js');
require('../../utils/mixins.js');
require('../../config-provider/config-receiver.js');
require('../../config-provider/zh_CN_config.js');
require('../basic/cell.js');
require('@babel/runtime/helpers/extends');
require('lodash/chunk');

var name = "".concat(config.prefix, "-date-picker-panel");
var TDate = vue.defineComponent({
  name: name,
  components: {
    TDateHeader: datePicker_basic_header["default"],
    TDateTable: datePicker_basic_table["default"]
  },
  inheritAttrs: false,
  props: {
    global: {
      type: Object,
      "default": function _default() {
        return {};
      }
    },
    value: {
      type: Date,
      "default": function _default() {
        return _common_js_datePicker_utils.getToday();
      }
    },
    mode: datePicker_props["default"].mode,
    minDate: Date,
    maxDate: Date,
    firstDayOfWeek: datePicker_props["default"].firstDayOfWeek,
    disableDate: datePicker_props["default"].disableDate,
    onChange: datePicker_props["default"].onChange
  },
  emits: ["change"],
  data: function data() {
    return {
      year: this.value.getFullYear(),
      month: this.value.getMonth(),
      type: this.mode
    };
  },
  computed: {
    tableData: function tableData() {
      var year = this.year,
          month = this.month,
          type = this.type,
          value = this.value,
          mode = this.mode,
          disableDate = this.disableDate,
          minDate = this.minDate,
          maxDate = this.maxDate,
          firstDayOfWeek = this.firstDayOfWeek,
          global = this.global;
      var data;
      var options = {
        disableDate: disableDate,
        minDate: minDate,
        maxDate: maxDate,
        firstDayOfWeek: firstDayOfWeek,
        monthLocal: global.months
      };

      switch (type) {
        case "date":
          data = _common_js_datePicker_utils.getWeeks({
            year: year,
            month: month
          }, options);
          break;

        case "month":
          data = _common_js_datePicker_utils.getMonths(year, options);
          break;

        case "year":
          data = _common_js_datePicker_utils.getYears(year, options);
          break;
      }

      var start = type === "date" || type === mode ? value : new Date(year, month);
      return _common_js_datePicker_utils.flagActive(data, {
        start: start,
        type: type
      });
    }
  },
  watch: {
    mode: function mode(value) {
      this.type = value;
    },
    value: function value(_value) {
      this.year = _value.getFullYear();
      this.month = _value.getMonth();
    }
  },
  methods: {
    getClickHandler: function getClickHandler() {
      return this["click".concat(_common_js_datePicker_utils.firstUpperCase(this.type))];
    },
    clickDate: function clickDate(date) {
      this.$emit("change", date);
    },
    clickMonth: function clickMonth(date) {
      if (this.mode === "month") {
        this.$emit("change", date);
      } else {
        this.type = "date";
        this.year = date.getFullYear();
        this.month = date.getMonth();
      }
    },
    clickYear: function clickYear(date) {
      if (this.mode === "year") {
        this.$emit("change", date);
      } else {
        this.type = "month";
        this.year = date.getFullYear();
      }
    },
    clickHeader: function clickHeader(flag) {
      var monthCount = 0;
      var next = null;

      switch (this.type) {
        case "date":
          monthCount = 1;
          break;

        case "month":
          monthCount = 12;
          break;

        case "year":
          monthCount = 120;
      }

      var current = new Date(this.year, this.month);

      switch (flag) {
        case 1:
          next = _common_js_datePicker_utils.addMonth(current, monthCount);
          break;

        case -1:
          next = _common_js_datePicker_utils.subtractMonth(current, monthCount);
          break;

        case 0:
          next = new Date();
          break;
      }

      this.year = next.getFullYear();
      this.month = next.getMonth();
    },
    onTypeChange: function onTypeChange(type) {
      this.type = type;
    }
  },
  render: function render() {
    var year = this.year,
        month = this.month,
        type = this.type,
        tableData = this.tableData,
        firstDayOfWeek = this.firstDayOfWeek;
    return vue.createVNode("div", {
      "class": "".concat(config.prefix, "-date-picker__panel")
    }, [vue.createVNode(vue.resolveComponent("t-date-header"), {
      "year": year,
      "month": month,
      "type": type,
      "onBtnClick": this.clickHeader,
      "onTypeChange": this.onTypeChange
    }, null), vue.createVNode(vue.resolveComponent("t-date-table"), {
      "type": type,
      "firstDayOfWeek": firstDayOfWeek,
      "data": tableData,
      "onCellClick": this.getClickHandler()
    }, null)]);
  }
});

exports["default"] = TDate;
//# sourceMappingURL=date.js.map
