/**
 * tdesign v0.8.0
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var vue = require('vue');
var config = require('../config.js');
var button_index = require('../button/index.js');
require('../button/button.js');
require('@babel/runtime/helpers/toConsumableArray');
require('@babel/runtime/helpers/defineProperty');
require('../utils/classnames.js');
require('../loading/index.js');
require('../loading/loading.js');
require('@babel/runtime/helpers/slicedToArray');
require('../loading/icon/gradient.js');
require('../_common/js/loading/circle-adapter.js');
require('../_common/js/utils/set-style.js');
require('../_common/js/utils/helper.js');
require('@babel/runtime/helpers/objectWithoutProperties');
require('../utils/dom.js');
require('../_chunks/dep-eb6b0f94.js');
require('lodash/isString');
require('../utils/easing.js');
require('../utils/render-tnode.js');
require('lodash/isEmpty');
require('lodash/isFunction');
require('lodash/isObject');
require('../utils/transfer-dom.js');
require('../loading/props.js');
require('../utils/withInstall.js');
require('../loading/style');
require('../loading/plugin.js');
require('../button/props.js');
require('../utils/ripple.js');
require('../utils/set-style.js');
require('../button/style');

var TCalendarPresets = vue.defineComponent({
  name: "TCalendarPresets",
  components: {
    TButton: button_index.Button
  },
  props: {
    global: {
      type: Object
    },
    presets: {
      type: Object
    },
    onClick: Function
  },
  methods: {
    clickPreset: function clickPreset(value) {
      this.onClick(value);
    }
  },
  render: function render() {
    var _this = this;

    var presets = this.presets;
    return vue.createVNode("div", {
      "class": "".concat(config.prefix, "-date-picker__presets")
    }, [vue.createVNode("ul", null, [presets && Object.keys(presets).map(function (key) {
      return vue.createVNode("li", {
        "key": key
      }, [vue.createVNode("a", {
        "onClick": function onClick() {
          return _this.clickPreset(presets[key]);
        }
      }, [key])]);
    })])]);
  }
});

exports["default"] = TCalendarPresets;
//# sourceMappingURL=calendar-presets.js.map
