/**
 * tdesign v0.8.0
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var vue = require('vue');
var tdesignIconsVueNext = require('tdesign-icons-vue-next');
var button_button = require('../../button/button.js');
var utils_mixins = require('../../utils/mixins.js');
var configProvider_configReceiver = require('../../config-provider/config-receiver.js');
var config = require('../../config.js');
require('@babel/runtime/helpers/toConsumableArray');
require('../../utils/classnames.js');
require('../../loading/index.js');
require('../../loading/loading.js');
require('@babel/runtime/helpers/slicedToArray');
require('../../loading/icon/gradient.js');
require('../../_common/js/loading/circle-adapter.js');
require('../../_common/js/utils/set-style.js');
require('../../_common/js/utils/helper.js');
require('@babel/runtime/helpers/objectWithoutProperties');
require('../../utils/dom.js');
require('../../_chunks/dep-eb6b0f94.js');
require('lodash/isString');
require('../../utils/easing.js');
require('../../utils/render-tnode.js');
require('lodash/isEmpty');
require('lodash/isFunction');
require('lodash/isObject');
require('../../utils/transfer-dom.js');
require('../../loading/props.js');
require('../../utils/withInstall.js');
require('../../loading/style');
require('../../loading/plugin.js');
require('../../button/props.js');
require('../../utils/ripple.js');
require('../../utils/set-style.js');
require('../../config-provider/zh_CN_config.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty__default["default"](target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var name = "".concat(config.prefix, "-date-picker__header");
var TDateHeader = vue.defineComponent(_objectSpread(_objectSpread({
  name: name
}, utils_mixins["default"](configProvider_configReceiver["default"]("datePicker"))), {}, {
  components: {
    TButton: button_button["default"],
    RoundIcon: tdesignIconsVueNext.RoundIcon,
    ChevronLeftIcon: tdesignIconsVueNext.ChevronLeftIcon,
    ChevronRightIcon: tdesignIconsVueNext.ChevronRightIcon
  },
  props: {
    year: Number,
    month: Number,
    type: {
      type: String,
      "default": "date",
      validator: function validator(v) {
        return ["year", "month", "date"].indexOf(v) > -1;
      }
    },
    onBtnClick: Function,
    onTypeChange: Function
  },
  render: function render() {
    var _this = this;

    var _this$$props = this.$props,
        type = _this$$props.type,
        year = _this$$props.year,
        month = _this$$props.month,
        onBtnClick = _this$$props.onBtnClick,
        onTypeChange = _this$$props.onTypeChange;
    var startYear = parseInt((this.year / 10).toString(), 10) * 10;
    var _this$global = this.global,
        rangeSeparator = _this$global.rangeSeparator,
        yearAriaLabel = _this$global.yearAriaLabel,
        now = _this$global.now,
        preMonth = _this$global.preMonth,
        preYear = _this$global.preYear,
        nextMonth = _this$global.nextMonth,
        nextYear = _this$global.nextYear,
        preDecade = _this$global.preDecade,
        nextDecade = _this$global.nextDecade;
    var preLabel;
    var nextLabel;

    if (type === "year") {
      preLabel = preDecade;
      nextLabel = nextDecade;
    } else if (type === "date") {
      preLabel = preMonth;
      nextLabel = nextMonth;
    } else {
      preLabel = preYear;
      nextLabel = nextYear;
    }

    return vue.createVNode("div", {
      "class": "".concat(config.prefix, "-date-picker__header")
    }, [vue.createVNode("span", {
      "class": "".concat(config.prefix, "-date-picker__header-title")
    }, [type === "year" && vue.createVNode("span", null, [vue.createVNode("span", null, [startYear]), rangeSeparator, vue.createVNode("span", null, [startYear + 9])]), type !== "year" && vue.createVNode(vue.resolveComponent("t-button"), {
      "class": "".concat(config.prefix, "-date-picker__header-btn"),
      "variant": "text",
      "size": "small",
      "onClick": function onClick() {
        return onTypeChange("year");
      }
    }, {
      "default": function _default() {
        return ["".concat(year, " ").concat(yearAriaLabel)];
      }
    }), type === "date" && vue.createVNode(vue.resolveComponent("t-button"), {
      "class": "".concat(config.prefix, "-date-picker__header-btn"),
      "variant": "text",
      "size": "small",
      "onClick": function onClick() {
        return onTypeChange("month");
      }
    }, {
      "default": function _default() {
        return [_this.global.months[month]];
      }
    })]), vue.createVNode("span", {
      "class": "".concat(config.prefix, "-date-picker__header-controller")
    }, [vue.createVNode(vue.resolveComponent("t-button"), {
      "class": "".concat(config.prefix, "-date-picker__header-controller__btn"),
      "variant": "text",
      "onClick": function onClick() {
        return onBtnClick(-1);
      },
      "title": preLabel
    }, {
      icon: function icon() {
        return vue.createVNode(vue.resolveComponent("chevron-left-icon"), null, null);
      }
    }), vue.createVNode(vue.resolveComponent("t-button"), {
      "class": ["".concat(config.prefix, "-date-picker__header-controller__btn"), "".concat(config.prefix, "-date-picker__header-controller__btn--now")],
      "variant": "text",
      "onClick": function onClick() {
        return onBtnClick(0);
      },
      "title": now
    }, {
      icon: function icon() {
        return vue.createVNode(vue.resolveComponent("round-icon"), null, null);
      }
    }), vue.createVNode(vue.resolveComponent("t-button"), {
      "class": "".concat(config.prefix, "-date-picker__header-controller__btn"),
      "variant": "text",
      "onClick": function onClick() {
        return onBtnClick(1);
      },
      "title": nextLabel
    }, {
      icon: function icon() {
        return vue.createVNode(vue.resolveComponent("chevron-right-icon"), null, null);
      }
    })])]);
  }
}));

exports["default"] = TDateHeader;
//# sourceMappingURL=header.js.map
