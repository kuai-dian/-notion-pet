import { ScrollContainerElement } from '../common';
declare const _default: import("vue").DefineComponent<{
    container: {
        type: import("vue").PropType<import("../common").ScrollContainer>;
        default: () => () => Window & typeof globalThis;
    };
    offsetBottom: {
        type: NumberConstructor;
        default: number;
    };
    offsetTop: {
        type: NumberConstructor;
        default: number;
    };
    zIndex: {
        type: NumberConstructor;
    };
    onFixedChange: import("vue").PropType<(affixed: boolean, context: {
        top: number;
    }) => void>;
}, {
    fixedTop: import("vue").Ref<number | false>;
    oldWidthHeight: import("vue").Ref<{
        width: string;
        height: string;
    }>;
    scrollContainer: import("vue").Ref<ScrollContainerElement>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "fixedChange"[], "fixedChange", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    container: {
        type: import("vue").PropType<import("../common").ScrollContainer>;
        default: () => () => Window & typeof globalThis;
    };
    offsetBottom: {
        type: NumberConstructor;
        default: number;
    };
    offsetTop: {
        type: NumberConstructor;
        default: number;
    };
    zIndex: {
        type: NumberConstructor;
    };
    onFixedChange: import("vue").PropType<(affixed: boolean, context: {
        top: number;
    }) => void>;
}>> & {
    onFixedChange?: (...args: any[]) => any;
}, {
    offsetTop: number;
    container: import("../common").ScrollContainer;
    offsetBottom: number;
}>;
export default _default;
