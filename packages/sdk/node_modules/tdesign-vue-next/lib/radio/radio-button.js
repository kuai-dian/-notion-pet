/**
 * tdesign v0.8.0
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var vue = require('vue');
var radio_props = require('./props.js');
var radio_radio = require('./radio.js');
var utils_helper = require('../utils/helper.js');
require('@babel/runtime/helpers/toConsumableArray');
require('../config.js');
require('../utils/classnames.js');
require('../utils/event.js');
require('@babel/runtime/helpers/objectWithoutProperties');
require('@babel/runtime/helpers/slicedToArray');
require('lodash/camelCase');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty__default["default"](target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _isSlot(s) {
  return typeof s === 'function' || Object.prototype.toString.call(s) === '[object Object]' && !vue.isVNode(s);
}

var _RadioButton = vue.defineComponent({
  name: "TRadioButton",
  components: {
    Radio: radio_radio["default"]
  },
  provide: function provide() {
    return {
      radioButton: this
    };
  },
  inject: {
    radioGroup: {
      "default": void 0
    }
  },
  inheritAttrs: false,
  props: _objectSpread({}, radio_props["default"]),
  render: function render() {
    var $props = this.$props,
        $attrs = this.$attrs,
        $slots = this.$slots,
        radioGroup = this.radioGroup;
    var children = $slots["default"] && $slots["default"](null);

    var radioProps = _objectSpread(_objectSpread({}, $props), utils_helper.omit($attrs, Object.keys($attrs).filter(function (key) {
      return key.startsWith("on");
    })));

    if (radioGroup) {
      radioProps.checked = $props.value === radioGroup.value;
      radioProps.disabled = $props.disabled === void 0 ? radioGroup.disabled : $props.disabled;
      radioProps.name = radioGroup.name;
    }

    return vue.createVNode(radio_radio["default"], radioProps, _isSlot(children) ? children : {
      "default": function _default() {
        return [children];
      }
    });
  }
});

exports["default"] = _RadioButton;
//# sourceMappingURL=radio-button.js.map
