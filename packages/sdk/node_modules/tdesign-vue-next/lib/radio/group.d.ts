import { RadioOption, RadioValue } from './type';
declare const _default: import("vue").DefineComponent<{
    disabled: {
        type: BooleanConstructor;
        default: any;
    };
    name: {
        type: StringConstructor;
        default: string;
    };
    options: {
        type: import("vue").PropType<RadioOption[]>;
    };
    size: {
        type: import("vue").PropType<import("../common").SizeEnum>;
        default: import("../common").SizeEnum;
        validator(val: import("../common").SizeEnum): boolean;
    };
    value: {
        type: import("vue").PropType<RadioValue>;
        default: any;
    };
    defaultValue: {
        type: import("vue").PropType<RadioValue>;
        default: any;
    };
    variant: {
        type: import("vue").PropType<"outline" | "primary-filled" | "default-filled">;
        default: "outline" | "primary-filled" | "default-filled";
        validator(val: "outline" | "primary-filled" | "default-filled"): boolean;
    };
    onChange: import("vue").PropType<(value: RadioValue, context: {
        e: Event;
    }) => void>;
}, unknown, {
    barStyle: {
        width: string;
        left: string;
    };
    observer: any;
}, {
    checkedClassName(): string;
}, {
    handleRadioChange(value: RadioValue, context: {
        e: Event;
    }): void;
    calcDefaultBarStyle(): void;
    calcBarStyle(): void;
}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "change"[], "change", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    disabled: {
        type: BooleanConstructor;
        default: any;
    };
    name: {
        type: StringConstructor;
        default: string;
    };
    options: {
        type: import("vue").PropType<RadioOption[]>;
    };
    size: {
        type: import("vue").PropType<import("../common").SizeEnum>;
        default: import("../common").SizeEnum;
        validator(val: import("../common").SizeEnum): boolean;
    };
    value: {
        type: import("vue").PropType<RadioValue>;
        default: any;
    };
    defaultValue: {
        type: import("vue").PropType<RadioValue>;
        default: any;
    };
    variant: {
        type: import("vue").PropType<"outline" | "primary-filled" | "default-filled">;
        default: "outline" | "primary-filled" | "default-filled";
        validator(val: "outline" | "primary-filled" | "default-filled"): boolean;
    };
    onChange: import("vue").PropType<(value: RadioValue, context: {
        e: Event;
    }) => void>;
}>> & {
    onChange?: (...args: any[]) => any;
}, {
    name: string;
    value: RadioValue;
    disabled: boolean;
    size: import("../common").SizeEnum;
    variant: "outline" | "primary-filled" | "default-filled";
    defaultValue: RadioValue;
}>;
export default _default;
