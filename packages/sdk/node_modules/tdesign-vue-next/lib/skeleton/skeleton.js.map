{"version":3,"file":"skeleton.js","sources":["../../src/skeleton/skeleton.tsx"],"sourcesContent":["import { h, defineComponent } from 'vue';\nimport isNumber from 'lodash/isNumber';\nimport isFunction from 'lodash/isFunction';\nimport { prefix } from '../config';\nimport { renderContent } from '../utils/render-tnode';\nimport props from './props';\nimport { SkeletonRowCol, SkeletonRowColObj, TdSkeletonProps } from './type';\nimport { ClassName, Styles } from '../common';\n\nconst name = `${prefix}-skeleton`;\n\nconst ThemeMap: Record<TdSkeletonProps['theme'], SkeletonRowCol> = {\n  text: [1],\n  avatar: [{ type: 'circle', size: '56px' }],\n  paragraph: [1, 1, { width: '70%' }],\n  'avatar-text': [[{ type: 'circle' }, { type: 'text', height: '32px' }]],\n  tab: [{ height: '30px' }, { height: '200px' }],\n  article: [\n    { type: 'rect', height: '30px', width: '100%' },\n    { type: 'rect', height: '200px', width: '100%' },\n    [\n      { type: 'text', height: '30px' },\n      { type: 'text', height: '30px' },\n      { type: 'text', height: '30px' },\n    ],\n    [\n      { type: 'text', height: '30px' },\n      { type: 'text', height: '30px' },\n    ],\n    [\n      { type: 'text', height: '30px' },\n      { type: 'text', height: '30px' },\n    ],\n    [\n      { type: 'text', height: '30px' },\n      { type: 'text', height: '30px' },\n    ],\n  ],\n};\n\nconst getColItemStyle = (obj: SkeletonRowColObj): Styles => {\n  const styleName = ['width', 'height', 'marginRight', 'marginLeft', 'margin', 'size', 'background', 'backgroundColor'];\n  const style: Styles = {};\n  styleName.forEach((name) => {\n    if (name in obj) {\n      const px = isNumber(obj[name]) ? `${obj[name]}px` : obj[name];\n      if (name === 'size') {\n        [style.width, style.height] = [px, px];\n      } else {\n        style[name] = px;\n      }\n    }\n  });\n  return style;\n};\n\nexport default defineComponent({\n  name: 'TSkeleton',\n\n  props: { ...props },\n\n  setup(props) {\n    const getColItemClass = (obj: SkeletonRowColObj): ClassName => [\n      `${name}__col`,\n      `${name}--type-${obj.type || 'text'}`,\n      { [`${name}--animation-${props.animation}`]: props.animation },\n    ];\n\n    const renderCols = (_cols: Number | SkeletonRowColObj | Array<SkeletonRowColObj>) => {\n      let cols: Array<SkeletonRowColObj> = [];\n      if (Array.isArray(_cols)) {\n        cols = _cols;\n      } else if (isNumber(_cols)) {\n        cols = [{ type: 'text' }];\n      } else {\n        cols = [_cols as SkeletonRowColObj];\n      }\n      return cols.map((obj) => (\n        <div class={getColItemClass(obj)} style={getColItemStyle(obj)}>\n          {isFunction(obj.content) ? obj.content(h) : obj.content}\n        </div>\n      ));\n    };\n\n    const renderRowCol = (_rowCol?: SkeletonRowCol) => {\n      const rowCol: SkeletonRowCol = _rowCol || props.rowCol;\n\n      const getBlockClass = (): ClassName => [`${name}__row`];\n\n      return rowCol.map((item) => <div class={getBlockClass()}>{renderCols(item)}</div>);\n    };\n\n    return {\n      renderRowCol,\n    };\n  },\n\n  render() {\n    const content = renderContent(this, 'default', 'content');\n\n    if (this.$slots.default && !this.loading) {\n      return <div>{content}</div>;\n    }\n\n    if (!this.loading) {\n      return;\n    }\n\n    const children = [];\n    if (this.theme) {\n      children.push(this.renderRowCol(ThemeMap[this.theme]));\n    }\n    if (this.rowCol) {\n      children.push(this.renderRowCol(this.rowCol));\n    }\n    if (!this.theme && !this.rowCol) {\n      // 什么都不传时，传入默认 rowCol\n      children.push(this.renderRowCol([1, 1, 1, { width: '70%' }]));\n    }\n\n    return <div class={name}>{children}</div>;\n  },\n});\n"],"names":["name","prefix","ThemeMap","text","avatar","type","size","paragraph","width","height","tab","article","getColItemStyle","obj","styleName","style","forEach","name2","px","isNumber","defineComponent","props","setup","props2","getColItemClass","animation","renderCols","_cols","cols","Array","isArray","map","isFunction","content","h","renderRowCol","_rowCol","rowCol","getBlockClass","item","render","renderContent","$slots","loading","children","theme","push"],"mappings":"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"}