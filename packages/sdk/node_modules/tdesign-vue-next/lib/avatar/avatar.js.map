{"version":3,"file":"avatar.js","sources":["../../src/avatar/avatar.tsx"],"sourcesContent":["import { computed, defineComponent, inject, nextTick, onMounted, onUpdated, ref } from 'vue';\nimport { useEmitEvent } from '../hooks/event';\nimport { prefix } from '../config';\nimport CLASSNAMES from '../utils/classnames';\nimport props from './props';\nimport { renderContent, renderTNodeJSX } from '../utils/render-tnode';\nimport { Styles } from '../common';\n\nconst name = `${prefix}-avatar`;\n\nexport default defineComponent({\n  name: 'TAvatar',\n  props,\n  emits: ['error'],\n  setup(props, { emit }) {\n    const emitEvent = useEmitEvent(props, emit);\n    const avatarGroup = inject('avatarGroup', undefined);\n    const avatar = ref<HTMLElement | null>(null);\n    const avatarChild = ref<HTMLElement | null>(null);\n    const isImgExist = ref(true);\n    // 内容区在左右两边的间距保持为4\n    const gap = ref(4);\n    const sizeValue = ref('');\n    const scale = ref('');\n\n    const isCustomSize = computed(() => sizeValue.value && !CLASSNAMES.SIZE[sizeValue.value]);\n\n    const customAvatarSize = computed<Styles>(() => {\n      return isCustomSize.value\n        ? {\n            width: sizeValue.value,\n            height: sizeValue.value,\n            'font-size': `${Number.parseInt(sizeValue.value, 10) / 2}px`,\n          }\n        : {};\n    });\n    const customImageSize = computed<Styles>(() => {\n      return isCustomSize.value\n        ? {\n            height: sizeValue.value,\n            width: sizeValue.value,\n          }\n        : {};\n    });\n    const customCharacterSize = computed<Styles>(() => {\n      return {\n        transform: scale.value,\n      };\n    });\n\n    const handleImgLoadError = () => {\n      const { hideOnLoadFailed } = props;\n      isImgExist.value = !hideOnLoadFailed;\n      emitEvent('error');\n    };\n    // 设置字符头像大小自适应\n    const setScaleParams = () => {\n      const $avatar = avatar.value as HTMLElement;\n      const $avatarChild = avatarChild.value as HTMLElement;\n      const avatarWidth = $avatar?.offsetWidth;\n      const avatarChildWidth = $avatarChild?.offsetWidth;\n      if (gap.value * 2 < avatarWidth) {\n        scale.value =\n          avatarChildWidth > avatarWidth - gap.value * 2\n            ? `scale(${(avatarWidth - gap.value * 2) / avatarChildWidth})`\n            : 'scale(1)';\n      }\n    };\n\n    onMounted(() => {\n      sizeValue.value = props.size || avatarGroup?.size;\n      nextTick(() => {\n        setScaleParams();\n      });\n    });\n\n    onUpdated(() => {\n      nextTick(() => {\n        setScaleParams();\n      });\n    });\n\n    return {\n      avatar,\n      avatarChild,\n      isImgExist,\n      gap,\n      sizeValue,\n      scale,\n      customAvatarSize,\n      customImageSize,\n      customCharacterSize,\n      isCustomSize,\n      handleImgLoadError,\n      setScaleParams,\n    };\n  },\n\n  render() {\n    let content = renderContent(this, 'default', 'content');\n    const icon = renderTNodeJSX(this, 'icon');\n    const isIconOnly = icon && !content;\n    const { shape, image, alt } = this.$props;\n    const avatarClass = [\n      `${name}`,\n      CLASSNAMES.SIZE[this.sizeValue],\n      {\n        [`${name}--circle`]: shape === 'circle',\n        [`${name}--round`]: shape === 'round',\n        [`${name}__icon`]: !!isIconOnly,\n      },\n    ];\n    content = (\n      <span ref=\"avatarChild\" style={{ ...this.customCharacterSize }}>\n        {content}\n      </span>\n    );\n    if (icon) {\n      content = [icon, !isIconOnly ? content : ''];\n    }\n\n    if (image && this.isImgExist) {\n      content = <img style={{ ...this.customImageSize }} src={image} alt={alt} onError={this.handleImgLoadError}></img>;\n    }\n    return (\n      <div ref=\"avatar\" class={avatarClass} style={{ ...this.customAvatarSize }}>\n        {content}\n      </div>\n    );\n  },\n});\n"],"names":["name","prefix","defineComponent","props","emits","setup","props2","emit","emitEvent","useEmitEvent","avatarGroup","inject","avatar","ref","avatarChild","isImgExist","gap","sizeValue","scale","isCustomSize","computed","value","CLASSNAMES","SIZE","customAvatarSize","width","height","Number","parseInt","customImageSize","customCharacterSize","transform","handleImgLoadError","hideOnLoadFailed","setScaleParams","$avatar","$avatarChild","avatarWidth","offsetWidth","avatarChildWidth","onMounted","size","nextTick","onUpdated","render","content","renderContent","icon","renderTNodeJSX","isIconOnly","$props","shape","image","alt","avatarClass"],"mappings":"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"}