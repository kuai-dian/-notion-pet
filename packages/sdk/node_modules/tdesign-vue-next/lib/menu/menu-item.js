/**
 * tdesign v0.8.0
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var vue = require('vue');
var config = require('../config.js');
var menu_menuItemProps = require('./menu-item-props.js');
var utils_ripple = require('../utils/ripple.js');
var utils_renderTnode = require('../utils/render-tnode.js');
var utils_event = require('../utils/event.js');
require('../utils/set-style.js');
require('lodash/isEmpty');
require('lodash/isString');
require('lodash/isFunction');
require('lodash/isObject');
require('../utils/helper.js');
require('@babel/runtime/helpers/objectWithoutProperties');
require('@babel/runtime/helpers/slicedToArray');
require('lodash/camelCase');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty__default["default"](target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var _MenuItem = vue.defineComponent({
  name: "TMenuItem",
  directives: {
    ripple: utils_ripple["default"]
  },
  props: _objectSpread({}, menu_menuItemProps["default"]),
  emits: ["click"],
  setup: function setup(props2, ctx) {
    var menu = vue.inject("TdMenu");
    var submenu = vue.inject("TdSubmenu", null);
    var active = vue.computed(function () {
      return menu.activeValue.value === props2.value;
    });
    var classes = vue.computed(function () {
      var _ref;

      return ["".concat(config.prefix, "-menu__item"), (_ref = {}, _defineProperty__default["default"](_ref, "".concat(config.prefix, "-is-active"), active.value), _defineProperty__default["default"](_ref, "".concat(config.prefix, "-is-disabled"), props2.disabled), _defineProperty__default["default"](_ref, "".concat(config.prefix, "-menu__item--plain"), !ctx.slots.icon && !props2.icon), _defineProperty__default["default"](_ref, "".concat(config.prefix, "-submenu__item"), !!submenu && !menu.isHead), _ref)];
    });
    vue.onMounted(function () {
      var _menu$vMenu;

      menu === null || menu === void 0 ? void 0 : (_menu$vMenu = menu.vMenu) === null || _menu$vMenu === void 0 ? void 0 : _menu$vMenu.add({
        value: props2.value,
        parent: submenu === null || submenu === void 0 ? void 0 : submenu.value,
        vnode: ctx.slots["default"]
      });
    });
    return {
      menu: menu,
      active: active,
      classes: classes
    };
  },
  methods: {
    handleClick: function handleClick() {
      if (this.disabled) return;
      this.menu.select(this.value);
      utils_event.emitEvent(this, "click");

      if (this.href) {
        window.open(this.href, this.target);
      } else if (this.to) {
        var router = this.router || this.$router;
        var methods = menu_menuItemProps["default"].replace ? "replace" : "push";
        router[methods](this.to)["catch"](function (err) {
          if (err.name !== "NavigationDuplicated" && !err.message.includes("Avoided redundant navigation to current location")) {
            throw err;
          }
        });
      }
    }
  },
  render: function render() {
    return vue.withDirectives(vue.createVNode("li", {
      "class": this.classes,
      "onClick": this.handleClick
    }, [utils_renderTnode.renderTNodeJSX(this, "icon"), vue.createVNode("span", {
      "class": ["".concat(config.prefix, "-menu__content")]
    }, [utils_renderTnode.renderContent(this, "default", "content")])]), [[vue.resolveDirective("ripple")]]);
  }
});

exports["default"] = _MenuItem;
//# sourceMappingURL=menu-item.js.map
