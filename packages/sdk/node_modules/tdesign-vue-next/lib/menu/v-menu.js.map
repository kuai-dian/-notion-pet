{"version":3,"file":"v-menu.js","sources":["../../src/menu/v-menu.ts"],"sourcesContent":["import { VNode, Slot } from 'vue';\n\ntype MenuValue = string | number;\ntype MenuNode = MenuValue | VMenuData;\n\ninterface VMenuData {\n  value: MenuValue;\n  parent?: MenuNode;\n  children: VMenuData[];\n  vnode?: Slot;\n}\n\ninterface VMenuItem {\n  value?: MenuValue;\n  parent: MenuValue;\n  vnode?: Slot;\n}\n\nconst getTreePaths = (node: VMenuData, val: MenuValue, ans: MenuValue[]): MenuValue[] => {\n  if (!node) return;\n  for (let i = 0; i < node.children.length; ++i) {\n    const child = node.children[i];\n    if (child.value === val) return [...ans, node.value];\n    const target = getTreePaths(child, val, [...ans, node.value]);\n    if (target) return target;\n  }\n};\n\nconst getTreeSameParentNodes = (node: VMenuData, val: MenuValue): VMenuData[] => {\n  if (!node) return [];\n  for (let i = 0; i < node.children.length; ++i) {\n    const child = node.children[i];\n    if (child.value === val) return node.children;\n    const target = getTreeSameParentNodes(child, val);\n    if (target) return target;\n  }\n};\n\nconst DFS = (root: VMenuData, val: MenuValue): VMenuData => {\n  if (root.value === val) return root;\n  if (root.children.length > 0) {\n    for (let i = 0, len = root.children.length; i < len; i++) {\n      const res = DFS(root.children[i], val);\n      if (res) return res;\n    }\n  }\n};\n\nexport default class VMenu {\n  data: VMenuData = null;\n\n  cache: Set<VMenuData> = new Set();\n\n  isMutex = false;\n\n  expandValues: Set<MenuValue> = null;\n\n  constructor(options: Record<string, any>) {\n    const root: VMenuData = {\n      value: null,\n      parent: null,\n      children: [],\n    };\n    this.data = root;\n    this.isMutex = options?.isMutex;\n    this.expandValues = new Set(options?.expandValues);\n  }\n\n  add(item: VMenuItem) {\n    const { value, parent, vnode } = item;\n    const node: VMenuData = {\n      value,\n      parent,\n      children: [],\n      vnode,\n    };\n\n    this.cache.forEach((data, v2, set) => {\n      if (item.value === data.parent) {\n        node.children.push(data);\n        set.delete(data);\n      }\n    });\n    if (item.parent == null) {\n      this.data.children.push(node);\n      node.parent = this.data;\n    } else if (this.data.children.length > 0) {\n      const pNode = DFS(this.data, parent);\n      if (pNode) {\n        pNode.children.push(node);\n      } else {\n        this.cache.add(node);\n      }\n    } else {\n      this.cache.add(node);\n    }\n  }\n\n  select(val: MenuValue) {\n    const activeValues = getTreePaths(this.data, val, []) || [];\n\n    activeValues.push(val);\n    return activeValues.filter((val) => val != null);\n  }\n\n  expand(val: MenuValue) {\n    if (this.expandValues.has(val)) {\n      this.expandValues.delete(val);\n      return [...this.expandValues];\n    }\n\n    this.expandValues.add(val);\n\n    if (!this.isMutex) {\n      return [...this.expandValues];\n    }\n\n    const sameParentNodes = getTreeSameParentNodes(this.data, val) || [];\n    const sameLevelSubmenuValues = new Set(\n      sameParentNodes.filter((node) => node.children?.length > 0 && node.value !== val).map((child) => child.value),\n    );\n\n    this.expandValues.forEach((val) => {\n      const isHit = sameLevelSubmenuValues.has(val);\n      if (isHit) {\n        this.expandValues.delete(val);\n      }\n    });\n    return [...this.expandValues];\n  }\n\n  getChild(value: MenuValue) {\n    const target = DFS(this.data, value);\n\n    return target ? target.children : [];\n  }\n}\n"],"names":["getTreePaths","node","val","ans","i","children","length","child","value","target","getTreeSameParentNodes","DFS","root","len","res","VMenu","options","Set","parent","data","isMutex","expandValues","item","vnode","cache","forEach","v2","set","push","pNode","add","activeValues","filter","val2","has","sameParentNodes","sameLevelSubmenuValues","map","isHit"],"mappings":"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"}