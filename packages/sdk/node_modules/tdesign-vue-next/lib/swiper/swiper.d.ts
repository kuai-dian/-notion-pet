import { VNode } from 'vue';
declare const _default: import("vue").DefineComponent<{
    animation: {
        type: import("vue").PropType<"slide">;
        default: "slide";
        validator(val: "slide"): boolean;
    };
    autoplay: {
        type: BooleanConstructor;
        default: boolean;
    };
    current: {
        type: NumberConstructor;
    };
    defaultCurrent: {
        type: NumberConstructor;
    };
    direction: {
        type: import("vue").PropType<"horizontal" | "vertical">;
        default: "horizontal" | "vertical";
        validator(val: "horizontal" | "vertical"): boolean;
    };
    duration: {
        type: NumberConstructor;
        default: number;
    };
    interval: {
        type: NumberConstructor;
        default: number;
    };
    onChange: import("vue").PropType<(current: number, context: {
        source: import("./type").SwiperChangeSource;
    }) => void>;
}, {
    items: import("vue").ComputedRef<(VNode<import("vue").RendererNode, import("vue").RendererElement, {
        [key: string]: any;
    }> | import("vue").VNodeArrayChildren | (string | number | boolean | void | VNode<import("vue").RendererNode, import("vue").RendererElement, {
        [key: string]: any;
    }>))[]>;
}, {
    visible: boolean;
    index: number;
    timeoutHandler: any;
}, {}, {
    renderContent(): VNode;
    renderTrigger(): VNode;
    swiperToNext(): void;
    swiperTo(index: number): void;
    setTimer(): void;
    clearTimer(): void;
}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    animation: {
        type: import("vue").PropType<"slide">;
        default: "slide";
        validator(val: "slide"): boolean;
    };
    autoplay: {
        type: BooleanConstructor;
        default: boolean;
    };
    current: {
        type: NumberConstructor;
    };
    defaultCurrent: {
        type: NumberConstructor;
    };
    direction: {
        type: import("vue").PropType<"horizontal" | "vertical">;
        default: "horizontal" | "vertical";
        validator(val: "horizontal" | "vertical"): boolean;
    };
    duration: {
        type: NumberConstructor;
        default: number;
    };
    interval: {
        type: NumberConstructor;
        default: number;
    };
    onChange: import("vue").PropType<(current: number, context: {
        source: import("./type").SwiperChangeSource;
    }) => void>;
}>>, {
    interval: number;
    animation: "slide";
    direction: "horizontal" | "vertical";
    duration: number;
    autoplay: boolean;
}>;
export default _default;
