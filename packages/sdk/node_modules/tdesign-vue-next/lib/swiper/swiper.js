/**
 * tdesign v0.8.0
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var vue = require('vue');
var config = require('../config.js');
var swiper_props = require('./props.js');
var hooks_slot = require('../hooks/slot.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty__default["default"](target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var name = "".concat(config.prefix, "-swiper");
var _Swiper = vue.defineComponent({
  name: "TSwiper",
  components: {},
  props: _objectSpread({}, swiper_props["default"]),
  setup: function setup() {
    var items = vue.computed(function () {
      return hooks_slot.useChildComponentSlots("TSwiperItem");
    });
    return {
      items: items
    };
  },
  data: function data() {
    return {
      visible: true,
      index: 0,
      timeoutHandler: null
    };
  },
  watch: {
    interval: {
      handler: function handler() {
        this.swiperTo(this.index);
      },
      immediate: true
    }
  },
  methods: {
    renderContent: function renderContent() {
      var wraperStyles = {};

      if (this.direction === "vertical") {
        wraperStyles = {
          height: "".concat(this.items.length * 100, "%"),
          transform: "translate3d(0,".concat(-this.index * 100 / this.items.length, "%,0)"),
          transition: "transform ".concat(this.duration / 1e3, "s")
        };
      } else {
        wraperStyles = {
          width: "".concat(this.items.length * 100, "%"),
          transform: "translate3d(".concat(-this.index * 100 / this.items.length, "%,0,0)"),
          transition: "transform ".concat(this.duration / 1e3, "s")
        };
      }

      return vue.createVNode("div", {
        "class": "".concat(name, "__content")
      }, [vue.createVNode("div", {
        "class": "".concat(name, "__swiper-wrap--").concat(this.direction),
        "style": wraperStyles
      }, [this.items])]);
    },
    renderTrigger: function renderTrigger() {
      var _this = this;

      var index = this.index % this.items.length;
      return vue.createVNode("ul", {
        "class": "t-swiper__trigger-wrap"
      }, [this.items.map(function (_, i) {
        return vue.createVNode("li", {
          "class": i === index ? "t-swiper__trigger--active" : "",
          "onclick": function onclick() {
            return _this.swiperTo(i);
          }
        }, null);
      })]);
    },
    swiperToNext: function swiperToNext() {
      this.swiperTo(this.index + 1);
    },
    swiperTo: function swiperTo(index) {
      var _this2 = this;

      var findIndex = this.items.length === 0 ? 0 : index % this.items.length;

      if (this.timeoutHandler) {
        this.clearTimer();
      }

      this.index = findIndex;

      if (this.interval > 0) {
        this.timeoutHandler = setTimeout(function () {
          _this2.swiperToNext();
        }, this.interval);
      }
    },
    setTimer: function setTimer() {
      var _this3 = this;

      if (this.interval > 0) {
        this.timeoutHandler = Number(setTimeout(function () {
          _this3.clearTimer();

          _this3.swiperToNext();
        }, this.interval));
      }
    },
    clearTimer: function clearTimer() {
      clearTimeout(this.timeoutHandler);
      this.timeoutHandler = null;
    }
  },
  render: function render() {
    var swiperClass = ["".concat(name), _defineProperty__default["default"]({}, "".concat(config.prefix, "-is-hidden"), !this.visible)];
    return vue.createVNode("div", {
      "class": swiperClass,
      "onMouseenter": this.clearTimer,
      "onMouseleave": this.setTimer
    }, [this.renderContent(), this.renderTrigger()]);
  }
});

exports["default"] = _Swiper;
//# sourceMappingURL=swiper.js.map
