{"version":3,"file":"single-file.js","sources":["../../src/upload/single-file.tsx"],"sourcesContent":["import { defineComponent, PropType } from 'vue';\nimport { CloseCircleFilledIcon, ErrorCircleFilledIcon, CheckCircleFilledIcon } from 'tdesign-icons-vue-next';\nimport TLoading from '../loading';\n\nimport { prefix } from '../config';\nimport { UploadFile } from './type';\nimport { ClassName } from '../common';\nimport { abridgeName, UPLOAD_NAME } from './util';\nimport props from './props';\n\nexport default defineComponent({\n  name: 'TUploadSingleFile',\n\n  components: {\n    CloseCircleFilledIcon,\n    TLoading,\n    ErrorCircleFilledIcon,\n    CheckCircleFilledIcon,\n  },\n\n  props: {\n    showUploadProgress: props.showUploadProgress,\n    file: Object as PropType<UploadFile>,\n    loadingFile: Object as PropType<UploadFile>,\n    remove: Function as PropType<(e: MouseEvent) => void>,\n    placeholder: String,\n    display: {\n      type: String as PropType<'file' | 'file-input'>,\n      validator(val: string) {\n        return ['file', 'file-input'].includes(val);\n      },\n    },\n  },\n\n  computed: {\n    percent(): number {\n      return this.loadingFile && (this.loadingFile as UploadFile).percent;\n    },\n    showPreview(): boolean {\n      return Boolean(this.file && (this.file as UploadFile).name);\n    },\n    showTextPreview(): boolean {\n      return this.display === 'file';\n    },\n    showInput(): boolean {\n      return this.display === 'file-input';\n    },\n    showProgress(): boolean {\n      return !!(this.loadingFile && (this.loadingFile as UploadFile).status === 'progress');\n    },\n    showDelete(): boolean {\n      return this.file && (this.file as UploadFile).name && !this.loadingFile;\n    },\n    inputName(): string {\n      const fileName = this.file && (this.file as UploadFile).name;\n      const loadingName = this.loadingFile && (this.loadingFile as UploadFile).name;\n      return this.showProgress ? loadingName : fileName;\n    },\n    inputText(): string {\n      return this.inputName || this.placeholder;\n    },\n    inputTextClass(): ClassName {\n      return [`${prefix}-input__inner`, { [`${UPLOAD_NAME}__placeholder`]: !this.inputName }];\n    },\n    classes(): ClassName {\n      return [`${UPLOAD_NAME}__single`, `${UPLOAD_NAME}__single-${this.display}`];\n    },\n  },\n\n  methods: {\n    renderProgress() {\n      if ((this.loadingFile as UploadFile).status === 'fail') {\n        return <ErrorCircleFilledIcon />;\n      }\n\n      if (this.showUploadProgress) {\n        return (\n          <div class={`${UPLOAD_NAME}__single-progress`}>\n            <TLoading />\n            <span class={`${UPLOAD_NAME}__single-percent`}>\n              {Math.min((this.loadingFile as UploadFile).percent, 99)}%\n            </span>\n          </div>\n        );\n      }\n    },\n\n    renderResult() {\n      if (!!this.loadingFile && (this.loadingFile as UploadFile).status === 'fail') {\n        return <ErrorCircleFilledIcon />;\n      }\n      if (this.file && (this.file as UploadFile).name && !this.loadingFile) {\n        return <CheckCircleFilledIcon />;\n      }\n      return '';\n    },\n\n    // 文本型预览\n    renderFilePreviewAsText() {\n      if (!this.inputName) return;\n      return (\n        <div class={`${UPLOAD_NAME}__single-display-text ${UPLOAD_NAME}__display-text--margin`}>\n          <span class={`${UPLOAD_NAME}__single-name`}>{this.inputName}</span>\n          {this.showProgress ? (\n            this.renderProgress()\n          ) : (\n            <CloseCircleFilledIcon\n              class={`${UPLOAD_NAME}__icon-delete`}\n              onClick={({ e }: { e: MouseEvent }) => this.remove(e)}\n            />\n          )}\n        </div>\n      );\n    },\n    // 输入框型预览\n    renderFilePreviewAsInput() {\n      return (\n        <div class={`${UPLOAD_NAME}__single-input-preview ${prefix}-input`}>\n          <div class={this.inputTextClass}>\n            {<span class={`${UPLOAD_NAME}__single-input-text`}>{abridgeName(this.inputText, 4, 6)}</span>}\n            {this.showProgress && this.renderProgress()}\n            {this.renderResult()}\n          </div>\n        </div>\n      );\n    },\n  },\n\n  render() {\n    return (\n      <div class={this.classes}>\n        {this.showInput && this.renderFilePreviewAsInput()}\n        {this.$slots.default && this.$slots.default(null)}\n        {this.showTextPreview && this.renderFilePreviewAsText()}\n      </div>\n    );\n  },\n});\n"],"names":["defineComponent","name","components","CloseCircleFilledIcon","TLoading","ErrorCircleFilledIcon","CheckCircleFilledIcon","props","showUploadProgress","file","Object","loadingFile","remove","Function","placeholder","String","display","type","validator","val","includes","computed","percent","showPreview","Boolean","showTextPreview","showInput","showProgress","status","showDelete","inputName","fileName","loadingName","inputText","inputTextClass","prefix","UPLOAD_NAME","classes","methods","renderProgress","Math","min","renderResult","renderFilePreviewAsText","e","renderFilePreviewAsInput","abridgeName","render","$slots"],"mappings":"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"}