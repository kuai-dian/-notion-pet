/**
 * tdesign v0.8.0
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var vue = require('vue');
var tdesignIconsVueNext = require('tdesign-icons-vue-next');
var loading_index = require('../loading/index.js');
var config = require('../config.js');
var upload_util = require('./util.js');
var upload_props = require('./props.js');
require('../loading/loading.js');
require('@babel/runtime/helpers/slicedToArray');
require('../loading/icon/gradient.js');
require('../_common/js/loading/circle-adapter.js');
require('../_common/js/utils/set-style.js');
require('../_common/js/utils/helper.js');
require('@babel/runtime/helpers/objectWithoutProperties');
require('../utils/classnames.js');
require('../utils/dom.js');
require('../_chunks/dep-eb6b0f94.js');
require('lodash/isString');
require('../utils/easing.js');
require('../utils/render-tnode.js');
require('lodash/isEmpty');
require('lodash/isFunction');
require('lodash/isObject');
require('../utils/transfer-dom.js');
require('../loading/props.js');
require('../utils/withInstall.js');
require('../loading/style');
require('../loading/plugin.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);

var SingleFile = vue.defineComponent({
  name: "TUploadSingleFile",
  components: {
    CloseCircleFilledIcon: tdesignIconsVueNext.CloseCircleFilledIcon,
    TLoading: loading_index.Loading,
    ErrorCircleFilledIcon: tdesignIconsVueNext.ErrorCircleFilledIcon,
    CheckCircleFilledIcon: tdesignIconsVueNext.CheckCircleFilledIcon
  },
  props: {
    showUploadProgress: upload_props["default"].showUploadProgress,
    file: Object,
    loadingFile: Object,
    remove: Function,
    placeholder: String,
    display: {
      type: String,
      validator: function validator(val) {
        return ["file", "file-input"].includes(val);
      }
    }
  },
  computed: {
    percent: function percent() {
      return this.loadingFile && this.loadingFile.percent;
    },
    showPreview: function showPreview() {
      return Boolean(this.file && this.file.name);
    },
    showTextPreview: function showTextPreview() {
      return this.display === "file";
    },
    showInput: function showInput() {
      return this.display === "file-input";
    },
    showProgress: function showProgress() {
      return !!(this.loadingFile && this.loadingFile.status === "progress");
    },
    showDelete: function showDelete() {
      return this.file && this.file.name && !this.loadingFile;
    },
    inputName: function inputName() {
      var fileName = this.file && this.file.name;
      var loadingName = this.loadingFile && this.loadingFile.name;
      return this.showProgress ? loadingName : fileName;
    },
    inputText: function inputText() {
      return this.inputName || this.placeholder;
    },
    inputTextClass: function inputTextClass() {
      return ["".concat(config.prefix, "-input__inner"), _defineProperty__default["default"]({}, "".concat(upload_util.UPLOAD_NAME, "__placeholder"), !this.inputName)];
    },
    classes: function classes() {
      return ["".concat(upload_util.UPLOAD_NAME, "__single"), "".concat(upload_util.UPLOAD_NAME, "__single-").concat(this.display)];
    }
  },
  methods: {
    renderProgress: function renderProgress() {
      if (this.loadingFile.status === "fail") {
        return vue.createVNode(tdesignIconsVueNext.ErrorCircleFilledIcon, null, null);
      }

      if (this.showUploadProgress) {
        return vue.createVNode("div", {
          "class": "".concat(upload_util.UPLOAD_NAME, "__single-progress")
        }, [vue.createVNode(loading_index.Loading, null, null), vue.createVNode("span", {
          "class": "".concat(upload_util.UPLOAD_NAME, "__single-percent")
        }, [Math.min(this.loadingFile.percent, 99), "%"])]);
      }
    },
    renderResult: function renderResult() {
      if (!!this.loadingFile && this.loadingFile.status === "fail") {
        return vue.createVNode(tdesignIconsVueNext.ErrorCircleFilledIcon, null, null);
      }

      if (this.file && this.file.name && !this.loadingFile) {
        return vue.createVNode(tdesignIconsVueNext.CheckCircleFilledIcon, null, null);
      }

      return "";
    },
    renderFilePreviewAsText: function renderFilePreviewAsText() {
      var _this = this;

      if (!this.inputName) return;
      return vue.createVNode("div", {
        "class": "".concat(upload_util.UPLOAD_NAME, "__single-display-text ").concat(upload_util.UPLOAD_NAME, "__display-text--margin")
      }, [vue.createVNode("span", {
        "class": "".concat(upload_util.UPLOAD_NAME, "__single-name")
      }, [this.inputName]), this.showProgress ? this.renderProgress() : vue.createVNode(tdesignIconsVueNext.CloseCircleFilledIcon, {
        "class": "".concat(upload_util.UPLOAD_NAME, "__icon-delete"),
        "onClick": function onClick(_ref2) {
          var e = _ref2.e;
          return _this.remove(e);
        }
      }, null)]);
    },
    renderFilePreviewAsInput: function renderFilePreviewAsInput() {
      return vue.createVNode("div", {
        "class": "".concat(upload_util.UPLOAD_NAME, "__single-input-preview ").concat(config.prefix, "-input")
      }, [vue.createVNode("div", {
        "class": this.inputTextClass
      }, [vue.createVNode("span", {
        "class": "".concat(upload_util.UPLOAD_NAME, "__single-input-text")
      }, [upload_util.abridgeName(this.inputText, 4, 6)]), this.showProgress && this.renderProgress(), this.renderResult()])]);
    }
  },
  render: function render() {
    return vue.createVNode("div", {
      "class": this.classes
    }, [this.showInput && this.renderFilePreviewAsInput(), this.$slots["default"] && this.$slots["default"](null), this.showTextPreview && this.renderFilePreviewAsText()]);
  }
});

exports["default"] = SingleFile;
//# sourceMappingURL=single-file.js.map
