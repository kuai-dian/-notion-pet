/**
 * tdesign v0.8.0
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var vue = require('vue');
var utils_renderTnode = require('../utils/render-tnode.js');
var config = require('../config.js');
var utils_classnames = require('../utils/classnames.js');
var select_optionGroupProps = require('./option-group-props.js');
require('lodash/isEmpty');
require('lodash/isString');
require('lodash/isFunction');
require('lodash/isObject');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty__default["default"](target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var name = "".concat(config.prefix, "-select-option-group");
var _OptionGroup = vue.defineComponent({
  name: "TOptionGroup",
  inject: {
    tSelect: {
      "default": void 0
    }
  },
  props: _objectSpread({}, select_optionGroupProps["default"]),
  computed: {
    classes: function classes() {
      return [name, _defineProperty__default["default"]({}, utils_classnames["default"].SIZE[this.tSelect.size], this.tSelect && this.tSelect.size)];
    }
  },
  render: function render() {
    var children = utils_renderTnode.renderTNodeJSX(this, "default");
    return vue.createVNode("li", {
      "class": this.classes
    }, [vue.createVNode("div", {
      "class": "".concat(name, "__header")
    }, [this.label]), vue.createVNode("ul", null, [children])]);
  }
});

exports["default"] = _OptionGroup;
//# sourceMappingURL=optionGroup.js.map
