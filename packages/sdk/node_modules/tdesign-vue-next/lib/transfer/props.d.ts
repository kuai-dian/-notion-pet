import { TdTransferProps } from './type';
import { PropType } from 'vue';
declare const _default: {
    checkboxProps: {
        type: PropType<import("..").TdCheckboxProps>;
    };
    checked: {
        type: PropType<import("./type").TransferValue[]>;
        default: () => TdTransferProps['checked'];
    };
    defaultChecked: {
        type: PropType<import("./type").TransferValue[]>;
        default: () => TdTransferProps['defaultChecked'];
    };
    data: {
        type: PropType<import("./type").DataOption[]>;
        default: () => TdTransferProps['data'];
    };
    direction: {
        type: PropType<"both" | "left" | "right">;
        default: "both" | "left" | "right";
        validator(val: TdTransferProps['direction']): boolean;
    };
    disabled: {
        type: PropType<boolean | boolean[]>;
        default: boolean;
    };
    empty: {
        type: PropType<import("./type").EmptyType | import("./type").EmptyType[]>;
        default: string;
    };
    footer: {
        type: PropType<(string | import("../common").TNode<any>)[] | import("../common").TNode<{
            type: import("./type").TransferListType;
        }>>;
    };
    keys: {
        type: PropType<import("../common").KeysType>;
    };
    operation: {
        type: PropType<(string | import("../common").TNode<any>)[] | import("../common").TNode<{
            direction: "left" | "right";
        }>>;
    };
    pagination: {
        type: PropType<import("..").TdPaginationProps | import("..").TdPaginationProps[]>;
    };
    search: {
        type: PropType<import("./type").SearchOption | import("./type").SearchOption[]>;
        default: boolean;
    };
    showCheckAll: {
        type: PropType<boolean | boolean[]>;
        default: boolean;
    };
    targetSort: {
        type: PropType<"push" | "unshift" | "original">;
        default: "push" | "unshift" | "original";
        validator(val: TdTransferProps['targetSort']): boolean;
    };
    title: {
        type: PropType<import("./type").TitleType[] | import("../common").TNode<{
            type: import("./type").TransferListType;
        }>>;
        default: () => TdTransferProps['title'];
    };
    transferItem: {
        type: PropType<import("../common").TNode<import("./type").TransferItem<import("./type").DataOption>>>;
    };
    value: {
        type: PropType<import("./type").TransferValue[]>;
        default: () => TdTransferProps['value'];
    };
    defaultValue: {
        type: PropType<import("./type").TransferValue[]>;
        default: () => TdTransferProps['defaultValue'];
    };
    onChange: PropType<(targetValue: import("./type").TransferValue[], context: import("./type").TargetParams) => void>;
    onCheckedChange: PropType<(options: import("./type").CheckedOptions) => void>;
    onPageChange: PropType<(page: import("..").PageInfo, context: {
        type: import("./type").TransferListType;
    }) => void>;
    onScroll: PropType<(options: {
        e: Event;
        bottomDistance: number;
        type: import("./type").TransferListType;
    }) => void>;
    onSearch: PropType<(options: import("./type").SearchContext) => void>;
};
export default _default;
