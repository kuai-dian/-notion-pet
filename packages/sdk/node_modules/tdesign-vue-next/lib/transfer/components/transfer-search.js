/**
 * tdesign v0.8.0
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _typeof = require('@babel/runtime/helpers/typeof');
var vue = require('vue');
var tdesignIconsVueNext = require('tdesign-icons-vue-next');
var config = require('../../config.js');
var input_index = require('../../input/index.js');
require('../../input/addon.js');
require('@babel/runtime/helpers/defineProperty');
require('../../input/input.js');
require('@babel/runtime/helpers/toConsumableArray');
require('../../utils/helper.js');
require('@babel/runtime/helpers/objectWithoutProperties');
require('@babel/runtime/helpers/slicedToArray');
require('lodash/camelCase');
require('../../config-provider/config-receiver.js');
require('../../config-provider/zh_CN_config.js');
require('../../utils/mixins.js');
require('../../utils/classnames.js');
require('../../input/props.js');
require('../../utils/event.js');
require('../../utils/render-tnode.js');
require('lodash/isEmpty');
require('lodash/isString');
require('lodash/isFunction');
require('lodash/isObject');
require('../../input/input-group.js');
require('../../utils/map-props.js');
require('lodash/kebabCase');
require('../../utils/withInstall.js');
require('../../input/style');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _typeof__default = /*#__PURE__*/_interopDefaultLegacy(_typeof);

var Search = vue.defineComponent({
  name: "TTransferSearch",
  props: {
    value: {
      type: String,
      "default": ""
    },
    search: {
      type: [Boolean, Object],
      "default": false
    },
    placeholder: {
      type: String,
      "default": ""
    }
  },
  emits: ["change"],
  methods: {
    handleChange: function handleChange(value, changeCtx) {
      this.$emit("change", {
        value: value,
        e: changeCtx.e
      });
    }
  },
  render: function render() {
    var value = this.value,
        search = this.search,
        placeholder = this.placeholder;
    var inputProps = _typeof__default["default"](search) === "object" ? search : {
      clearable: true
    };
    return vue.createVNode("div", {
      "class": "".concat(config.prefix, "-transfer__search-wrapper")
    }, [vue.createVNode(input_index.Input, vue.mergeProps(inputProps, {
      "defaultValue": value,
      "onChange": this.handleChange,
      "placeholder": placeholder
    }), {
      "default": function _default() {
        return [vue.createVNode(tdesignIconsVueNext.SearchIcon, {
          "slot": "suffix-icon"
        }, null)];
      }
    })]);
  }
});

exports["default"] = Search;
//# sourceMappingURL=transfer-search.js.map
