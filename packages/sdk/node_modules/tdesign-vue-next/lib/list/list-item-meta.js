/**
 * tdesign v0.8.0
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var vue = require('vue');
var config = require('../config.js');
var list_listItemMetaProps = require('./list-item-meta-props.js');
var utils_renderTnode = require('../utils/render-tnode.js');
require('lodash/isEmpty');
require('lodash/isString');
require('lodash/isFunction');
require('lodash/isObject');

var name = "".concat(config.prefix, "-list-item__meta");
var _ListItemMeta = vue.defineComponent({
  name: "TListItemMeta",
  props: list_listItemMetaProps["default"],
  methods: {
    renderAvatar: function renderAvatar() {
      if (this.avatar || this.$slots.avatar) {
        console.warn("`avatar` is going to be deprecated, please use `image` instead");
      }

      var thumbnail = utils_renderTnode.renderContent(this, "avatar", "image");
      if (!thumbnail) return;

      if (typeof thumbnail === "string") {
        return vue.createVNode("div", {
          "class": "".concat(name, "-avatar")
        }, [vue.createVNode("img", {
          "src": thumbnail
        }, null)]);
      }

      return vue.createVNode("div", {
        "class": "".concat(name, "-avatar")
      }, [thumbnail]);
    }
  },
  render: function render() {
    var propsTitleContent = utils_renderTnode.renderTNodeJSX(this, "title");
    var propsDescriptionContent = utils_renderTnode.renderTNodeJSX(this, "description");
    var listItemMetaContent = [this.renderAvatar(), vue.createVNode("div", {
      "class": "".concat(name, "-content")
    }, [propsTitleContent && vue.createVNode("h3", {
      "class": "".concat(name, "-title")
    }, [propsTitleContent]), propsDescriptionContent && vue.createVNode("p", {
      "class": "".concat(name, "-description")
    }, [propsDescriptionContent])])];
    return vue.createVNode("div", {
      "class": name
    }, [listItemMetaContent]);
  }
});

exports["default"] = _ListItemMeta;
//# sourceMappingURL=list-item-meta.js.map
