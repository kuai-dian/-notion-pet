{"version":3,"file":"const.js","sources":["../../src/calendar/const.ts"],"sourcesContent":["import { prefix } from '../config';\n\ninterface ModeOption {\n  // 选项值\n  value: string;\n  // 选项展示的文本\n  label: string;\n}\n\n/** 常量 */\n// 组件名\nexport const COMPONENT_NAME = `${prefix}-calendar`;\n// 非法日期的标识\nexport const INVALID_DATE = 'Invalid Date';\n// 最小年份\nexport const MIN_YEAR = 1970;\n// 每年首月份\nexport const FIRST_MONTH_OF_YEAR = 1;\n// 每年最后一个月份\nexport const LAST_MONTH_OF_YEAR = 12;\n\n/** 默认值 */\n// 默认的日期字符串格式\nexport const DEFAULT_DATE_FORMAT = 'YYYY-MM-DD';\n// 默认模式值\nexport const DEFAULT_MODE = 'month';\n// 默认周起始日\nexport const DEFAULT_FIRST_DAY_OF_WEEK = 1;\n// 默认风格类型\nexport const DEFAULT_THEME = 'full';\n// 年历中每一行显示的月数量\nexport const DEFAULT_YEAR_CELL_NUMINROW = 4;\n\n/** 数据源 */\n// 日历组件风格的可选值\nexport const THEME_LIST: string[] = ['full', 'card'];\n// 日历组件模式的可选值\nexport const MODE_LIST: string[] = ['month', 'year'];\n// 日历组件模式选项列表\nexport const MODE_OPTION_LIST: ModeOption[] = [\n  { value: 'month', label: '月' },\n  { value: 'year', label: '年' },\n];\n// 日历组件首列星期的可选值\nexport const FIRST_DAY_OF_WEEK_LIST: number[] = [1, 2, 3, 4, 5, 6, 7];\n\n/** map */\n// 一些固定的文本\nexport const TEXT_MAP: Record<string, string> = {\n  showWeekend: '显示周末',\n  hideWeekend: '隐藏周末',\n  today: '今天',\n  thisMonth: '本月',\n};\n// 星期的显示值\nexport const DAY_CN_MAP: Record<string, string> = {\n  1: '一',\n  2: '二',\n  3: '三',\n  4: '四',\n  5: '五',\n  6: '六',\n  7: '日',\n};\n// 月份的显示值\nexport const MONTH_CN_MAP: Record<string, string> = {\n  1: '一月',\n  2: '二月',\n  3: '三月',\n  4: '四月',\n  5: '五月',\n  6: '六月',\n  7: '七月',\n  8: '八月',\n  9: '九月',\n  10: '十月',\n  11: '十一月',\n  12: '十二月',\n};\n\nexport default {\n  COMPONENT_NAME,\n  INVALID_DATE,\n  MIN_YEAR,\n  FIRST_MONTH_OF_YEAR,\n  LAST_MONTH_OF_YEAR,\n\n  DEFAULT_DATE_FORMAT,\n  DEFAULT_MODE,\n  DEFAULT_FIRST_DAY_OF_WEEK,\n  DEFAULT_THEME,\n  DEFAULT_YEAR_CELL_NUMINROW,\n\n  TEXT_MAP,\n  MODE_LIST,\n  MODE_OPTION_LIST,\n  FIRST_DAY_OF_WEEK_LIST,\n\n  THEME_LIST,\n  DAY_CN_MAP,\n  MONTH_CN_MAP,\n};\n"],"names":["COMPONENT_NAME","prefix","INVALID_DATE","MIN_YEAR","FIRST_MONTH_OF_YEAR","LAST_MONTH_OF_YEAR","DEFAULT_DATE_FORMAT","DEFAULT_MODE","DEFAULT_FIRST_DAY_OF_WEEK","DEFAULT_THEME","DEFAULT_YEAR_CELL_NUMINROW","THEME_LIST","MODE_LIST","MODE_OPTION_LIST","value","label","FIRST_DAY_OF_WEEK_LIST","TEXT_MAP","showWeekend","hideWeekend","today","thisMonth","DAY_CN_MAP","MONTH_CN_MAP"],"mappings":";;;;;;;;;;;;IACaA,cAAc,aAAMC,aAAN;IACdC,YAAY,GAAG;IACfC,QAAQ,GAAG;IACXC,mBAAmB,GAAG;IACtBC,kBAAkB,GAAG;IACrBC,mBAAmB,GAAG;IACtBC,YAAY,GAAG;IACfC,yBAAyB,GAAG;IAC5BC,aAAa,GAAG;IAChBC,0BAA0B,GAAG;IAC7BC,UAAU,GAAG,CAAC,MAAD,EAAS,MAAT;IACbC,SAAS,GAAG,CAAC,OAAD,EAAU,MAAV;IACZC,gBAAgB,GAAG,CAC9B;AAAEC,EAAAA,KAAK,EAAE,OAAT;AAAkBC,EAAAA,KAAK,EAAE;AAAzB,CAD8B,EAE9B;AAAED,EAAAA,KAAK,EAAE,MAAT;AAAiBC,EAAAA,KAAK,EAAE;AAAxB,CAF8B;IAInBC,sBAAsB,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB;IACzBC,QAAQ,GAAG;AACtBC,EAAAA,WAAW,EAAE,0BADS;AAEtBC,EAAAA,WAAW,EAAE,0BAFS;AAGtBC,EAAAA,KAAK,EAAE,cAHe;AAItBC,EAAAA,SAAS,EAAE;AAJW;IAMXC,UAAU,GAAG;AACxB,KAAG,QADqB;AAExB,KAAG,QAFqB;AAGxB,KAAG,QAHqB;AAIxB,KAAG,QAJqB;AAKxB,KAAG,QALqB;AAMxB,KAAG,QANqB;AAOxB,KAAG;AAPqB;IASbC,YAAY,GAAG;AAC1B,KAAG,cADuB;AAE1B,KAAG,cAFuB;AAG1B,KAAG,cAHuB;AAI1B,KAAG,cAJuB;AAK1B,KAAG,cALuB;AAM1B,KAAG,cANuB;AAO1B,KAAG,cAPuB;AAQ1B,KAAG,cARuB;AAS1B,KAAG,cATuB;AAU1B,MAAI,cAVsB;AAW1B,MAAI,oBAXsB;AAY1B,MAAI;AAZsB;AAc5B,aAAe;AACbvB,EAAAA,cAAc,EAAdA,cADa;AAEbE,EAAAA,YAAY,EAAZA,YAFa;AAGbC,EAAAA,QAAQ,EAARA,QAHa;AAIbC,EAAAA,mBAAmB,EAAnBA,mBAJa;AAKbC,EAAAA,kBAAkB,EAAlBA,kBALa;AAMbC,EAAAA,mBAAmB,EAAnBA,mBANa;AAObC,EAAAA,YAAY,EAAZA,YAPa;AAQbC,EAAAA,yBAAyB,EAAzBA,yBARa;AASbC,EAAAA,aAAa,EAAbA,aATa;AAUbC,EAAAA,0BAA0B,EAA1BA,0BAVa;AAWbO,EAAAA,QAAQ,EAARA,QAXa;AAYbL,EAAAA,SAAS,EAATA,SAZa;AAabC,EAAAA,gBAAgB,EAAhBA,gBAba;AAcbG,EAAAA,sBAAsB,EAAtBA,sBAda;AAebL,EAAAA,UAAU,EAAVA,UAfa;AAgBbW,EAAAA,UAAU,EAAVA,UAhBa;AAiBbC,EAAAA,YAAY,EAAZA;AAjBa,CAAf;;;;;;;;;;;;;;;;;;;;;"}