/**
 * tdesign v0.8.0
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var vue = require('vue');
var config = require('../config.js');
var grid_rowProps = require('./row-props.js');
var grid_common = require('./common.js');
var utils_renderTnode = require('../utils/render-tnode.js');
require('lodash/isObject');
require('../utils/responsive.js');
require('../hooks/event.js');
require('../utils/helper.js');
require('@babel/runtime/helpers/objectWithoutProperties');
require('@babel/runtime/helpers/slicedToArray');
require('lodash/camelCase');
require('lodash/isEmpty');
require('lodash/isString');
require('lodash/isFunction');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty__default["default"](target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _isSlot(s) {
  return typeof s === 'function' || Object.prototype.toString.call(s) === '[object Object]' && !vue.isVNode(s);
}

var name = "".concat(config.prefix, "-row");
var _Row = vue.defineComponent({
  name: "TRow",
  props: _objectSpread({}, grid_rowProps["default"]),
  setup: function setup(props2) {
    vue.provide("rowContext", {
      gutter: props2.gutter
    });
    var size = grid_common.useRowSize();
    var rowClasses = vue.computed(function () {
      return grid_common.getRowClasses(name, props2);
    });
    var rowStyle = vue.computed(function () {
      return grid_common.calcRowStyle(props2.gutter, size.value);
    });
    return {
      rowStyle: rowStyle,
      size: size,
      rowClasses: rowClasses
    };
  },
  render: function render() {
    var _slot;

    var TAG = this.tag,
        rowClasses = this.rowClasses,
        rowStyle = this.rowStyle;
    return vue.createVNode(TAG, {
      "class": rowClasses,
      "style": rowStyle
    }, _isSlot(_slot = utils_renderTnode.renderTNodeJSX(this, "default")) ? _slot : {
      "default": function _default() {
        return [_slot];
      }
    });
  }
});

exports["default"] = _Row;
//# sourceMappingURL=row.js.map
