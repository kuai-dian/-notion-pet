import { ComponentPublicInstance, VNodeChild } from 'vue';
import { PrimaryTableCol } from '../type';
export declare function toString<T>(obj: T): string;
export declare function debounce<T = any>(fn: Function, delay?: number): () => void;
export declare function filterDataByIds<T>(data?: Array<T>, ids?: Array<string | number>, byId?: string): Array<T>;
export declare const INNER_PRE_NAME = "@@inner-";
export declare enum ScrollDirection {
    X = "x",
    Y = "y",
    UNKNOWN = "unknown"
}
export declare const getScrollDirection: (scrollLeft: number, scrollTop: number) => ScrollDirection;
export declare const getRecord: (record: Record<any, any>) => Record<any, any>;
export declare function getTitle(vm: ComponentPublicInstance, column: PrimaryTableCol, colIndex: number): VNodeChild | number;
export interface GetCellParams {
    row: Record<string, any>;
    rowIndex: number;
    col: PrimaryTableCol;
    colIndex: number;
}
export declare function getCell(vm: ComponentPublicInstance, p: GetCellParams): any;
export declare function isRowSelectedDisabled(selectColumn: PrimaryTableCol, row: Record<string, any>, rowIndex: number): boolean;
