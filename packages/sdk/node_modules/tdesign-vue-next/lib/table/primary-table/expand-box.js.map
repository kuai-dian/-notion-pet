{"version":3,"file":"expand-box.js","sources":["../../../src/table/primary-table/expand-box.tsx"],"sourcesContent":["import { defineComponent, h } from 'vue';\nimport isFunction from 'lodash/isFunction';\nimport { ChevronRightCircleIcon } from 'tdesign-icons-vue-next';\nimport mixins from '../../utils/mixins';\nimport getConfigReceiverMixins, { TableConfig } from '../../config-provider/config-receiver';\n\nimport { prefix } from '../../config';\nimport { Styles } from '../../common';\nimport primaryTableProps from '../primary-table-props';\nimport { renderTNodeJSX } from '../../utils/render-tnode';\nimport { emitEvent } from '../../utils/event';\n\nexport default defineComponent({\n  ...mixins(getConfigReceiverMixins<TableConfig>('table')),\n  name: `${prefix}-expand-box`,\n  components: {\n    ChevronRightCircleIcon,\n  },\n  props: {\n    expanded: {\n      type: Boolean,\n      default: false,\n    },\n    row: {\n      type: Object,\n    },\n    rowIndex: {\n      type: Number,\n    },\n    expandIcon: primaryTableProps.expandIcon,\n  },\n  emits: ['click'],\n  methods: {\n    getDefaultIcon() {\n      return isFunction(this.global.expandIcon) ? this.global.expandIcon(h) : <ChevronRightCircleIcon />;\n    },\n    getExpandIcon(expanded: boolean) {\n      const style: Styles = {\n        transition: 'transform .2s',\n        display: 'flex',\n        'align-items': 'center',\n      };\n      const icon = renderTNodeJSX(this, 'expandIcon', {\n        params: { row: this.row, index: this.rowIndex },\n        defaultNode: this.getDefaultIcon(),\n      });\n      if (expanded) {\n        style.transform = 'rotate(90deg)';\n      }\n      if (!icon) return false;\n      return <span style={style}>{icon}</span>;\n    },\n    handleClick(e: Event) {\n      emitEvent(this, 'click', e);\n    },\n  },\n  render() {\n    const { expanded } = this;\n    const icon = this.getExpandIcon(expanded);\n    if (!icon) return null;\n    return (\n      <span class={`${prefix}-table__expand-box`} onClick={this.handleClick}>\n        {icon}\n      </span>\n    );\n  },\n});\n"],"names":["defineComponent","mixins","getConfigReceiverMixins","name","prefix","components","ChevronRightCircleIcon","props","expanded","type","Boolean","row","Object","rowIndex","Number","expandIcon","primaryTableProps","emits","methods","getDefaultIcon","isFunction","global","h","getExpandIcon","style","transition","display","icon","renderTNodeJSX","params","index","defaultNode","transform","handleClick","e","emitEvent","render"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASA,gBAAeA,mBAAe,iCACzBC,uBAAM,CAACC,wCAAuB,CAAC,OAAD,CAAxB,CADmB;AAE5BC,EAAAA,IAAI,YAAKC,aAAL,gBAFwB;AAG5BC,EAAAA,UAAU,EAAE;AACVC,IAAAA,sBAAsB,EAAtBA;AADU,GAHgB;AAM5BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,IAAI,EAAEC,OADE;AAER,iBAAS;AAFD,KADL;AAKLC,IAAAA,GAAG,EAAE;AACHF,MAAAA,IAAI,EAAEG;AADH,KALA;AAQLC,IAAAA,QAAQ,EAAE;AACRJ,MAAAA,IAAI,EAAEK;AADE,KARL;AAWLC,IAAAA,UAAU,EAAEC,kCAAiB,CAACD;AAXzB,GANqB;AAmB5BE,EAAAA,KAAK,EAAE,CAAC,OAAD,CAnBqB;AAoB5BC,EAAAA,OAAO,EAAE;AACPC,IAAAA,cADO,4BACU;AACf,aAAOC,8BAAU,CAAC,KAAKC,MAAL,CAAYN,UAAb,CAAV,GAAqC,KAAKM,MAAL,CAAYN,UAAZ,CAAuBO,KAAvB,CAArC,0EAAP;AACD,KAHM;AAIPC,IAAAA,aAJO,yBAIOf,QAJP,EAIiB;AACtB,UAAMgB,KAAK,GAAG;AACZC,QAAAA,UAAU,EAAE,eADA;AAEZC,QAAAA,OAAO,EAAE,MAFG;AAGZ,uBAAe;AAHH,OAAd;AAKA,UAAMC,IAAI,GAAGC,gCAAc,CAAC,IAAD,EAAO,YAAP,EAAqB;AAC9CC,QAAAA,MAAM,EAAE;AAAElB,UAAAA,GAAG,EAAE,KAAKA,GAAZ;AAAiBmB,UAAAA,KAAK,EAAE,KAAKjB;AAA7B,SADsC;AAE9CkB,QAAAA,WAAW,EAAE,KAAKZ,cAAL;AAFiC,OAArB,CAA3B;;AAIA,UAAIX,QAAJ,EAAc;AACZgB,QAAAA,KAAK,CAACQ,SAAN,GAAkB,eAAlB;AACD;;AACD,UAAI,CAACL,IAAL,EACE,OAAO,KAAP;AACF;AAAA,iBAAoBH;AAApB,UAA4BG,IAA5B;AACD,KApBM;AAqBPM,IAAAA,WArBO,uBAqBKC,CArBL,EAqBQ;AACbC,MAAAA,qBAAS,CAAC,IAAD,EAAO,OAAP,EAAgBD,CAAhB,CAAT;AACD;AAvBM,GApBmB;AA6C5BE,EAAAA,MA7C4B,oBA6CnB;AACP,QAAQ5B,QAAR,GAAqB,IAArB,CAAQA,QAAR;AACA,QAAMmB,IAAI,GAAG,KAAKJ,aAAL,CAAmBf,QAAnB,CAAb;AACA,QAAI,CAACmB,IAAL,EACE,OAAO,IAAP;AACF;AAAA,yBAAuBvB,aAAvB;AAAA,iBAA4D,KAAK6B;AAAjE,QAA+EN,IAA/E;AACD;AAnD2B,GAA9B;;;;"}