/**
 * tdesign v0.8.0
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var vue = require('vue');
var isFunction = require('lodash/isFunction');
var tdesignIconsVueNext = require('tdesign-icons-vue-next');
var utils_mixins = require('../../utils/mixins.js');
var configProvider_configReceiver = require('../../config-provider/config-receiver.js');
var config = require('../../config.js');
var table_primaryTableProps = require('../primary-table-props.js');
var utils_renderTnode = require('../../utils/render-tnode.js');
var utils_event = require('../../utils/event.js');
require('../../config-provider/zh_CN_config.js');
require('lodash/isEmpty');
require('lodash/isString');
require('lodash/isObject');
require('../../utils/helper.js');
require('@babel/runtime/helpers/objectWithoutProperties');
require('@babel/runtime/helpers/slicedToArray');
require('lodash/camelCase');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);
var isFunction__default = /*#__PURE__*/_interopDefaultLegacy(isFunction);

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty__default["default"](target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var ExpandBox = vue.defineComponent(_objectSpread(_objectSpread({}, utils_mixins["default"](configProvider_configReceiver["default"]("table"))), {}, {
  name: "".concat(config.prefix, "-expand-box"),
  components: {
    ChevronRightCircleIcon: tdesignIconsVueNext.ChevronRightCircleIcon
  },
  props: {
    expanded: {
      type: Boolean,
      "default": false
    },
    row: {
      type: Object
    },
    rowIndex: {
      type: Number
    },
    expandIcon: table_primaryTableProps["default"].expandIcon
  },
  emits: ["click"],
  methods: {
    getDefaultIcon: function getDefaultIcon() {
      return isFunction__default["default"](this.global.expandIcon) ? this.global.expandIcon(vue.h) : vue.createVNode(tdesignIconsVueNext.ChevronRightCircleIcon, null, null);
    },
    getExpandIcon: function getExpandIcon(expanded) {
      var style = {
        transition: "transform .2s",
        display: "flex",
        "align-items": "center"
      };
      var icon = utils_renderTnode.renderTNodeJSX(this, "expandIcon", {
        params: {
          row: this.row,
          index: this.rowIndex
        },
        defaultNode: this.getDefaultIcon()
      });

      if (expanded) {
        style.transform = "rotate(90deg)";
      }

      if (!icon) return false;
      return vue.createVNode("span", {
        "style": style
      }, [icon]);
    },
    handleClick: function handleClick(e) {
      utils_event.emitEvent(this, "click", e);
    }
  },
  render: function render() {
    var expanded = this.expanded;
    var icon = this.getExpandIcon(expanded);
    if (!icon) return null;
    return vue.createVNode("span", {
      "class": "".concat(config.prefix, "-table__expand-box"),
      "onClick": this.handleClick
    }, [icon]);
  }
}));

exports["default"] = ExpandBox;
//# sourceMappingURL=expand-box.js.map
