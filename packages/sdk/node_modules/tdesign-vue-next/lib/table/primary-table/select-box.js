/**
 * tdesign v0.8.0
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var vue = require('vue');
var checkbox_index = require('../../checkbox/index.js');
var radio_index = require('../../radio/index.js');
var config = require('../../config.js');
require('../../checkbox/checkbox.js');
require('../../utils/render-tnode.js');
require('lodash/isEmpty');
require('lodash/isString');
require('lodash/isFunction');
require('lodash/isObject');
require('../../utils/classnames.js');
require('../../checkbox/props.js');
require('../../utils/event.js');
require('../../utils/helper.js');
require('@babel/runtime/helpers/objectWithoutProperties');
require('@babel/runtime/helpers/slicedToArray');
require('lodash/camelCase');
require('../../checkbox/group.js');
require('@babel/runtime/helpers/toConsumableArray');
require('@babel/runtime/helpers/typeof');
require('lodash/intersection');
require('../../checkbox/checkbox-group-props.js');
require('../../utils/map-props.js');
require('lodash/kebabCase');
require('../../utils/withInstall.js');
require('../../checkbox/style');
require('../../radio/radio.js');
require('../../radio/props.js');
require('../../radio/group.js');
require('lodash/isNumber');
require('../../radio/radio-group-props.js');
require('../../radio/radio-button.js');
require('../../radio/style');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty__default["default"](target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var inputType = {
  multiple: checkbox_index.Checkbox,
  single: radio_index.Radio
};
var SelectBox = vue.defineComponent({
  name: "".concat(config.prefix, "-select-box"),
  props: {
    checked: {
      type: Boolean,
      "default": false
    },
    indeterminate: {
      type: Boolean,
      "default": false
    },
    type: {
      type: String,
      validator: function validator(value) {
        return ["multiple", "single"].includes(value);
      },
      "default": "multiple"
    },
    checkProps: {
      type: Object,
      "default": function _default() {
        return {};
      }
    },
    disabled: {
      type: Boolean,
      "default": false
    },
    index: {
      type: Number,
      "default": -1
    }
  },
  data: function data() {
    return {};
  },
  render: function render() {
    var checked = this.checked,
        indeterminate = this.indeterminate,
        type = this.type,
        checkProps = this.checkProps,
        disabled = this.disabled,
        $attrs = this.$attrs;

    var props = _objectSpread(_objectSpread(_objectSpread({
      checked: checked,
      indeterminate: indeterminate,
      disabled: disabled
    }, checkProps), $attrs), {
      style: "display: inline-block"
    });

    return vue.h(inputType[type], props);
  }
});

exports["default"] = SelectBox;
//# sourceMappingURL=select-box.js.map
