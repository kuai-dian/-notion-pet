import { PrimaryTableCol, FilterValue } from '../../type';
declare const _default: import("vue").DefineComponent<{
    columns: {
        type: import("vue").PropType<PrimaryTableCol<import("../../type").TableRowData>[]>;
        default: () => PrimaryTableCol<import("../../type").TableRowData>[];
    };
    pagination: {
        type: import("vue").PropType<import("../../..").TdPaginationProps>;
    };
    filterValue: {
        type: import("vue").PropType<FilterValue>;
    };
    filterIcon: {
        type: import("vue").PropType<import("../../../common").TNode<any>>;
    };
    data: {
        type: import("vue").PropType<import("../../type").TableRowData[]>;
        default: () => import("../../type").TableRowData[];
    };
    filterRow: {
        type: import("vue").PropType<string | import("../../../common").TNode<any>>;
    };
}, unknown, {
    tableWidth: number;
    innerFilterValue: FilterValue;
    filterPopupVisible: {};
}, {
    fixedLeftColumn(): boolean;
    hasFilterCondition(): boolean;
}, {
    updateTableWidth(): void;
    onFilterPopupVisibleChange(visible: boolean, colKey: string): void;
    renderFirstFilterRow(): JSX.Element;
    getFilterResultContent(): string;
    onInnerFilterChange(val: any, column: PrimaryTableCol): void;
    emitFilterChange(filterValue: FilterValue, column?: PrimaryTableCol): void;
    onReset(column: PrimaryTableCol): void;
    onResetAll(): void;
    onConfirm(column: PrimaryTableCol): void;
    getBottomButtons(column: PrimaryTableCol): JSX.Element;
    getFilterContent(column: PrimaryTableCol): JSX.Element;
    getFilterColumns(columns: PrimaryTableCol[]): PrimaryTableCol[];
}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("filter" | "filter-change")[], "filter" | "filter-change", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    columns: {
        type: import("vue").PropType<PrimaryTableCol<import("../../type").TableRowData>[]>;
        default: () => PrimaryTableCol<import("../../type").TableRowData>[];
    };
    pagination: {
        type: import("vue").PropType<import("../../..").TdPaginationProps>;
    };
    filterValue: {
        type: import("vue").PropType<FilterValue>;
    };
    filterIcon: {
        type: import("vue").PropType<import("../../../common").TNode<any>>;
    };
    data: {
        type: import("vue").PropType<import("../../type").TableRowData[]>;
        default: () => import("../../type").TableRowData[];
    };
    filterRow: {
        type: import("vue").PropType<string | import("../../../common").TNode<any>>;
    };
}>> & {
    onFilter?: (...args: any[]) => any;
    "onFilter-change"?: (...args: any[]) => any;
}, {
    data: import("../../type").TableRowData[];
    columns: PrimaryTableCol<import("../../type").TableRowData>[];
}>;
export default _default;
