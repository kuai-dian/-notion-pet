declare const _default: import("vue").DefineComponent<{
    closeBtn: {
        type: import("vue").PropType<string | boolean | import("../common").TNode<any>>;
        default: any;
    };
    content: {
        type: import("vue").PropType<string | import("../common").TNode<any>>;
    };
    duration: {
        type: NumberConstructor;
        default: number;
    };
    icon: {
        type: import("vue").PropType<boolean | import("../common").TNode<any>>;
        default: boolean;
    };
    theme: {
        type: import("vue").PropType<import("./type").MessageThemeList>;
        default: import("./type").MessageThemeList;
        validator(val: import("./type").MessageThemeList): boolean;
    };
    onCloseBtnClick: import("vue").PropType<(context: {
        e: MouseEvent;
    }) => void>;
    onDurationEnd: import("vue").PropType<() => void>;
}, unknown, {
    timer: any;
}, {
    classes(): Array<any>;
}, {
    setTimer(): void;
    clearTimer(): void;
    close(e?: MouseEvent): void;
    renderClose(): JSX.Element;
    renderIcon(): import("vue").VNodeChild;
}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("duration-end" | "click-close-btn")[], "duration-end" | "click-close-btn", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    closeBtn: {
        type: import("vue").PropType<string | boolean | import("../common").TNode<any>>;
        default: any;
    };
    content: {
        type: import("vue").PropType<string | import("../common").TNode<any>>;
    };
    duration: {
        type: NumberConstructor;
        default: number;
    };
    icon: {
        type: import("vue").PropType<boolean | import("../common").TNode<any>>;
        default: boolean;
    };
    theme: {
        type: import("vue").PropType<import("./type").MessageThemeList>;
        default: import("./type").MessageThemeList;
        validator(val: import("./type").MessageThemeList): boolean;
    };
    onCloseBtnClick: import("vue").PropType<(context: {
        e: MouseEvent;
    }) => void>;
    onDurationEnd: import("vue").PropType<() => void>;
}>> & {
    "onDuration-end"?: (...args: any[]) => any;
    "onClick-close-btn"?: (...args: any[]) => any;
}, {
    icon: boolean | import("../common").TNode<any>;
    duration: number;
    theme: import("./type").MessageThemeList;
    closeBtn: string | boolean | import("../common").TNode<any>;
}>;
export default _default;
