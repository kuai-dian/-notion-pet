import { PropType } from 'vue';
import { DatePickerConfig } from '../../config-provider/config-receiver';
import { DateValue } from '../type';
declare const _default: import("vue").DefineComponent<{
    global: {
        type: PropType<DatePickerConfig>;
        default: () => DatePickerConfig;
    };
    mode: {
        type: StringConstructor;
        default: string;
        validator: (v: string) => boolean;
    };
    value: {
        type: ArrayConstructor;
        default: () => Date[];
    };
    minDate: DateConstructor;
    maxDate: DateConstructor;
    firstDayOfWeek: {
        type: NumberConstructor;
        validator(val: number): boolean;
    };
    disableDate: {
        type: PropType<import("../type").DisableDate>;
    };
    onChange: PropType<(value: DateValue) => void>;
    onPick: FunctionConstructor;
}, unknown, {
    leftYear: any;
    leftMonth: any;
    rightMonth: any;
    rightYear: any;
    leftType: string;
    rightType: string;
    startValue: any;
    endValue: any;
    isFirstClick: boolean;
    firstClickValue: any;
}, {
    leftData(): import("../../_common/js/date-picker/utils").DateTime[][];
    rightData(): import("../../_common/js/date-picker/utils").DateTime[][];
}, {
    initialPicker(): void;
    getLeftAndRightDataFromValue(value: any): {
        leftYear: any;
        leftMonth: any;
        rightMonth: any;
        rightYear: any;
    };
    getData({ year, month, type }: {
        year: number;
        month: number;
        type: string;
    }): import("../../_common/js/date-picker/utils").DateTime[][];
    getClickHandler(direction: string, date: DateValue, e: MouseEvent): any;
    clickHeader(flag: number, direction: string): void;
    clickDate(date: Date, e: MouseEvent): void;
    clickYear(date: Date, e: MouseEvent, type: string): void;
    clickMonth(date: Date, e: MouseEvent, type: string): void;
    onMouseEnter(date: Date): void;
    onTypeChange(): void;
    handleTypeChange(direction: string, type: string): void;
}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "change"[], "change", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    global: {
        type: PropType<DatePickerConfig>;
        default: () => DatePickerConfig;
    };
    mode: {
        type: StringConstructor;
        default: string;
        validator: (v: string) => boolean;
    };
    value: {
        type: ArrayConstructor;
        default: () => Date[];
    };
    minDate: DateConstructor;
    maxDate: DateConstructor;
    firstDayOfWeek: {
        type: NumberConstructor;
        validator(val: number): boolean;
    };
    disableDate: {
        type: PropType<import("../type").DisableDate>;
    };
    onChange: PropType<(value: DateValue) => void>;
    onPick: FunctionConstructor;
}>> & {
    onChange?: (...args: any[]) => any;
}, {
    value: unknown[];
    global: DatePickerConfig;
    mode: string;
}>;
export default _default;
