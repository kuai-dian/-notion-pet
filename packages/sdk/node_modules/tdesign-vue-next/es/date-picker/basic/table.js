/**
 * tdesign v0.8.0
 * (c) 2022 tdesign
 * @license MIT
 */

import _defineProperty from '@babel/runtime/helpers/defineProperty';
import { defineComponent, createVNode, resolveComponent, mergeProps } from 'vue';
import { prefix } from '../../config.js';
import TDatePickerCell from './cell.js';
import mixins from '../../utils/mixins.js';
import getConfigReceiverMixins from '../../config-provider/config-receiver.js';
import '../../config-provider/zh_CN_config.js';
import '../../config-provider/type.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var name = "".concat(prefix, "-date-picker-table");
var DAY_NAMES = ["\u4E00", "\u4E8C", "\u4E09", "\u56DB", "\u4E94", "\u516D", "\u65E5"];
var TDateTable = defineComponent(_objectSpread(_objectSpread({}, mixins(getConfigReceiverMixins("datePicker"))), {}, {
  name: name,
  components: {
    TDatePickerCell: TDatePickerCell
  },
  props: {
    type: {
      type: String,
      "default": "day"
    },
    data: Array,
    firstDayOfWeek: Number,
    dayNames: {
      type: Array,
      "default": function _default() {
        return DAY_NAMES;
      }
    },
    onCellClick: {
      type: Function
    },
    onCellMouseEnter: {
      type: Function
    }
  },
  render: function render() {
    var _this = this;

    var _this$$props = this.$props,
        type = _this$$props.type,
        data = _this$$props.data,
        onCellClick = _this$$props.onCellClick,
        onCellMouseEnter = _this$$props.onCellMouseEnter,
        firstDayOfWeek = _this$$props.firstDayOfWeek;
    var weekdays = this.global.weekdays;
    var weekArr = [];
    var wi = firstDayOfWeek - 1;
    var len = weekdays.length;

    while (weekArr.length < len) {
      weekArr.push(weekdays[wi]);
      wi = (wi + len + 1) % len;
    }

    var panelClass = "t-date-picker--".concat(type);
    return createVNode("div", {
      "class": panelClass
    }, [createVNode("table", null, [type === "date" && createVNode("thead", null, [createVNode("tr", null, [weekArr.map(function (value, i) {
      return createVNode("th", {
        "key": i
      }, [value]);
    })])]), createVNode("tbody", null, [data.map(function (row, i) {
      return createVNode("tr", {
        "key": i
      }, [row.map(function (col, j) {
        return createVNode(resolveComponent("t-date-picker-cell"), mergeProps(col, _this.$attrs, {
          "key": j,
          "onClick": onCellClick,
          "onMouseEnter": onCellMouseEnter
        }), null);
      })]);
    })])])]);
  }
}));

export { TDateTable as default };
//# sourceMappingURL=table.js.map
