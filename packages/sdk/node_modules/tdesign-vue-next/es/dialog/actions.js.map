{"version":3,"file":"actions.js","sources":["../../src/dialog/actions.tsx"],"sourcesContent":["import { defineComponent } from 'vue';\nimport isString from 'lodash/isString';\nimport isObject from 'lodash/isObject';\nimport { renderTNodeJSX } from '../utils/render-tnode';\nimport TButton, { ButtonProps } from '../button';\nimport { PopconfirmConfig, DialogConfig, DrawerConfig } from '../config-provider';\nimport { ClassName, TNode } from '../common';\n\nexport type MixnsFooterButton = string | ButtonProps | TNode;\n\nexport interface MixinsConfirmBtn {\n  theme?: MixinsThemeType;\n  className?: ClassName;\n  confirmBtn: MixnsFooterButton;\n  globalConfirm: PopconfirmConfig['confirm'] | DrawerConfig['confirm'] | DialogConfig['confirm'];\n  globalConfirmBtnTheme?: PopconfirmConfig['confirmBtnTheme'] | DialogConfig['confirmBtnTheme'];\n}\n\nexport interface MixinsCancelBtn {\n  className?: ClassName;\n  cancelBtn: MixnsFooterButton;\n  globalCancel: PopconfirmConfig['cancel'] | DrawerConfig['cancel'] | DialogConfig['cancel'];\n}\n\nexport type MixinsThemeType = keyof (PopconfirmConfig['confirmBtnTheme'] & DialogConfig['confirmBtnTheme']);\n\nexport default defineComponent({\n  methods: {\n    getConfirmBtn(options: MixinsConfirmBtn) {\n      const { confirmBtn, className } = options;\n      if (confirmBtn === null) return null;\n      if (confirmBtn && this.$slots.confirmBtn) {\n        console.warn('Both $props.confirmBtn and $scopedSlots.confirmBtn exist, $props.confirmBtn is preferred.');\n      }\n      const defaultButtonProps = this.getDefaultConfrimBtnProps(options);\n      // 属性和插槽都不存在，就返回全局默认配置\n      if (!confirmBtn && !this.$slots.confirmBtn) {\n        return <TButton class={className} {...defaultButtonProps} />;\n      }\n      // 如果属性存在，优先返回属性配置\n      if (confirmBtn && ['string', 'object'].includes(typeof confirmBtn)) {\n        return this.getButtonByProps(confirmBtn as string | ButtonProps, defaultButtonProps, className);\n      }\n      // 渲染插槽 或 function 类型的 confirmBtn，属性优先级更高\n      return renderTNodeJSX(this, 'confirmBtn');\n    },\n\n    getCancelBtn(options: MixinsCancelBtn) {\n      const { cancelBtn, className } = options;\n      if (cancelBtn === null) return null;\n      if (cancelBtn && this.$slots.cancelBtn) {\n        console.warn('Both $props.cancelBtn and $scopedSlots.cancelBtn exist, $props.cancelBtn is preferred.');\n      }\n      const defaultButtonProps: ButtonProps = this.getDefaultCancelBtnProps(options);\n      // 属性和插槽都不存在，就返回全局默认配置\n      if (!cancelBtn && !this.$slots.cancelBtn) {\n        return <TButton class={className} {...defaultButtonProps} />;\n      }\n      // 如果属性存在，优先返回属性配置\n      if (cancelBtn && ['string', 'object'].includes(typeof cancelBtn)) {\n        return this.getButtonByProps(cancelBtn as string | ButtonProps, defaultButtonProps);\n      }\n      // 渲染插槽 或 function 类型的 confirmBtn，属性优先级更高\n      return renderTNodeJSX(this, 'cancelBtn');\n    },\n\n    getButtonByProps(button: string | ButtonProps, defaultButton: ButtonProps, className?: ClassName) {\n      let newOptions = defaultButton;\n      if (isString(button)) {\n        newOptions.content = button;\n      } else if (isObject(button)) {\n        newOptions = { ...newOptions, ...button };\n      }\n      return <TButton class={className} {...newOptions} />;\n    },\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    confirmBtnAction(e: MouseEvent) {},\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    cancelBtnAction(e: MouseEvent) {},\n\n    // 全局配置属性综合\n    getDefaultConfrimBtnProps(options: MixinsConfirmBtn): ButtonProps {\n      const { globalConfirm, theme, globalConfirmBtnTheme } = options;\n      const defaultTheme = globalConfirmBtnTheme?.[theme] || 'primary';\n      let props: ButtonProps = {\n        theme: defaultTheme,\n        content: '确定',\n        onClick: (e) => {\n          this.confirmBtnAction(e);\n        },\n      };\n      if (isString(globalConfirm)) {\n        props.content = globalConfirm;\n      } else if (isObject(globalConfirm)) {\n        props = { ...props, ...globalConfirm };\n      }\n      return props;\n    },\n\n    // 全局配置属性综合\n    getDefaultCancelBtnProps(options: MixinsCancelBtn): ButtonProps {\n      const { globalCancel } = options;\n      let props: ButtonProps = {\n        theme: 'default',\n        content: '取消',\n        onClick: (e) => {\n          this.cancelBtnAction(e);\n        },\n      };\n      if (isString(globalCancel)) {\n        props.content = globalCancel;\n      } else if (isObject(globalCancel)) {\n        props = { ...props, ...globalCancel };\n      }\n      return props;\n    },\n  },\n});\n"],"names":["defineComponent","methods","getConfirmBtn","options","confirmBtn","className","$slots","console","warn","defaultButtonProps","getDefaultConfrimBtnProps","includes","getButtonByProps","renderTNodeJSX","getCancelBtn","cancelBtn","getDefaultCancelBtnProps","button","defaultButton","newOptions","isString","content","isObject","confirmBtnAction","e","cancelBtnAction","globalConfirm","theme","globalConfirmBtnTheme","defaultTheme","props","onClick","globalCancel"],"mappings":"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"}