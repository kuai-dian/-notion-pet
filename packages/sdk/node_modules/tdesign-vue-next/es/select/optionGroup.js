/**
 * tdesign v0.8.0
 * (c) 2022 tdesign
 * @license MIT
 */

import _defineProperty from '@babel/runtime/helpers/defineProperty';
import { defineComponent, createVNode } from 'vue';
import { renderTNodeJSX } from '../utils/render-tnode.js';
import { prefix } from '../config.js';
import ClASSNAMES from '../utils/classnames.js';
import props from './option-group-props.js';
import 'lodash/isEmpty';
import 'lodash/isString';
import 'lodash/isFunction';
import 'lodash/isObject';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var name = "".concat(prefix, "-select-option-group");
var _OptionGroup = defineComponent({
  name: "TOptionGroup",
  inject: {
    tSelect: {
      "default": void 0
    }
  },
  props: _objectSpread({}, props),
  computed: {
    classes: function classes() {
      return [name, _defineProperty({}, ClASSNAMES.SIZE[this.tSelect.size], this.tSelect && this.tSelect.size)];
    }
  },
  render: function render() {
    var children = renderTNodeJSX(this, "default");
    return createVNode("li", {
      "class": this.classes
    }, [createVNode("div", {
      "class": "".concat(name, "__header")
    }, [this.label]), createVNode("ul", null, [children])]);
  }
});

export { _OptionGroup as default };
//# sourceMappingURL=optionGroup.js.map
