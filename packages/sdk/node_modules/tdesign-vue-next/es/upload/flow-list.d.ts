import { UploadFile } from './type';
declare const _default: import("vue").DefineComponent<Readonly<import("vue").ComponentPropsOptions<{
    [x: string]: unknown;
}>>, unknown, {
    dragActive: boolean;
    target: any;
}, {
    showInitial(): boolean;
    waitingUploadFiles(): Array<UploadFile>;
    listFiles(): Array<UploadFile>;
    failedList(): Array<UploadFile>;
    processList(): Array<UploadFile>;
    isUploading(): boolean;
    allowUpload(): boolean;
    uploadText(): string;
}, {
    renderStatus(file: UploadFile): JSX.Element;
    handleDrop(event: DragEvent): void;
    handleDragenter(event: DragEvent): void;
    handleDragleave(event: DragEvent): void;
    handleDragover(event: DragEvent): void;
    onViewClick(event: MouseEvent, file?: UploadFile): void;
    renderDrager(): JSX.Element;
    renderFileList(): JSX.Element;
    renderImgList(): JSX.Element;
}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("change" | "dragenter" | "dragleave" | "imgPreview")[], "change" | "dragenter" | "dragleave" | "imgPreview", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<readonly string[] | import("vue").ExtractPropTypes<Readonly<import("vue").ComponentObjectPropsOptions<{
    [x: string]: unknown;
}>>>> & {
    onDragenter?: (...args: any[]) => any;
    onDragleave?: (...args: any[]) => any;
    onChange?: (...args: any[]) => any;
    onImgPreview?: (...args: any[]) => any;
}, {
    [x: number]: string;
} | {}>;
export default _default;
