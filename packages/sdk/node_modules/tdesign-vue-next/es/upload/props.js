/**
 * tdesign v0.8.0
 * (c) 2022 tdesign
 * @license MIT
 */

var props = {
  accept: {
    type: String,
    "default": ""
  },
  action: {
    type: String,
    "default": ""
  },
  autoUpload: {
    type: Boolean,
    "default": true
  },
  beforeUpload: {
    type: Function
  },
  data: {
    type: Object
  },
  "default": {
    type: [String, Function]
  },
  disabled: Boolean,
  draggable: Boolean,
  files: {
    type: Array
  },
  defaultFiles: {
    type: Array
  },
  format: {
    type: Function
  },
  formatResponse: {
    type: Function
  },
  headers: {
    type: Object
  },
  max: {
    type: Number,
    "default": 0
  },
  method: {
    type: String,
    "default": "POST",
    validator: function validator(val) {
      return ["POST", "GET", "PUT", "OPTION"].includes(val);
    }
  },
  multiple: Boolean,
  name: {
    type: String,
    "default": "file"
  },
  placeholder: {
    type: String,
    "default": ""
  },
  requestMethod: {
    type: Function
  },
  showUploadProgress: {
    type: Boolean,
    "default": true
  },
  sizeLimit: {
    type: [Number, Object]
  },
  theme: {
    type: String,
    "default": "file",
    validator: function validator(val) {
      return ["custom", "file", "file-input", "file-flow", "image", "image-flow"].includes(val);
    }
  },
  tips: {
    type: String,
    "default": ""
  },
  trigger: {
    type: [String, Function]
  },
  useMockProgress: {
    type: Boolean,
    "default": true
  },
  withCredentials: Boolean,
  onCancelUpload: Function,
  onChange: Function,
  onDragenter: Function,
  onDragleave: Function,
  onFail: Function,
  onPreview: Function,
  onProgress: Function,
  onRemove: Function,
  onSuccess: Function
};

export { props as default };
//# sourceMappingURL=props.js.map
