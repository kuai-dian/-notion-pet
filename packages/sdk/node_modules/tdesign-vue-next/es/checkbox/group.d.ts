import { VNode } from 'vue';
import { CheckboxOptionObj, TdCheckboxProps, CheckboxGroupValue } from './type';
declare const _default: import("vue").DefineComponent<{
    disabled: BooleanConstructor;
    max: {
        type: NumberConstructor;
        default: any;
    };
    name: {
        type: StringConstructor;
        default: string;
    };
    options: {
        type: import("vue").PropType<import("./type").CheckboxOption[]>;
        default: () => import("./type").CheckboxOption[];
    };
    value: {
        type: import("vue").PropType<CheckboxGroupValue>;
        default: () => CheckboxGroupValue;
    };
    defaultValue: {
        type: import("vue").PropType<CheckboxGroupValue>;
        default: () => CheckboxGroupValue;
    };
    onChange: import("vue").PropType<(value: CheckboxGroupValue, context: {
        e: Event;
    }) => void>;
}, unknown, {
    checkedMap: {};
    optionList: CheckboxOptionObj[];
}, {
    values(): string;
    intersectionLen(): number;
    isCheckAll(): boolean;
    indeterminate(): boolean;
    maxExceeded(): boolean;
}, {
    onCheckedChange(p: {
        checked: boolean;
        checkAll: boolean;
        e: Event;
        option: TdCheckboxProps;
    }): void;
    getOptionListBySlots(nodes: VNode[]): CheckboxOptionObj[];
    renderLabel(option: CheckboxOptionObj): import("vue").VNodeChild;
    emitChange(val: CheckboxGroupValue, e?: Event): void;
    handleCheckboxChange(data: {
        checked: boolean;
        e: Event;
        option: TdCheckboxProps;
    }): void;
    getAllCheckboxValue(): CheckboxGroupValue;
    onCheckAllChange(checked: boolean, context: {
        e: Event;
        source?: 't-checkbox';
    }): void;
}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "change"[], "change", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    disabled: BooleanConstructor;
    max: {
        type: NumberConstructor;
        default: any;
    };
    name: {
        type: StringConstructor;
        default: string;
    };
    options: {
        type: import("vue").PropType<import("./type").CheckboxOption[]>;
        default: () => import("./type").CheckboxOption[];
    };
    value: {
        type: import("vue").PropType<CheckboxGroupValue>;
        default: () => CheckboxGroupValue;
    };
    defaultValue: {
        type: import("vue").PropType<CheckboxGroupValue>;
        default: () => CheckboxGroupValue;
    };
    onChange: import("vue").PropType<(value: CheckboxGroupValue, context: {
        e: Event;
    }) => void>;
}>> & {
    onChange?: (...args: any[]) => any;
}, {
    max: number;
    name: string;
    value: CheckboxGroupValue;
    disabled: boolean;
    options: import("./type").CheckboxOption[];
    defaultValue: CheckboxGroupValue;
}>;
export default _default;
