import { VNode } from 'vue';
import { TdPrimaryTableProps } from '../../type';
declare const _default: import("vue").DefineComponent<{
    columns: {
        type: import("vue").PropType<import("../../type").PrimaryTableCol<import("../../type").TableRowData>[]>;
        default: () => import("../../type").PrimaryTableCol<import("../../type").TableRowData>[];
    };
    showColumns: {
        type: BooleanConstructor;
        default: boolean;
    };
}, unknown, {
    showColumnKeys: string[];
    showColumnCheckboxKeys: string[];
    isShowColumnsDlg: boolean;
}, {
    showColumnCheckboxOpts(): Record<string, any>[];
    isAllShowColumns(): boolean;
    isSomeShowColumns(): boolean;
}, {
    getShowColumns(columns: TdPrimaryTableProps['columns']): TdPrimaryTableProps['columns'];
    renderShowColumnsDlgFooter(): VNode;
    renderShowColumnsDlg(): VNode;
    renderShowColumns(): VNode;
    handleClickAllShowColumns(): void;
    handleConfirmShowColumnsDlg(): void;
    handleCancelShowColumnsDlg(): void;
    updateColumns(): void;
}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    columns: {
        type: import("vue").PropType<import("../../type").PrimaryTableCol<import("../../type").TableRowData>[]>;
        default: () => import("../../type").PrimaryTableCol<import("../../type").TableRowData>[];
    };
    showColumns: {
        type: BooleanConstructor;
        default: boolean;
    };
}>>, {
    columns: import("../../type").PrimaryTableCol<import("../../type").TableRowData>[];
    showColumns: boolean;
}>;
export default _default;
