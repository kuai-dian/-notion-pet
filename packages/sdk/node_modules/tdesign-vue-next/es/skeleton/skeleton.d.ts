import { SkeletonRowCol } from './type';
declare const _default: import("vue").DefineComponent<{
    animation: {
        type: import("vue").PropType<"gradient" | "flashed">;
        validator(val: "gradient" | "flashed"): boolean;
    };
    loading: {
        type: BooleanConstructor;
        default: boolean;
    };
    rowCol: {
        type: import("vue").PropType<SkeletonRowCol>;
    };
    theme: {
        type: import("vue").PropType<"article" | "text" | "tab" | "avatar" | "paragraph" | "avatar-text">;
        validator(val: "article" | "text" | "tab" | "avatar" | "paragraph" | "avatar-text"): boolean;
    };
}, {
    renderRowCol: (_rowCol?: SkeletonRowCol) => JSX.Element[];
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    animation: {
        type: import("vue").PropType<"gradient" | "flashed">;
        validator(val: "gradient" | "flashed"): boolean;
    };
    loading: {
        type: BooleanConstructor;
        default: boolean;
    };
    rowCol: {
        type: import("vue").PropType<SkeletonRowCol>;
    };
    theme: {
        type: import("vue").PropType<"article" | "text" | "tab" | "avatar" | "paragraph" | "avatar-text">;
        validator(val: "article" | "text" | "tab" | "avatar" | "paragraph" | "avatar-text"): boolean;
    };
}>>, {
    loading: boolean;
}>;
export default _default;
