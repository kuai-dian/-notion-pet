declare const _default: import("vue").DefineComponent<{
    index: NumberConstructor;
    active: {
        type: BooleanConstructor;
    };
    theme: {
        type: import("vue").PropType<"normal" | "card">;
        default: "normal" | "card";
        validator(val: "normal" | "card"): boolean;
    };
    size: {
        type: import("vue").PropType<"medium" | "large">;
        default: "medium" | "large";
        validator(val: "medium" | "large"): boolean;
    };
    placement: {
        type: import("vue").PropType<"left" | "top" | "bottom" | "right">;
        default: "left" | "top" | "bottom" | "right";
        validator(val: "left" | "top" | "bottom" | "right"): boolean;
    };
    label: {
        type: any;
    };
    disabled: BooleanConstructor;
    removable: BooleanConstructor;
    value: {
        type: import("vue").PropType<import("./type").TabValue>;
    };
}, unknown, unknown, {
    navItemClass(): {};
}, {
    removeBtnClick({ e }: {
        e: MouseEvent;
    }): void;
    onClickNav(e: MouseEvent): void;
    renderCardItem(): JSX.Element;
    renderNormalItem(): JSX.Element;
}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("remove" | "click")[], "remove" | "click", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    index: NumberConstructor;
    active: {
        type: BooleanConstructor;
    };
    theme: {
        type: import("vue").PropType<"normal" | "card">;
        default: "normal" | "card";
        validator(val: "normal" | "card"): boolean;
    };
    size: {
        type: import("vue").PropType<"medium" | "large">;
        default: "medium" | "large";
        validator(val: "medium" | "large"): boolean;
    };
    placement: {
        type: import("vue").PropType<"left" | "top" | "bottom" | "right">;
        default: "left" | "top" | "bottom" | "right";
        validator(val: "left" | "top" | "bottom" | "right"): boolean;
    };
    label: {
        type: any;
    };
    disabled: BooleanConstructor;
    removable: BooleanConstructor;
    value: {
        type: import("vue").PropType<import("./type").TabValue>;
    };
}>> & {
    onClick?: (...args: any[]) => any;
    onRemove?: (...args: any[]) => any;
}, {
    active: boolean;
    label: any;
    disabled: boolean;
    size: "medium" | "large";
    theme: "normal" | "card";
    placement: "left" | "top" | "bottom" | "right";
    removable: boolean;
}>;
export default _default;
