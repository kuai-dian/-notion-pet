/**
 * tdesign v0.8.0
 * (c) 2022 tdesign
 * @license MIT
 */

import { ref } from 'vue';

function useHover(props) {
  var isHoverRef = ref(false);

  var addHover = function addHover(context) {
    var _props$onMouseenter;

    if (props.readonly || props.disabled) return;
    isHoverRef.value = true;
    (_props$onMouseenter = props.onMouseenter) === null || _props$onMouseenter === void 0 ? void 0 : _props$onMouseenter.call(props, context);
  };

  var cancelHover = function cancelHover(context) {
    var _props$onMouseleave;

    if (props.readonly || props.disabled) return;
    isHoverRef.value = false;
    (_props$onMouseleave = props.onMouseleave) === null || _props$onMouseleave === void 0 ? void 0 : _props$onMouseleave.call(props, context);
  };

  return {
    isHoverRef: isHoverRef,
    addHover: addHover,
    cancelHover: cancelHover
  };
}

export { useHover as default };
//# sourceMappingURL=useHover.js.map
