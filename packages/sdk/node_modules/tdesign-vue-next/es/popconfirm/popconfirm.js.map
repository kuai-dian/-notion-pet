{"version":3,"file":"popconfirm.js","sources":["../../src/popconfirm/popconfirm.tsx"],"sourcesContent":["import { defineComponent, h } from 'vue';\nimport { InfoCircleFilledIcon, ErrorCircleFilledIcon } from 'tdesign-icons-vue-next';\nimport mixins from '../utils/mixins';\nimport getConfigReceiverMixins, { PopconfirmConfig } from '../config-provider/config-receiver';\nimport { prefix } from '../config';\nimport Popup, { PopupProps } from '../popup/index';\nimport props from './props';\nimport { renderTNodeJSX, renderContent, renderTNodeJSXDefault } from '../utils/render-tnode';\nimport { PopconfirmVisibleChangeContext, TdPopconfirmProps } from './type';\nimport { emitEvent } from '../utils/event';\nimport ActionMixin from '../dialog/actions';\n\nconst name = `${prefix}-popconfirm`;\nconst popupName = `${prefix}-popup`;\n\ntype IconConstructor = typeof InfoCircleFilledIcon;\n\nexport default defineComponent({\n  ...mixins(ActionMixin, getConfigReceiverMixins<PopconfirmConfig>('popconfirm')),\n  name: 'TPopconfirm',\n  props,\n  emits: ['close', 'cancel', 'confirm', 'visible-change'],\n  data() {\n    return {\n      name,\n      popupName,\n    };\n  },\n  computed: {\n    themeIcon(): IconConstructor {\n      const iconMap = {\n        default: InfoCircleFilledIcon,\n        warning: ErrorCircleFilledIcon,\n        danger: ErrorCircleFilledIcon,\n      };\n      return iconMap[this.theme];\n    },\n    iconCls(): string {\n      const theme = this.theme || 'default';\n      return `${name}__icon--${theme}`;\n    },\n    innerPopupProps(): PopupProps {\n      return {\n        showArrow: this.showArrow,\n        overlayClassName: name,\n        trigger: 'click',\n        destroyOnClose: this.destroyOnClose,\n        placement: this.placement,\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        ...this.popupProps,\n      };\n    },\n  },\n  methods: {\n    cancelBtnAction(e: MouseEvent) {\n      emitEvent<Parameters<TdPopconfirmProps['onCancel']>>(this, 'cancel', { e });\n      const cancelContext: PopconfirmVisibleChangeContext = { e, trigger: 'cancel' };\n      emitEvent<Parameters<TdPopconfirmProps['onVisibleChange']>>(this, 'visible-change', false, cancelContext);\n    },\n    // used in ActionMixin, do not Delete\n    confirmBtnAction(e: MouseEvent) {\n      emitEvent<Parameters<TdPopconfirmProps['onConfirm']>>(this, 'confirm', { e });\n      const confirmContext: PopconfirmVisibleChangeContext = { e, trigger: 'confirm' };\n      emitEvent<Parameters<TdPopconfirmProps['onVisibleChange']>>(this, 'visible-change', false, confirmContext);\n    },\n    renderIcon() {\n      const Icon = this.themeIcon;\n      return renderTNodeJSXDefault(this, 'icon', <Icon class={this.iconCls} />);\n    },\n    onPopupVisibleChange(val: boolean, context: PopconfirmVisibleChangeContext) {\n      emitEvent(this, 'visible-change', val, context);\n      this.onVisibleChange && this.onVisibleChange(val, context);\n    },\n  },\n  render() {\n    const triggerElement = renderContent(this, 'default', 'triggerElement');\n    // this.getCancelBtn is a function of ActionMixin\n    const cancelBtn = this.getCancelBtn({\n      cancelBtn: this.cancelBtn,\n      globalCancel: this.global.cancel,\n      className: `${name}__cancel`,\n    });\n    // this.getConfirmBtn is a function of ActionMixin\n    const confirmBtn = this.getConfirmBtn({\n      theme: this.theme,\n      confirmBtn: this.confirmBtn,\n      globalConfirm: this.global.confirm,\n      globalConfirmBtnTheme: this.global.confirmBtnTheme,\n      className: `${name}__confirm`,\n    });\n    return (\n      <Popup\n        ref=\"popup\"\n        visible={this.visible}\n        {...this.innerPopupProps}\n        onVisibleChange={this.onPopupVisibleChange}\n        v-slots={{\n          content: () => (\n            <div class={`${name}__content`}>\n              <div class={`${name}__body`}>\n                {this.renderIcon()}\n                <div class={`${name}__inner`}>{renderTNodeJSX(this, 'content')}</div>\n              </div>\n              {Boolean(cancelBtn || confirmBtn) && (\n                <div class={`${name}__buttons`}>\n                  {cancelBtn}\n                  {confirmBtn}\n                </div>\n              )}\n            </div>\n          ),\n        }}\n      >\n        {triggerElement}\n      </Popup>\n    );\n  },\n});\n"],"names":["name","prefix","popupName","defineComponent","mixins","ActionMixin","getConfigReceiverMixins","props","emits","data","computed","themeIcon","iconMap","InfoCircleFilledIcon","warning","ErrorCircleFilledIcon","danger","theme","iconCls","innerPopupProps","showArrow","overlayClassName","trigger","destroyOnClose","placement","popupProps","methods","cancelBtnAction","e","emitEvent","cancelContext","confirmBtnAction","confirmContext","renderIcon","Icon","renderTNodeJSXDefault","onPopupVisibleChange","val","context","onVisibleChange","render","triggerElement","renderContent","cancelBtn","getCancelBtn","globalCancel","global","cancel","className","confirmBtn","getConfirmBtn","globalConfirm","confirm","globalConfirmBtnTheme","confirmBtnTheme","visible","content","renderTNodeJSX","Boolean"],"mappings":"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"}