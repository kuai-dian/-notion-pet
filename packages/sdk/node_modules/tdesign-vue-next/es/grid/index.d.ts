import _Row from './row';
import _Col from './col';
import { WithInstallType } from '../utils/withInstall';
import { TdRowProps, TdColProps } from './type';
import './style';
export * from './type';
export declare type ColProps = TdColProps;
export declare type RowProps = TdRowProps;
export declare const Row: WithInstallType<typeof _Row>;
export declare const Col: WithInstallType<typeof _Col>;
declare const _default: {
    Row: WithInstallType<import("vue").DefineComponent<{
        align: {
            type: import("vue").PropType<"top" | "bottom" | "middle">;
            default: "top" | "bottom" | "middle";
            validator(val: "top" | "bottom" | "middle"): boolean;
        };
        gutter: {
            type: import("vue").PropType<number | import("./type").GutterObject | (number | import("./type").GutterObject)[]>;
            default: number;
        };
        justify: {
            type: import("vue").PropType<"center" | "end" | "start" | "space-around" | "space-between">;
            default: "center" | "end" | "start" | "space-around" | "space-between";
            validator(val: "center" | "end" | "start" | "space-around" | "space-between"): boolean;
        };
        tag: {
            type: StringConstructor;
            default: string;
        };
    }, {
        rowStyle: import("vue").ComputedRef<{}>;
        size: import("vue").Ref<string>;
        rowClasses: import("vue").ComputedRef<(string | {
            [x: string]: "center" | "end" | "start" | "top" | "bottom" | "middle" | "space-around" | "space-between";
        })[]>;
    }, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
        align: {
            type: import("vue").PropType<"top" | "bottom" | "middle">;
            default: "top" | "bottom" | "middle";
            validator(val: "top" | "bottom" | "middle"): boolean;
        };
        gutter: {
            type: import("vue").PropType<number | import("./type").GutterObject | (number | import("./type").GutterObject)[]>;
            default: number;
        };
        justify: {
            type: import("vue").PropType<"center" | "end" | "start" | "space-around" | "space-between">;
            default: "center" | "end" | "start" | "space-around" | "space-between";
            validator(val: "center" | "end" | "start" | "space-around" | "space-between"): boolean;
        };
        tag: {
            type: StringConstructor;
            default: string;
        };
    }>>, {
        tag: string;
        justify: "center" | "end" | "start" | "space-around" | "space-between";
        align: "top" | "bottom" | "middle";
        gutter: number | import("./type").GutterObject | (number | import("./type").GutterObject)[];
    }>>;
    Col: WithInstallType<import("vue").DefineComponent<{
        flex: {
            type: import("vue").PropType<string | number>;
        };
        lg: {
            type: import("vue").PropType<number | import("./type").BaseColProps>;
        };
        md: {
            type: import("vue").PropType<number | import("./type").BaseColProps>;
        };
        offset: {
            type: NumberConstructor;
            default: number;
        };
        order: {
            type: NumberConstructor;
            default: number;
        };
        pull: {
            type: NumberConstructor;
            default: number;
        };
        push: {
            type: NumberConstructor;
            default: number;
        };
        sm: {
            type: import("vue").PropType<number | import("./type").BaseColProps>;
        };
        span: {
            type: NumberConstructor;
            default: number;
        };
        tag: {
            type: StringConstructor;
            default: string;
        };
        xl: {
            type: import("vue").PropType<number | import("./type").BaseColProps>;
        };
        xs: {
            type: import("vue").PropType<number | import("./type").BaseColProps>;
        };
        xxl: {
            type: import("vue").PropType<number | import("./type").BaseColProps>;
        };
    }, {
        size: import("vue").Ref<string>;
        colClasses: import("vue").ComputedRef<{}>;
        colStyle: import("vue").ComputedRef<Record<string, string>>;
    }, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
        flex: {
            type: import("vue").PropType<string | number>;
        };
        lg: {
            type: import("vue").PropType<number | import("./type").BaseColProps>;
        };
        md: {
            type: import("vue").PropType<number | import("./type").BaseColProps>;
        };
        offset: {
            type: NumberConstructor;
            default: number;
        };
        order: {
            type: NumberConstructor;
            default: number;
        };
        pull: {
            type: NumberConstructor;
            default: number;
        };
        push: {
            type: NumberConstructor;
            default: number;
        };
        sm: {
            type: import("vue").PropType<number | import("./type").BaseColProps>;
        };
        span: {
            type: NumberConstructor;
            default: number;
        };
        tag: {
            type: StringConstructor;
            default: string;
        };
        xl: {
            type: import("vue").PropType<number | import("./type").BaseColProps>;
        };
        xs: {
            type: import("vue").PropType<number | import("./type").BaseColProps>;
        };
        xxl: {
            type: import("vue").PropType<number | import("./type").BaseColProps>;
        };
    }>>, {
        push: number;
        offset: number;
        order: number;
        span: number;
        tag: string;
        pull: number;
    }>>;
};
export default _default;
