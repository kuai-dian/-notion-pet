/**
 * tdesign v0.8.0
 * (c) 2022 tdesign
 * @license MIT
 */

import _defineProperty from '@babel/runtime/helpers/defineProperty';
import { defineComponent, createVNode, h } from 'vue';
import { prefix } from '../config.js';

var name = "".concat(prefix, "-addon");
var _Addon = defineComponent({
  name: name,
  inheritAttrs: false,
  props: {
    prepend: {
      type: [String, Function],
      "default": function _default() {
        return "";
      }
    },
    append: {
      type: [String, Function],
      "default": function _default() {
        return "";
      }
    }
  },
  methods: {
    renderAddon: function renderAddon(h2, type, addon) {
      var addonNode;

      if (this.$slots[type]) {
        addonNode = this.$slots[type](null);
      } else if (typeof addon === "string") {
        addonNode = addon;
      } else if (typeof addon === "function") {
        addonNode = addon(h2);
      } else {
        addonNode = null;
      }

      return addonNode ? createVNode("span", {
        "class": "".concat(name, "__").concat(type)
      }, [addonNode]) : addonNode;
    }
  },
  render: function render() {
    var _ref;

    var prepend = this.renderAddon(h, "prepend", this.prepend);
    var append = this.renderAddon(h, "append", this.append);
    var defaultSlot = this.$slots["default"] ? this.$slots["default"](null) : [null];
    var className = [name, (_ref = {}, _defineProperty(_ref, "".concat(name, "--prepend"), prepend), _defineProperty(_ref, "".concat(name, "--append"), append), _ref)];

    if (!prepend && !append) {
      return defaultSlot[0];
    }

    return createVNode("div", {
      "class": className
    }, [prepend, defaultSlot[0], append]);
  }
});

export { _Addon as default };
//# sourceMappingURL=addon.js.map
